      PROGRAM OBELIX
      IMPLICIT REAL*8(A-H,O-Z)
C    OBERPROGRAMM FUER EINTEILCHENOPERATOREN MIT EINTEILCHEN PUNKTIERTEN DC
C
C     2.7.93 UMSTELLUNG AUF PARAMETER H.M.H
C     3.8.98 ANPASSUNG AN 6 CLUSTER STREU-OBER H.M.H.
C     16.3.00 DURCH EINLESEN VON IBOUND UNGLEICH NULL (3.PARAMETER AUF
C             ERSTER KARTE) WIRD EINE ISOSPINKOPPLUNG FUER BOUND-STATE
C             FUNKTIONEN ERMOEGLICHT H.M.H.
C
C EINGABE 
C        
C JEDER INDEX I) BEZEICHNET EINE KARTE 
C INTEGERS IM FORMAT 10I3,REALS IM FORMAT E12.4
C 
C    1) MAIAUS,MELAUS,IBOUND
C          MAIAUS OUTPUT IN MAIN 
C          MELAUS OUTPUT IN ELEML
C        IBOUND UNGLEICH NULL, ISOSPIN KOPPLUNG MOEGLICH
C    2) STEUERZAHLEN NREG(K),K=1,2
C       K=1,2  NREG(K)=0  OPERATOR K WIRD NICHT GERECHNET
C                     =1  OPERATOR K WIRD GERECHNET     
C       NORMARTIG, LADUNGSARTIG
C    3) ZAHL DER MAXIMAL ZU PERMUTIERENDEN TEILCHEN ODER GRUPPEN     KZP
C    4) ZAHL DER ZERLEGUNGEN=NZF,ZAHL DER TEILCHEN =NZT          NZF NZT
C
C
C DER FOLGENDE DATENSATZ MUSS FUER JEDE ZERLEGUNG WIEDERHOLT WERDEN
C    A) ZAHL DER CLUSTER,ZAHL DER SPIN-ISOSPIN-          NZC,NZG,MZG,NOL
C       PRODUKTE,ZAHL DER KOMBINATIONEN DER SPIN-ISOSPIN-PRODUKTE,
C       NUMMER DER AUSGEZEICHNETEN RELATIVFUNKTION
C    B) ZAHL DER TEILCHEN IM CLUSTER N, N=1,NZC              NGRV(2,N, )
C   C1) 1.SPIN-ISOSPIN-PRODUKT                                       NZH
C   C2) 2.SPIN-ISOSPIN-PRODUKT                                       NZH
C ....                                                               NZH
C CNZG) NZG.SPIN-ISOSPIN-PRODUKT                                     NZH
C
C     MIT DEN FOLGENDEN COF KOENNEN FESTGELEGT ERDEN
C     S,S3 UND T,T3
C
C   D1) KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C   D2) KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C ....                                                             
C DNZG) KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C     PROTON  SPIN AUF  = 1                                             
C     PROTON  SPIN AB   = 2                                             
C     NEUTRON SPIN AUF  = 3                                             
C     NEUTRON SPIN AB   = 4                                             
C     BEI JEDER FUNKTION MUSS DIE Z-KOMPONENTE DES SPINS MAXIMAL SEIN
C     NOL GIBT DIE ZAHL DER CLUSTER IN DER ERSTEN GRUPPE AN
C  
C
      INCLUDE 'par.ober'
C
C
      PARAMETER (NZTMA1=NZTMAX-1,  NZMAT=MZGMAX*MZGMAX)
C
      COMMON /COMY/ D(100)
C
      COMMON /CSPIN/ NALG(NZTMAX,3)
C
      COMMON /CUM/ NPERM(NZCMAX+1,NZCMAF),NH(7,4),NKOR(NZTMAX,7),NP(5)
C
      COMMON /CKO/ VEC(NZTMAX,NZTMA1,NZFMAX)
C
      COMMON /CPER/ NZD(NZTMAX),MAXLIQ,MAXLIS,MAXLIT,MZGS,NBAND3
C
      COMMON /CEL/ KBAND,MAXLI,MERKS(NZGMAX,NZGMAX),MG(NZCMAX),
     *             NTP(NDIM1), NDEL,NFAK(NZCMAX+1),NFL,NFR,MELAUS
C
      COMMON /UTT/ UTOT(NNMAX,MZGMAX,MZGMAX),JXAL(NNMAX),
     *             IWQ(NNMAX)
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C 
      COMMON NSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),               
     *       MMOEG(NDIM3),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C       
      COMMON /STX/ JHUX(NNMAX)                                   
      COMMON /DUMMY/ COF(MZGMAX,NZGMAX,NZFMAX),
     *         NCOF1(MZGMAX,NZGMAX,NZFMAX),                         
     *         NCOF2(MZGMAX,NZGMAX,NZFMAX)                          

C       
      DIMENSION NV(NZCMAX),NREG(NZOPER)
      DIMENSION NS(NZGMAX,NZFMAX),MS(MZGMAX,NZFMAX)
      DIMENSION MB(NZFMAX),MC(NZFMAX),MZG(NZFMAX),NOL(NZFMAX)
      DIMENSION NZC(NZFMAX),NZG(NZFMAX),NSS(2,NZGMAX,NZFMAX)
      DIMENSION NMASSE(2,NZGMAX,NZFMAX),NLAD(2,NZGMAX,NZFMAX)
      DIMENSION MSS(2,MZGMAX,NZFMAX),MMASSE(2,MZGMAX,NZFMAX)
      DIMENSION MLAD(2,MZGMAX,NZFMAX), FAKTOR(MZGMAX,MZGMAX)
      DIMENSION NZH(NZTMAX,NZGMAX,NZFMAX)
      DIMENSION NGRV(2,NZCMAX,NZFMAX)
      DIMENSION NSU(NZCMAX,NZFMAX), NSU1(NZFMAX), NSU2(NZFMAX),
     *          NKSU(NZFMAX)                       
      DIMENSION LC(NZTMAX), LCALT(NZTMAX),IMV(NZMAT), UM(NZMAT)
C
C
      OPEN(UNIT=3,STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=4,STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=5,FILE='INOB',STATUS='OLD')
      OPEN(UNIT=6,FILE='OUTPUT')
      OPEN(UNIT=8,FILE='OBOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=9,STATUS='UNKNOWN',FORM='UNFORMATTED')
C
      INPUT=5
      NBAND3= 4
      NB9=9
  612 FORMAT('0 NORMARTIGE OPERATOREN')
  613 FORMAT('0 LADUNGSARTIGE OPERATOREN')
 1000 FORMAT(24I3) 
 1001 FORMAT(10I3)
1003  FORMAT(' AUSDRUCK DER TERME WIE AUF BAND',/)
1004  FORMAT(1X,8E12.4)
 1006 FORMAT (41H0 LISTE DER MATRIXELEMENTE ZWISCHEN DER  ,I3,
     1          19H TEN STRUKTUR DER  ,I3,20H CLUSTEREINTEILUNG  /
     2        30X, 9H UND DER ,I4,19H TEN STRUKTUR DER  ,I3,
     3          20H CLUSTEREINTEILUNG  )
 1010 FORMAT (1H1)
 1011 FORMAT (16H  DEFINITION DES   ,I3,4H TEN,
     127H SPIN-ISOSPIN-PRODUKTES ZUR    ,I3,4H TEN,
     2 18H CLUSTEREINTEILUNG   )
 1012 FORMAT(9H  CLUSTER     ,I3,5X,4I3)
 1013 FORMAT  (45H  DEFINITION DER ZUSAMMENGESETZTEN STRUKTUREN  )
 1014 FORMAT (3H0 /,I3,2H ,,I3,4H ) = ,/)
 1015 FORMAT(5(F10.4,4H  //,I3,2H ,,I3,4H )   ))
 1020 FORMAT(22H SPEICHERPLATZ ZU ENG ,3I10)
2011  FORMAT   (19H0 BERECHNET WERDEN )
 1090 FORMAT(1H0)
 5000 FORMAT (21H SPEICHERPLATZBEDARF:,3I10)
C
      D(1)=.0
      D(2)=.0
      DO 199 I=2,99
      HMH=I
  199 D(I+1) = LOG(HMH)+D(I)
CC
      KBAND=3
      READ (INPUT,1000) MAIAUS,MELAUS,IBOUND
      READ(INPUT,1000) (NREG(K),K=1,2)
      READ(INPUT,1000) KZP
      IF(KZP.GT.MAXID) STOP 'MAXID'
      NFAK(1)=1
      DO 300 K=1,KZP
  300 NFAK(K+1)=K*NFAK(K)
C         NFAK(I) = (I-1)!
C         DEFINITION VON NPERM, NPERM(1,K) =SIGNUM VON PERMUTATION K
C         NPERM(I,K) ENTHAELT DIE PERMUTATION
      NPERM(1,1)=1
      NPERM(2,1)=1
      DO702 NZP=2,KZP
      NBL=NFAK(NZP)
      NBH=NZP-1
      DO 702 L=1,NZP
      NZVL=L-1
      DO702 M=1,NBL
      ML=(L-1)*NBL+M
      NPERM(1,ML)=NPERM(1,M)*(-1)**(L+1)
      DO 704 NZL=1,NBH                                       
      IF(NZL+L.GT.NZP) GOTO 706               
      NVL=NZL                               
      GO TO 704           
  706 NVL=NZL+1                    
  704 NPERM(NVL+1,ML)=NPERM(NZL+1,M)
      NZVS=NZP+1-NZVL
      NPERM(NZVS,ML)=NZP 
  702 CONTINUE            
      READ(INPUT,1000)NZF,NZT                                       
  714 FORMAT(7H0NZT = ,I3,30HIST ZU GROSS, MAX 12 MOEGLICH    )
      IF (NZT.LE.12) GOTO 710
        WRITE(NOUT,714) NZT
      STOP
  710 CONTINUE     
      NZV= NZT-1
C        BLOCK EINGABE
      DO 1 K=1,NZF
      READ (INPUT,1001) NZC(K),NZG(K),MZG(K),NOL(K)
      IFEK=0
      IF(NZC(K).LE.NZCMAX) GOTO 2211
      WRITE(NOUT,*)'ZERLEGUNG ',K,' NZC ',NZC(K),' DIM=',NZCMAX
      IFEK=K
2211  IF(NZG(K).LE.NZGMAX) GOTO 2212
      WRITE(NOUT,*) ' ZERLEGUNG ',K,' NZG ',NZG(K),' DIM=',NZGMAX
      IFEK=K
2212  IF(MZG(K).LE.MZGMAX) GOTO 2213
      WRITE(NOUT,*) ' ZERLEGUNG ',K,' MZG ',MZG(K),' DIM=',MZGMAX
      IFEK=K
2213  M=NZC(K)
      IF(NOL(K).GE.4 .OR. NZC(K)-NOL(K) .GE. 4) GOTO 2214
      NSU(1,K)=NOL(K)
      NSU(2,K)=NZC(K)-NOL(K)
      NSU1(K)=1
      NSU2(K)=1
      NKSU(K)=2
      GOTO 2233
2214  WRITE(NOUT,*) 'SUBSTRUKTUR FUER BEIDE FRAGMENTE EINLESEN'
C     NKSU GIBT DIE ANZAHL DER SUBSTRUKTREN AN, STANDARD = 2
C     NSU GIBT DIE CLUSTER JE SUBSTRUKTUR AN       
C     EINE SUBSTRUKTUR SIND ALLE CLUSTER, DIE IHRE RELATIVKOORDINATEN
C     IN DER STANDARD REIHENFOLGE BILDEN
      READ(INPUT,1001) NKSU(K),(NSU(IX,K),IX=1,NKSU(K))        
      NSU1(K)=1
      IX=2
      JHX=NSU(1,K)                                               
2230  IF(JHX+NSU(IX,K) .GT. NOL(K)) GOTO 2231
      NSU1(K)= NSU1(K) +1           
      JHX=JHX+ NSU(IX,K)                                         
      IX= IX+1
      GOTO 2230
2231  IF(JHX.NE. NOL(K)) STOP ' FEHLER IN SUBSTRUKTUR FRAGMENT 1'
      DO 2232 IWY=NSU1(K)+1,NKSU(K)
2232  JHX=JHX+NSU(IWY,K)
      IF(JHX.NE.NZC(K)) STOP ' FEHLER IN SUBSTRUKTUR FRAGMENT 2'
      NSU2(K)= NKSU(K) - NSU1(K)
2233  READ (INPUT,1001) (NGRV(2,L,K), L=1,M)
      IF(NGRV(2,M,K).GT.0) GOTO 2244
      WRITE(NOUT,*) 'CLUSTER MIT TEILCHENZAHL = 0',(NGRV(2,L,K),L=1,M)
      IFEK=K
2244  NGRV(1,1,K) =1
      DO 2 L=2,M
    2 NGRV(1,L,K) =NGRV(1,L-1,K)+NGRV(2,L-1,K)
C      NGRV(1,..) ANFANGSNR DER CLUSTER,NGRV(2,..) TEILCHEN IM CLUSTER
      IF(NGRV(1,M,K)+NGRV(2,M,K).EQ.NZT + 1) GOTO 2245
      WRITE(NOUT,*) 'GESAMT-TEILCHENZAHL  FALSCH',(NGRV(2,L,K),L=1,M)
      IFEK=K
2245  KK = NOL(K) + 1
      KK = NGRV(1,KK,K)
      LM=NZG(K)
      DO 3 L=1,LM
    3 READ (INPUT,1000) (NZH(N,L,K),N=1,NZT)
C       EINLESEN DER ELEMENTAREN SPINFUNKTIONEN
      IF(IFEK.EQ.0) GOTO 2246
      WRITE(NOUT,*) ' FEHLER IN ZERLEGUNG ',K
      STOP 2246
2246  DO 940 L=1,LM
C       BESTIMMUNG DER GESAMTSPINS NS, FRAGMENTSPINS NSS
C        FRAGMENTMASSEN NMASSE, FRAGMENTLADUNGEN NLAD
      NS(L,K)=0
      NSS(1,L,K) = 0
      NSS(2,L,K) = 0
      NMASSE(1,L,K) = KK - 1
      NMASSE(2,L,K) = NZT - KK + 1
      NLAD(1,L,K) = 0
      NLAD(2,L,K) = 0
      DO 940 N=1,NZT
      NNS =           2*(NZH(N,L,K)-2*(NZH(N,L,K)/2))-1
        KZ = 1
      IF(N.GE.KK) KZ = 2
      NLAD(KZ,L,K) = NLAD(KZ,L,K) -(NZH(N,L,K)-1)/2 + 1
      NSS(KZ,L,K) = NSS(KZ,L,K) + NNS
  940 NS(L,K)=NS(L,K)+NNS
      N=MZG(K)
      DO 7   L = 1,LM
    7 READ (INPUT,1000) (NCOF1(LL,L,K),NCOF2(LL,L,K),LL=1,N)
C      CHECK EINGABE
      DO 950 LL=1,N
      I=0
      DO 951 L=1,LM
      IF (NCOF1(LL,L,K).EQ.0) GOTO 951
       IF(I.GT.0) GOTO 954
       I=1
C       SETZEN DER WERTE
      MS(LL,K)=NS(L,K)
      MMASSE(1,LL,K) = NMASSE(1,L,K)
      MMASSE(2,LL,K) = NMASSE(2,L,K)
      MLAD(1,LL,K) = NLAD(1,L,K)
      MLAD(2,LL,K) = NLAD(2,L,K)
      MSS(1,LL,K) = IABS(NSS(1,L,K))
      MSS(2,LL,K) = IABS(NSS(2,L,K))
      GO TO 951
C         CHECK DER WERTE
  954 IF(ABS(MS(LL,K)-NS(L,K))+ABS(MMASSE(1,LL,K)- NMASSE(1,L,K))+
     1 ABS(MMASSE(2,LL,K)-NMASSE(2,L,K)) .GT. 0) THEN
          WRITE(NOUT,1040) L,LL,K
         STOP 'SPIN'
      ENDIF
 1040 FORMAT(' FEHLER IM SPINPRODUKT',I4,' DER GEKOPPELTEN FUNKTION',I4,
     *' IN ZERLEGUNG',I4)
      IF(IBOUND .NE. 0)  GOTO 956
      IF( ABS(MLAD(1,LL,K)-NLAD(1,L,K))+
     2     ABS(MLAD(2,LL,K)-NLAD(2,L,K)).NE.0)  THEN
          WRITE(NOUT,1040) L,LL,K
         STOP 'LADUNG'
      ENDIF
  956 MSS(1,LL,K) = MAX0(MSS(1,LL,K),IABS(NSS(1,L,K)))
      MSS(2,LL,K) = MAX0(MSS(2,LL,K),IABS(NSS(2,L,K)))
951   CONTINUE            
  950 CONTINUE
C      BERECHNUNG DER COEFFIZIENTEN
      DO 1   L = 1,LM 
      DO 1   LL = 1,N               
      COF(LL,L,K) = .0              
      IF(NCOF1(LL,L,K).EQ.0) GOTO1
      AB1 = NCOF1(LL,L,K)
      AB2 = NCOF2(LL,L,K)
      COF(LL,L,K) = (AB1/ABS(AB1)) * SQRT(ABS(AB1)/AB2)
    1 CONTINUE 
C      HIERNACH WERDEN NCOF1,NCOF2,NMASSE,NLAD,NSS NICHT MEHR VERWENDET
C      NEUER BLOCK
C     AUSDRUCK DER FUNKTIONSEIGENSCHAFTEN
      DO 6 K=1,NZF
      LM=NZG(K)
      DO 5 L=1,LM
      WRITE (NOUT,1011) L,K
      WRITE (NOUT,1090)
      MM=NZC(K)
      DO 5 M=1,MM
      N1=NGRV(1,M,K)
      N2=NGRV(2,M,K)+N1-1
    5 WRITE (NOUT,1012) M,(NZH(N,L,K),N=N1,N2)
      WRITE (NOUT,1013)
      WRITE (NOUT,1090)
      LM=MZG(K)
      DO 6 L=1,LM
      WRITE (NOUT,1014) L,K
      MM=NZG(K)
      WRITE (NOUT,1015) (COF(L,M,K),M,K,M=1,MM)
    6 WRITE(NOUT,1016)  MMASSE(1,L,K),MMASSE(2,L,K),MLAD(1,L,K),
     1        MLAD(2,L,K),MSS(1,L,K),MSS(2,L,K),MS(L,K)
 1016 FORMAT(/30H ZERLEGUNG IN DIE GRUPPEN VON   ,I2,4H UND,I2,
     1     10H NUKLEONEN  /4H MIT,I2,4H UND,I2,10H LADUNGEN   /
     2     12H SPINS SIND  ,I2,7H /2 UND,I2,3H /2  /
     3   15H GESAMTSPIN IST   ,I2,3H /2    /)
      WRITE (NOUT,1090)
      WRITE (NOUT,2011)   
      IF(NREG(1).NE.0) WRITE(NOUT,612)
      IF(0.NE.NREG( 2)) WRITE (NOUT,613)
C       ENDE BLOCK AUSSCHREIBEN
C     NOTIEREN DER FUNKTIONSEIGENSCHAFTEN
      REWIND NBAND2
      WRITE(NBAND2) NZF,NZT,NZV,(NREG(K),K=1,2)
      DO 4 K=1,NZF
      M=NZC(K)
      WRITE(NBAND2) NZC(K),MZG(K),NOL(K)
      LL=MZG(K)
      WRITE(NBAND2) ((MMASSE(N,L,K),MLAD(N,L,K),MSS(N,L,K),N=1,2),
     1     MS(L,K),L=1,LL)
    4 WRITE (NBAND2) ((NGRV(N,L,K),L=1,M),N=1,2),NKSU(K)
C      NIERNACH WERDEN MLAD,MMASSE,MSS NICHT MEHR VERWENDET
C     MATRIXELEMENTE ZWISCHEN EINFACHEN ALGEBRAISCHEN STRUKTUREN
      DO 10 MFL=1,NZF
      I1=NZC(MFL)
      I3=I1-1
      I5=I3-1
      JSU(1,1)=1
      DO 12 M=1,I1
      JSU(2,M)=NSU(M,MFL)
      JSU(1,M+1)= JSU(1,M) + JSU(2,M)
      NGRU(1,M,1) =NGRV(1,M,MFL)
   12 NGRU(2,M,1)=NGRV(2,M,MFL)
      NGRU(1,NZC(MFL)+1,1)= NGRU(1,NZC(MFL),1) + 1
      KSU=NKSU(MFL)
      CALL SJACK(I1,NSU1(MFL),NSU2(MFL),MFL)
      DO 10 MFR=1,MFL
      I2=NZC(MFR)
      I4=I2-1
      WRITE(NBAND2)  ((VEC (M,K,MFR),M=1,NZT),K=1,I4)
      DO 13 M=1,I2
      NGRU(1,M,2)=NGRV(1,M,MFR)
   13 NGRU(2,M,2)=NGRV(2,M,MFR)
C     ADRESSENSUCHREGISTER
C      HIER WERDEN DIE MOEGLICHEN TEILCHENAUSTAEUSCHE VORBEREITET
      DO 22 K=1,I1
      I=0
      NZ=NGRU(2,K,1)
      NZZ=(NZ+1)**I2-(NZ+1)**I4
C      NZZ ZAEHLT DIE MOEGLICHKEITEN AB NZ TEILCHEN AUF I2 CLUSTER ZU
C     VERTEILEN, OHNE TEILCHENZAHLERHALTUNG,DIESE WIRD ERST NACH LOOP 24
C     IN ORDNUNG GEBRACHT
      DO 23 L=1,NZZ
      J=0
      KK=L
      DO 24 M=1,I2
      MM=I2-M+1
      NV(MM)=KK/(NZ+1)**(MM-1)
      KK=KK-NV(MM)*((NZ+1)**(MM-1))
   24 J=J+NV(MM)
      IF(J.NE.NZ) GOTO 23
      DO 26 M=1,I2
      IF(NV(M).GT.NGRU(2,M,2)) GOTO 23
   26 CONTINUE
      I=I+1
      IF (I.GT.NDIMVV) STOP 'NDIMVV'
      MVV(I,K) = L
C      IN MVV(K,L) STEHT DIE NUMMER NZZ,DIE TEILCHEN VON CLUSTER L LINKS
C      AUF DIE CLUSTER RECHTS ZU VERTEILEN. ES GIBT MG(L) MOEGLICHKEITEN
C      DAFUER
   23 CONTINUE
   22 MG(K)=I
C      MG(K) ENTHAELT DIE ANZAHL DER TEILCHENAUSTAEUSCHE DES K-TEN
C      CLUSTERS LINKS IND DIE CLUSTER RECHTS
      MGW(1)=1
      DO 27 K=1,I1
   27 MGW(K+1)=MGW(K)*MG(K)
C        UNTERBLOCK ENDE
      MAXLIQ=MGW(I1)
C      MGW(I1) ENTHAELT EINE OBERE ABSCHAETZUNG DER ANZAHL DER DOPPEL-
C      NEBENKLASSEN SYMBOLE, NAEMLICH DIE PRODUKTE DER ZEILENAUSTAEUSCHE
      WRITE(NOUT,*) ' MAXLIQ,NDIM3',MAXLIQ,NDIM3
      IF(MAXLIQ.GT.NDIM3) STOP
      DO 48 K=1,MAXLIQ                
   48 MMOEG(K)=0
      I=0
      KK=1                          
   28 DO 29 K=KK,I1
   29 NV(K)=1                                                           
      DO 30 K=1,I1                                                      
      M=NV(K)
   30 MB(K)=MVV(M,K)
      DO 31 L=1,I2
      L1=I2-L+1                                                   
      M=0                                   
      DO 32 K=1,I1
      MC(K)=MB(K)/((NGRU(2,K,1)+1)**(I2-L))
      MB(K)=MB(K)-MC(K)*((NGRU(2,K,1)+1)**(I2-L))
   32 M=M+MC(K) 
      IF(M.NE.NGRU(2,L1,2)) GOTO 40
   31 CONTINUE
      I=I+1
      J=NV(1)
      IF(I5.LE.0) GOTO 1401
      DO 34    K = 1,I5
   34 J=J+(NV(K+1)-1)*MGW(K+1)
 1401 MMOEG(J) = I
   40 DO 41 K=1,I1
      KK=I1-K+1
      IF(NV(KK).LT.MG(KK)) GOTO 42
   41 CONTINUE
      GO TO 44
   42 NV(KK)=NV(KK)+1
      KK=KK+1
      GO TO 28
C      UNTERBLOCK ENDE
   44 MAXLIT=I
C      MAXLIT IST DIE ANZAHL DER DOPPELNEBENKLASSEN
C    MMOEG(J)=N BEDEUTET,DAS DC-SYMBOL N HAT DIE ADRESSE J,WOBEI
C     J FESTLEGT WELCHE SPALTENAUSTAEUSCHE VORZUNEHMEN SIND VON LINKS
C     NACH RECHTS. J=NV(1)+SUMME (NV(K+1)-1)*MGW(K+1),K=1,NZCL-2
      J=1     
      DO 46 K=1,I1
      DO 46 L=1,I2
      MSR(L,K)=J           
   46 J=J+1  
      M=I1*I2
      MAXLIS=M
C      MAXLIS =ANZAHL DER MOEGLICHEN ET-WW IN EINEM DC
      MAXLI=MAXLIT*MAXLIS
C     MAXLI= ANZAHL DER PUNKTIERTEN DC
      WRITE(NOUT,*) ' MAXLI,NDIM1', MAXLI,NDIM1
      IF(MAXLI.GT.NDIM1) STOP
      NZGL=NZG(MFL)
      NZGR=NZG(MFR)
      MZGL=MZG(MFL)
      MZGR=MZG(MFR)
      MZGS = MZGR*MZGL
      DO 50   MKC = 1,2
C        LOOP UEBER OPERATOREN
      IF(0.EQ.NREG(MKC))GO TO 50
      NTE2=0   
      DO 52   K= 1,MAXLI
52    NTP(K)=0
      GO TO(602,603),MKC
  602 WRITE(NOUT,612)
      GO TO 4022
  603 WRITE(NOUT,613)
 4022 CONTINUE
      REWIND KBAND
      DO 60 NFL=1,NZGL
C         LOOP ELEMENTARE SPINFUNKTIONEN LINKS
      DO 64 K=1,NZT
   64 NALG(K,1)=NZH(K,NFL,MFL)
      DO 60 NFR=1,NZGR
C         LOOP ELEMENTARE SPINFUNKTIONEN RECHTS
      DO 65 K=1,NZT
   65 NALG(K,2)=NZH(K,NFR,MFR)
      NDEL = NS(NFL,MFL) - NS(NFR,MFR)
      NDEL = NDEL/2
      CALL ELEML(MKC)
60    CONTINUE
C         ELEMENTARE LISTEN ERSTELLT
      JPTOT=0
      DO 66 I=1,MAXLI
      IF(ABS(NTP(I)).EQ. 0) GOTO 66
      JPTOT=JPTOT + 1
      if(jptot.gt.nnmax) write(nout,*)'bei elementnr',i,' = ',ntp(i),
     *' wird dimension',nnmax,'erreicht',jptot
      JXAL(JPTOT)= I
66    CONTINUE
      NNN=JPTOT
      REWIND NBAND3
      CALL PERME (MKC,1,NTP,JXAL,JPTOT)
C      MIT DIESEM AUFRUF WERDEN DIE NNN REPRESENTANTEN FUER WW INDC AUF
C      NBAND3 GESCHRIEBEN
       WRITE(NOUT,777) NNN
777    FORMAT(' ES GIBT',I5,' PDCS ':' UND ',I3,' UNTEROPERATOREN')
       IF(NNN.GT.NNMAX) STOP 'NNMAX'
      IF(NNN.EQ.0) GOTO 700
C     MATRIXELEMENTE ZWISCHEN ZUSAMMENGESETZTEN STRUKTUREN
      DO 130 KFL=1,MZGL
      DO 130 KFR=1,MZGR
      NDELK=MS(KFL,MFL)-MS(KFR,MFR)            
      NDEL = NDELK/2
      SL=MS(KFL,MFL)                                                         494
      SML=.5*SL                                                              495
      F=1.                                                                   501
      FAKTOR(KFL, KFR)=0.                                            
      Y=CLG(MS(KFR,MFR),ITEN,MS(KFL,MFL),MS(KFR,MFR),NDELK)  
      IF(Y.NE.0.) FAKTOR(KFL,KFR)=SQRT( MS(KFL,MFL) + 1.)/Y
C              
130   CONTINUE                                     
C
      REWIND KBAND
      DO 132 KFR=1,MZGR
      DO 132 KFL=1,MZGL
      DO 132 K=1,NNN
132   UTOT(K,KFL,KFR)=0.
      DO 134 NFL=1,NZGL
      DO 134 NFR=1,NZGR
C     write(nout,*)'nkc,nfl,nfr,merks',nkc,nfl,nfr,merks(nkc,nfl,nfr)
      IF(MERKS(NFL,NFR).EQ.0) GOTO 134
       READ(KBAND) IKM,(JHUX(KKX),NSP(KKX),KKX=1,IKM)
C      write(nout,*) IKM,(JHUX(KKX),NSP(KKX),KKX=1,IKM)
       JA=1
       DO 168 I=1,IKM
       DO 166 J=JA,JPTOT
       IF(JHUX(I) .NE. JXAL(J)) GOTO 166
       IWQ(I)= J
       GOTO 168
166    CONTINUE
       JA= J+1
168    CONTINUE
C      ZUORDNUNG DER MATRIXELEMETE FESTGELEGT
      DO 138 KFR=1,MZGR
      DO 138 KFL=1,MZGL
      A = FAKTOR(KFL,KFR)* COF(KFL,NFL,MFL)*COF(KFR,NFR,MFR)
      IF(A.EQ.0.) GOTO 138  
      DO 139 K=1,IKM   
139   UTOT(IWQ(K),KFL,KFR)=UTOT(IWQ(K),KFL,KFR)+A*NSP(K)
138   CONTINUE         
134   CONTINUE                                                       
      IF (MAIAUS.GT.0) WRITE (NOUT,1003)    
      REWIND NBAND3         
      REWIND NB9
      NTE1=0
      NTE2=0
      MERK=0
      DO 810    K = 1,NNN
      READ (NBAND3) N1, (LC(I6),I6=1,NZT)
      IF (MAIAUS.LT.1) GOTO 888
      WRITE (NOUT,1000) N1, (LC(I6), I6=1, NZT)
      WRITE (NOUT,1004) ((UTOT(K,KFL,KFR), KFL=1,MZGL), KFR=1, MZGR)
888   CONTINUE
      IMQ=0
      IM= -1
      DO 11 I=1,MZGL
      DO 11 J=1,MZGR
      IM= IM+1
      IF(ABS(UTOT(K,I,J)).LT.1.E-10) GOTO 11
      IMQ= IMQ+1
      IMV(IMQ)= IM
      UM(IMQ)= UTOT(K,I,J)
11    CONTINUE
      IF(IMQ.EQ.0) GOTO 810
      NTE2=NTE2+1        
      IF(MERK.EQ.0) GOTO 51                  
      DO 411 I=1,NZT 
      IF(LC(I).NE.LCALT(I)) GOTO 61
411   CONTINUE               
      IZT= 1                                         
      GOTO 8                                                    
51    MERK= 1                                
61    IZT=NZT 
      DO 77 I=1,NZT
77    LCALT(I)=LC(I)
      NTE1= NTE1+1  
8     WRITE(NB9) N1,IZT,IMQ,(LC(I),I=1,IZT),
     *             (IMV(I),UM(I),I=1,IMQ)
810   CONTINUE
      REWIND NB9                              
      WRITE(NOUT,*)'MFL,MFR,MKC,NNN,NTE1,NTE2',MFL,MFR,MKC,NNN,NTE1,NTE2
700   WRITE(NBAND2) NTE2,NTE2,NTE2
      DO 9 MTE=1,NTE2
      READ(NB9) N1,IZT,IMQ,(LC(I),I=1,IZT),
     *             (IMV(I),UM(I),I=1,IMQ)
9     WRITE(NBAND2) N1,IZT,IMQ,(LC(I),I=1,IZT),
     *             (IMV(I),UM(I),I=1,IMQ)     
C      ENDE LOOP OPERATOREN
50    CONTINUE
   10 CONTINUE
      WRITE(NOUT,3010)   
 3010 FORMAT(//18H ENDE DER RECHNUNG ) 
      STOP
      END
      SUBROUTINE ELEML(MKC)
      IMPLICIT REAL*8(A-H,O-Z)
C     SUBROUTINE ZUR AUFSTELLUNG DER ELEMENTAREN LISTEN 
C
C
      INCLUDE 'par.ober'
C
      PARAMETER (NZTMA1=NZTMAX-1)
C
      COMMON /CSPIN/ NALG(NZTMAX,3)
C
      COMMON /CUM/ NPERM(NZCMAX+1,NZCMAF),NH(7,4),NKOR(NZTMAX,7),NP(5)
C
      COMMON /CEL/ KBAND,MAXLI,MERKS(NZGMAX,NZGMAX),MG(NZCMAX),
     *             NTP(NDIM1), NDEL,NFAK(NZCMAX+1),NFL,NFR,MELAUS
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      COMMON NSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),  
     *       MMOEG(NDIM3),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C
      COMMON /STX/ JHUX(NNMAX)
C     
      DIMENSION NV(NZCMAX),NSG(NZCMAX,NZCMAX)
      DIMENSION NW(NZCMAX)
C
      DO 320 K=1,NZSORT
      I=0
      DO 321 L=1,NZT
      IF(NALG(L,1).NE.K) GOTO 321
          I=I+1
      NH(I+2,K)=L
  321 NH(1,K)=NFAK(I+1)
      NH(2,K)=I
  320 CONTINUE
C      NH(2,K) =  I =ANZAHL DER TEILCHEN VOM TYP K,  NH(1,K)= I!
C       NH(2+...I,K)= NUMMMER DES TEILCHEN VOM TYP K

      DO 21 K=1,MAXLI
   21 NSP(K) = 0 
      ISPZ1 = 0  
C      CHECK OB MATRIXELEMENT FUER SPINDIFFERENZ MOEGLICH IST
      IF(NDEL.NE.0) GOTO 90
      ISPZ1 = ISPZ1+1 
         LT= 1
510   DO 29 K=1,NZT
      NKOR(K,2)=K
   29 NALG(K,3)=NALG(K,2)
C      AN DIESER STELLE IST NALG(.,3) DIE SPINFUNKTION DER RECHTEN SEITE
C      NACH ANWENDUNG DER SPINOPERATOREN
C     AUFSUCHEN DER PERMUTATION P0
      DO 101 K=1,NZT
      NKOR(K,1)=K 
  101 NKOR(K,3)=K
      I=1
      DO 104 K=1,NZT
      IF(NALG(K,1).EQ.NALG(K,3)) GOTO 104
       K1=K+1
      DO 106 L=K1,NZT
      IF(NALG(K,1).EQ.NALG(L,3)) GOTO 107
  106 CONTINUE
      GO TO 161
C     SPINMATRIXELEMENT =0, NEUES PAAR WW-TEILCHEN
  107 NALG(L,3)=NALG(K,3)
      NALG(K,3)=NALG(K,1)
      J=NKOR(L,3)
      NKOR(L,3)=NKOR(K,3)
      NKOR(K,3)=J
      I=-I
  104 CONTINUE                          
      NP(1)=I                     
C      NP(1) ENTHAELT VORZEICHEN DER PERMUTATION P0,
C      NKOR(.,3) ENTHAELT DIE PERMUTATION P0
      DO 108 K=1,NZT
      L=NKOR(K,3)
  108 NKOR(L,4) =K
C      NKOR(.,4) INVERSE PERMUTATION ZU NKOR(.,3), P0**-1
      DO 110 K=1,NZT                     
      L=NKOR(K,2)
  110 NKOR(K,5)=NKOR(L,4)
C    NKOR(.,5) (INVERSE) PERMUTATION ZU NKOR(.,2)*P0**-1
      LT1=NKOR(LT,4)
       IF(MKC.NE.2) GOTO 117
C      CHECK OB WW-TEILCHEN PROTON
      IF(NALG(LT1,1).GT.2) GOTO 161
  117 DO 120 NF1=1,NH(1,1)
      DO 1121 KH=1,NH(2,1)
1121  NKOR(NH(KH+2,1),1)=NH(NPERM(KH+1,NF1)+2,1)
      NP(2)=NPERM(1,NF1)*NP(1)
      DO 120 NF2=1,NH(1,2)
      DO 1122 KH=1,NH(2,2)
1122  NKOR(NH(KH+2,2),1)=NH(NPERM(KH+1,NF2)+2,2)
      NP(3)=NPERM(1,NF2)*NP(2)
      DO 120 NF3=1,NH(1,3)
      DO 1123 KH=1,NH(2,3)
1123  NKOR(NH(KH+2,3),1)=NH(NPERM(KH+1,NF3)+2,3)
      NP(4)=NPERM(1,NF3)*NP(3)
      DO 120 NF4=1,NH(1,4)
      DO 1124 KH=1,NH(2,4)
1124  NKOR(NH(KH+2,4),1)=NH(NPERM(KH+1,NF4)+2,4)
      NP(5)=NPERM(1,NF4)*NP(4)
C     DURCH DIE 112* DO LOOPS  WERDEN ALLE PERMUTAIONEN P' IN NKOR(.,1)
C     ERZEUGT UND IN NP(NZSORT+1) DAS VORZEICHEN DER PERMUTATION
      DO 124 K=1,NZT
      DO 124 L=1,2
      M=NKOR(K,L+3)
      N=NKOR(M,1)
  124 NKOR(K,L+5)=N
      LT2=NKOR(LT1,1)
C      NKOR(.,6)=(P0**-1)*P',NKOR.,6) WIRD IM FOLGENDEN NICHT VERWENDET
C      NKOR(.,7)=PW*(P0**-1)*P'
C     KONSTRUKTION DES PUNKTIERTEN DC-SYMBOLS
      DO 130 K=1,I1
      K1=NGRU(1,K,1)
      K2=NGRU(2,K,1)+K1-1 
      DO 130 L=1,I2 
      L1=NGRU(1,L,2)
      L2=NGRU(2,L,2)+L1-1
      NSG(L,K)=0
      DO 132 M=K1,K2
      DO 1132 N=L1,L2
      IF(NKOR(N,7).NE.M)GOTO 135
      NSG(L,K)=NSG(L,K) +1
C      NSG(L,K) ENTHAELT DAS DC-SYMBOL FUER DAS L-TE CLUSTER RECHTS
C      UND K-TE CLUSTER LINKS
  135 IF(NKOR(N,7).EQ.LT2) MS21=L
1132   CONTINUE
      IF(M.EQ.LT2) MS11=K
  132 CONTINUE
  130 CONTINUE
C      ADRESSRECHNUNG
      DO 150 K=1,I1
      NW(K)=0
      DO 151 L=1,I2
  151 NW(K)=NW(K)+NSG(L,K)*(NGRU(2,K,1)+1)**(L-1)
      MM=MG(K)
      DO 154 M=1,MM
      IF(NW(K).EQ.MVV(M,K)) GOTO 150
  154 CONTINUE
  150 NV(K)=M
C     NV ENTHAELT DIE JEWEILIGE NR DES AUSTAUSCHES
      J=1
      DO 152 K=1,I3
  152 J=J+(NV(K)-1)*MGW(K)
C     J = ADRESSE DES DC-SYMBOLS,WIE IN HAUPT BEI 1401 BERECHNET
      J=MMOEG(J)
C     J=NUMMER DES DC-SYMBOLS
      J=I1*I2*(J-1)
      M=MSR(MS21,MS11)
C      DOPPELNEBENKLASSENINDEX VON TEILCHEN 1
      J=J+M
C      J=ADRESSE DES PUNKTIERTEN ET-DC,SO DASS ALLE MOEGLICHEN WW FUER EIN
C      DC NACHEINANDER ERFOLGEN
      NSP(J) = NSP(J) + NP(5)
      IF(MELAUS.LT.2) GOTO 120
      WRITE (NOUT,126) J,M,NSP(J),NP(5),LT,LT1,LT2,(NKOR(I,7),I=1,NZT)
     1 , (NKOR(I,4),I=1,NZT),(NKOR(I,1),I=1,NZT)
126   FORMAT(1X,I6,2I3,I4,3I3,36I2)
  120 CONTINUE
  161 LT=LT+1
      IF(LT.LE.NZT) GOTO 510
   90 CONTINUE
C     ADDITION DER LISTEN FUER GLEICHE SPINDIFFERENZEN
      MERKS(NFL,NFR) = 0
      IF (ISPZ1.EQ.0) GOTO 1
      JJ = 0
      IKM= 0  
      DO 53    I = 1,MAXLI
C      LOOP UEBER ALLE PUNKTIERTEN DC
      IW3 = IABS(NSP(I))
      IF(IW3.EQ.0) GOTO 53         
      JJ = JJ + IW3
      NTP(I) = NTP(I) + IW3
       IKM= IKM +1
       JHUX(IKM)= I
   53 CONTINUE
      IF(IKM.GT.NNMAX) WRITE(NOUT,*) 'IKM,NNMAX',IKM,NNMAX
      IF(IKM.GT.NNMAX) STOP 'NNMAX,ELEML'
      IF(JJ.EQ.0) GOTO 1
      MERKS(NFL,NFR) = 1
      WRITE(KBAND) IKM,(JHUX(I),NSP(JHUX(I)),I=1,IKM)
      IF (MELAUS.EQ.0) GOTO 407
      WRITE(NOUT,600)  NFL,NFR,IKM
c     CALL PERME (MKC,-1,NNN)
      CALL PERME (MKC,-1,NSP,JHUX,IKM)
  600 FORMAT(20H ELEMENTARE LISTE    ,2I3,' ANZAHL DER ME ',I5)
  407 DO 408 I=1,IKM        
  408 NSP(JHUX(I))=0.
    1 CONTINUE
      RETURN
      END
      SUBROUTINE PERME(MKC,KENN,NSTP,JHUX,IKM)
      IMPLICIT REAL*8(A-H,O-Z)
C      PERME WIRD GERUFEN MIT KENN=-1 VON ELEML ZUM AUSDRUCK FUER JEDE
C      ELEMENTARE SPINFUNKTION
C      PERME WIRD GERUFEN MIT KENN=1 VON HAUPT IMMER,SCHREIBT REPRESENTANTEN
C      FUER PUNKTIERTES DC AUF NBAND3
C      MAXLIT=ANZAHL DER DC
C      MAXLIQ=ANZAHL DER ZEILENAUSTAUSCHE >= MAXLIT
C      MAXLIS=ANZAHL DER MOEGLICHEN 2-TEILCHEN WW IN EINEM DC
C                                                                             53
C
      INCLUDE 'par.ober'
C
      COMMON /CPER/ NZD(NZTMAX),MAXLIQ,MAXLIS,MAXLIT,MZGS,NBAND3
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      COMMON NSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),
     *       MMOEG(NDIM3),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C
      DIMENSION NV(NZCMAX-1),NSG(NZCMAX,NZCMAX),
     *         NSTP(NDIM1),JHUX(NNMAX), NSH(4,NZCMAX,NZCMAX)
C      
      LKH=1                 
      DO 1 K=1,MAXLIT
C     LOOP UEBER DC
      NAD=(K-1)*MAXLIS
      DO 2 LH=LKH,IKM                       
      AHX=JHUX(LH)-NAD                         
      IF((AHX-1.)*(AHX-MAXLIS).LE.0.) GOTO 3
2     CONTINUE    
      GOTO 1               
C     FALLS KEIN BEITRAG FUER DIESES DC
C       KONSTRUKTION EINES REPRESENTANTEN DES PUNKTIERTEN DC-SYMBOLS
3      DO 6 L=1,MAXLIQ                                                
      IF(K.EQ.MMOEG(L)) GOTO 10                  
    6 CONTINUE
   10 M=L         
C     M=ADRESSE DES K-TEN DC-SYMBOLS
C     KONSTRUKTION DES DC-SYMBOLS
      DO 12 N=2,I1      
      NN=I1-N+1       
      NV(NN)=(M-1)/MGW(NN)+1
      M=M-(NV(NN)-1)*MGW(NN)
      I=NV(NN)
      II=MVV(I,NN)
      DO 16 I=1,I2
      IJ=I2-I+1
      NSG(IJ,NN)=II/(NGRU(2,NN,1)+1)**(IJ-1)
   16 II=II-NSG(IJ,NN)*(NGRU(2,NN,1)+1)**(IJ-1)
   12 CONTINUE
      DO 18 M=1,I2
      NSG(M,I1)=NGRU(2,M,2)
      DO 18 N=1,I3
   18 NSG(M,I1)=NSG(M,I1)-NSG(M,N)
C     NSG(L,K) ENHAELT DAS DC,L-TES CLUSTER RECHTS,K-TES CLUSTER LINKS
C     BESTIMMEN DES REPRESENTANTEN DES DC-SYMBOLS
      I=1
      DO 20 J=1,I1
      DO 20 L=1,I2
      M=NSG(L,J)
      IF(M.LE.0) GOTO 20
       DO 21   N = 1,M
      NSH(N,L,J)=I
   21 I=I+1
   20 CONTINUE
      I=1
      DO 24 L=1,I2
      DO 24 J=1,I1
      M=NSG(L,J)
      IF(M.LE.0) GOTO 24
       DO 25   N = 1,M
      NZD(I)=NSH(N,L,J)
   25 I=I+1
   24 CONTINUE
C     REPRESENTANT BESTIMMT
      DO 30 LKH=LH,IKM
      MHILF=JHUX(LKH)-NAD
      IF(MHILF.GT.MAXLIS) GOTO 1
C     DC-INDEX TEILCHEN 1
c     mhilf = msr(l1,k1), es sind l1 und k1 zu bestimmen
      K1=(MHILF-1)/I2 +1
      L1=MHILF-(K1-1)*I2
      N1=NSH(1,L1,K1)
C     N1 REPRESENTANT FUER WW TEILCHEN 1
      IF(KENN.LT.0) GOTO 140
      WRITE(NBAND3) N1, (NZD(I6),I6=1,NZT)
      GO TO 30           
  140 WRITE(NOUT,101) NSTP(JHUX(LKH)),JHUX(LKH),MKC,N1,
     * (NZD(I),I=1,NZT)  
   30 CONTINUE                       
    1 CONTINUE 
      RETURN                           
  101 FORMAT(I5,I9,2X,4H (/O,I2,2H (,I2,3H )/ ,12I3)
      END
      SUBROUTINE SJACK(K1,KSU1,KSU2,MFL)
      IMPLICIT REAL*8 (A-H,O-Z)
C     DIESE SUBROUTINE BERECHNET DIE JACOBI KOORDINATEN UND SCHREIBT
C     SIE AUF BAND
C     EINGABE !  K1 = ZAHL DER CLUSTER, MFL= NR DER ZERLEGUNG
C     KSU1 IST DIE ANZAHL DER SUBSTRUKTUREN IN FRAGMENT1
C     KSU2 IST DIE ANZAHL DER SUBSTRUKTUREN IN FRAGMENT2
C     SVEC ENTHAELT DIE JACOBIKOORDINATEN ALS FUNKTION DER EINTEILCHEKOORD
C     DIE ORTHOGONALE TRANSFORMATION WIRD OHNE!!! DEN SCHWERPUNKT AUSGEFUE
C     RVEC ENTHAELT DIE DAZU TRANSPONIERTE MATRIX
C     C(.,.,K) =1, KENNZEICHNET DIE INNEREN JACOBIKOOR. VON CLUSTER K
C      C(.,.,K) =1 FUER K=NZC CHARAKTERISIERT DIE RELATIV KOORDINATEN
C
C
      INCLUDE 'par.ober'
C
      PARAMETER (NZTMA1=NZTMAX-1)
C
      COMMON /CKO/ VEC(NZTMAX,NZTMA1,NZFMAX)
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      DIMENSION RVEC(NZTMAX,NZTMAX),SVEC(NZTMAX,NZTMAX),
     *          C(NZTMA1,2*NZCMAX-1)
C
      K2=K1-1
      K4=K1 + K2
      DO 2124 K=1,NZV
      DO 2124 L=1,NZT
2124  SVEC(L,K)=0.
      DO 2125 L=1,NZV
      DO 2125 I=1,K4
2125  C(L,I)=0.
      I = 0
C
C     BLOCK CLUSTER INTERNE KOORDINATEN
C
      DO 10   K = 1,K1
      IF(NGRU(2,K,1).EQ.1) GOTO 10
       DO 12   L = 1,NGRU(2,K,1) -1
      I = I + 1
      DO 13   M = 1,L
   13 SVEC(NGRU(1,K,1) + M - 1 ,I) = -1./ FLOAT(L)
   12 SVEC( NGRU(1,K,1) + L ,I) = 1.
   10 CONTINUE
C
C     BLOCK CLUSTER INTERNE KOORDINATEN ZUEND
C
C     BLOCK SUBSTRUKTUR INTERNE KOORDINATEN
C
      DO 110 K=1,KSU
      IF(JSU(2,K).EQ.1) GOTO 110
      DO 112 L= 2,JSU(2,K)
      I= I + 1
      L1=NGRU(1,JSU(1,K) + L-1,1)
      L5=NGRU(1,JSU(1,K) ,1)
      DO 113 M= L5,L1 -1
113   SVEC(M,I)= -1./FLOAT(L1 - L5)
      DO 123 M=	L1, L1 + NGRU(2,JSU(1,K) +L-1,1) -1
123   SVEC(M,I)= 1./FLOAT(NGRU(2,JSU(1,K) +L-1,1))
112   CONTINUE
110   CONTINUE
C
C     BLOCK SUBSTRUKTUR INTERNE KOORDINATEN ZUEND
C
C     BLOCK SUBSTRUKTUR RELATIV KOORDINATEN
C
      IF(KSU1.EQ.1) GOTO 14
       DO 16   K = 2,KSU1
      I = I + 1
      L1 = NGRU(1,JSU(1,K),1) -1
      DO 17   M = 1,L1
   17 SVEC(M,I) = -1./ FLOAT(L1)
      L3 = NGRU(1,JSU(1,K+ 1),1) -1
      DO 16   M = L1+1,L3
   16 SVEC(M,I) =  1./ FLOAT(L3- L1)
   14 IF(KSU2.EQ.1) GOTO 24
      DO 21   K = 2,KSU2
      I = I + 1
      L1 = NGRU(1,JSU(1,KSU1+ 1),1)
      L5 = NGRU(1,JSU(1,KSU1+ K),1) -1
      DO 22   M = L1,L5 + 1
   22 SVEC(M,I) =-1./ FLOAT(L5-L1+1)
      L3 = NGRU(1,JSU(1,KSU1+ K + 1),1) - 1
      DO 23   M = L5 + 1,L3
   23 SVEC(M,I) = 1./ FLOAT(L3 - L5)
   21 CONTINUE
C
C     BLOCK SUBSTRUKTUR RELATIV KOORDINATEN ZUEND
C
C     RELATIV- UND SCHWERPUNKT KOORDINATE
C
   24  L4 = NGRU(1,JSU(1,KSU1 + 1),1) - 1
      DO 26   M  = 1,L4
      SVEC(M,NZV) = -1./ FLOAT(L4)
   26 SVEC(M,NZT) = 1./ FLOAT(NZT)
      DO 27   M = L4 + 1,NZT
      SVEC(M,NZV) = 1./ FLOAT(NZT-L4)
   27 SVEC(M,NZT) = 1./ FLOAT(NZT)
C
C     RELATIV- UND SCHWERPUNKT KOORDINATE ZUEND
C
C     NORMIERUNG
C
      DO 60   K = 1,NZT
      A = .0
      DO 61   L = 1,NZT
   61 A = A + SVEC(L,K)**2
      A = 1./ SQRT(A)
      DO 62  L = 1,NZT
   62 SVEC(L,K) = A*SVEC(L,K)
   60 CONTINUE
      DO 30   K = 1,NZT
      DO 30   L = 1,NZT
      RVEC(L,K) = SVEC(K,L)
   30 CONTINUE
      WRITE(NOUT,40)
       DO 34   K = 1,NZV
      L1 = NZV - K2 + K
      WRITE(NOUT,41)    K,(SVEC(M,K ),M,M=1,NZT)
      IF(K.GE.K1) GOTO 34
        DO 70    M = 1,NZT
   70 VEC(M,K,MFL) = SVEC(M,L1)
C      VEC ENTHAELT DIE CLUSTERRELATIVKOORDINATEN
   34 CONTINUE
   40 FORMAT(//28H DEFINITION DER KOORDINATEN      //)
   41 FORMAT(3H S(,I2,3H) =,10(F6.3,3H R(,I2,1H)  ) / 7X,
     1         2(F6.3,3H R(,I2,1H)))
   42 FORMAT(3H R(,I2,3H) =,10(F6.3,3H S(,I2,1H)  ) / 7X,
     1         2(F6.3,3H S(,I2,1H)))
   43 FORMAT(//)
      WRITE(NOUT,43)
      DO 36   K = 1,NZT
   36 WRITE(NOUT,42)   K,(RVEC(M,K),M,M=1,NZV)
      WRITE(NOUT,43)
      DO 37 K= 1,K2
37    WRITE (NOUT,45) K,(VEC(M,K,MFL),M,M=1,NZT)
45    FORMAT(' VEC(',I2,')=',10(F6.3,' R(',I2,')'))
      WRITE(NOUT,43)
      IIZ = 0
      DO 2130 K=1,K1
      NNZ   = NGRU(2,K,1)  - 1
      IF(NNZ.EQ.0) GOTO 2130
       DO 2132    M = 1,NNZ
      IIZ = IIZ + 1
 2132 C(IIZ,K) = 1.
      WRITE(NOUT,44) (C(M,K),M=1,NZV)
   44 FORMAT(10F10.4)
 2130 CONTINUE
      WRITE(NOUT,43)
      DO 50   K = 1,K2
      KK=NZV-K2+K
      KI = K1 + K
   50 C(KK ,KI) = 1.
      DO 51 K=1,K4
51      WRITE (NOUT,44) (C(M,K),M=1,NZV)
      WRITE(NBAND2) ((RVEC(M,N),M=1,NZV),N=1,NZT)
      WRITE(NBAND2) ((SVEC(N,M),M=1,NZV),N=1,NZT)
      WRITE(NBAND2) ((C(N,K),N=1,NZV),K=1,K4)
      RETURN
      END
      DOUBLE PRECISION FUNCTION CLG(J1,J2,J3,M1,M2)
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      DOUBLE PRECISION FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END

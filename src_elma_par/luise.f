      PROGRAM LUISE
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     PROGRAM LUISE BEREITET DIE BERECHNUNG DER REDUZIERTEN
C     MATRIXELEMENTE FUER NORMOPERATOR UND OPERATOREN DER
C     EL.-MAGN. WECHSELWIRKUNG VOR
C
C
C              ********************************
C              *                              *
C              *  HOCHDIMESNIONIERTE VERSION  *
C              *                              *
C              ********************************
C
C
C
C     BESTIMMUNG VON IQMAX FUER NORM KORRIGIERT  26.02.88  M.U.
C     AENDERUNG 05.07.88  FALSCHES LABEL 230 KORRIGIERT M.U.
C     AENDERUNG 15.09.88  OPEN-STATEMENTS EINGEFUEGT, INPUT AUF
C                         TAPE5 UMGESTELLT UND FUNCTION MINUS1
C                         GESTRICHEN
C     AENDERUNG 15.11.88  DIMENSIONIEERUNGEN GEAENDERT  M.U.
C     AENDERUNG 06.02.89  CLEBSCHBERECHNUNG AUF SUBROUTINE CLG
C                         UMGESTELLT UND DIMENSIONIERUNG GEAENDERT  M.U.
C     LETZTE AENDERUNG: 06.02.89 M.U.
C
C     !!! BEI EL.-MAGN. OPERATOREN KEINE POLYNOME !!!
C
C
C
C     INITIALISIERUNG DES PROGRAMMS
C     =============================
C
      INCLUDE 'par/LUISE'

C     NZFMAX: MAXIMALE ANZAHL DER ZERLEGUNGEN
C     NZCMAX:     "      "     "  CLUSTER
C     NZLWMA:     "      "     "  DREHIMPULSSTRUKTUREN
C     NZIQMA:     "      "     "  SIGMAFAKTOREN
C     LWMAX:  MAXIMALER DREHIMPULSWERT
C     NZOPER: ZAHL DER IM PROGRAMM BERECHNETEN OPERATOREN
C
      PARAMETER (NZLMAX=3*2*(NZCMAX-1))
C     NZLMAX: MAXIMALE ANZAHL DER DREHIMPULSE IM MATR.-EL
C
C     DIMENSIONSPARAMETER DER FELDER C, CW, KMV UND
C     DER FELDER DES COMMON-BLOCKS ORD
C
      PARAMETER (PI=3.1415926536)
C
      COMMON /SDA/CW(NDIMCW), MVM(NZIQMA,NDIMCW), KAUS,
     *            NZLME, IQ, NKAPO
C     WIRD IN SDA1 BENOETIGT
C     NZLME: ANZAHL DER DREHIMPULSE IM MATR.-EL.
C     IQ: ANZAHL DER SIGMA-FAKTOREN
C     MVM: VERSCHLUESSELTE INDIZES DER SIGMAFAKTOREN
C     CW: VORFAKTOR DES PRODUKTS DER SIGMAFAKTOREN
C     KAUS: STEUERT ZUSAETZLICHEN AUSDRUCK IN SDA1
C
      COMMON/HIVA/NBAND1, NBAND2, KZAHLG, IQMAXG, NZLIK
C     NBAND1: TAPE FUER ERGEBNISSE
C     NBAND2: TAPE FUER ZWISCHENERGEBNISSE
C     KZAHLG: GESAMTANZAHL ALLER SIGMAKOMBINATIONEN FUER ALLE LI-
C             KOMBINATIONEN ALLER DREHIMPULSSTRUKTUREN
C     IQMAXG: MAXIMALE ANZAHL VON SIGMA-FAKTOREN FUER ALLE LI-
C             KOMBINATIONEN ALLER DREHIMPULSSTRUKTUREN
C     NZLIK : GESAMTANZAHL ALLER LI-KOMBINATIONEN FUER ALLE
C             DREHIMPULSSTRUKTUREN
C
      COMMON/MVA/KV(2*(NZCMAX-1)),KMV(2*(NZCMAX-1),NDIMK),
     *            MMOEG,MKAUS
C     WIRD IN MVAL BESETZT
C     KV: POLYNOMPOTENZ
C     KMV: ZUGEHOERIGER M-WERT
C     MMOEG: DURCHLAUFANZAHL DES LOOP POLYNOME
C     MKAUS: STEUERT ZUSAETZLICHEN AUSDRUCK IN MVAL
C
      COMMON /ORD/ JQ(NDIMOR),EPO(NDIMOR),
     *             INDPO(NDIMOR),MVK(NZIQMA,NDIMOR),
     *             INDEX(NDIMOR),KZAHL
C     WIRD IN PORD BESETZT
C     KZAHL: ANZAHL DER SIGMA-KOMBINATIONEN IM MATR.-EL
C     JQ(I): ANZAHL DER SIGMA-FAKTOREN DER I-TEN SIGMA KOMBINATION
C     EPO(I): FAKTOR BEI DER I-TEN SIGMA-KOMBINATION
C     INDPO(I): VERSCHLUESSELTE DREHIMPULSSTRUKTUR DER I-TEN
C               SIGMA-KOMBINATION
C     MVK(I,J): J-TE SIGMA-FAKTOR DER I-TEN SIGMAKOMBINATION
C     VERSCHLUESSELTE INTERNE DREHIMPULSSTRUKTUR DES MATR.-EL.
C
      COMMON/FAKTOR/F3(2*LWMAX+1), F7(2*LWMAX+1),
     *              F8(2*LWMAX+1)
C
      COMMON /COMY/ D(100)
C     COMY WIRD IM CLEBSCHPROGRAMM BENOETIGT UND WIRD
C     WEITER UNTEN BESETZT
C
      DIMENSION IENT(NZOPER), KRECH(NZFMAX,NZLWMA)
      DIMENSION NZLW(NZFMAX), NZC(NZFMAX), NZPO(NZFMAX)
      DIMENSION LW(2*NZCMAX-3,NZLWMA,NZFMAX),
     *          KP(NZCMAX-1,NZPOMA,NZFMAX)
C     LW(I,J,K): I-TE DREHIMPULSWERT DER J-TEN DREH-
C                IMPUSSTRUKTUR DER K-TEN ZERLEGUNG
C     KP(I,J,K): WIE LW FUER POLYNOME
C
      DIMENSION LV(NZLMAX), MV(NZLMAX), LVMOD(NZLMAX)
      DIMENSION LKOP1(NZCMAX-2,NZLWMA,NZFMAX),
     *          LKOP2(NZCMAX-2,NZLWMA,NZFMAX)
      DIMENSION C(NDIMC), MW(NDIMC,NZLMAX)
      DIMENSION KWL(2*NZCMAX-3,5), KWR(2*NZCMAX-3,5)
      DIMENSION F4(4), F5(4)
C
      CHARACTER*48 INFILE(NZFMAX*NZFMAX)
C
C     minus1 = +/- for even/odd
      MINUS1(I)=1-2*MOD((ABS(I)),2)
C
C     ZUWEISUNG DER STARTWERTE
C
      DATA F4/1.,-2.,2.,-2./,F5/1.,.25,.0625,.015625/
C     F4(I+1)=(-)**I (2-DELTA(I,0))
C     F5(I+1)=1/4**I
C
      OPEN(UNIT=5,FILE='INLU',STATUS='OLD')
      OPEN(UNIT=6,FILE='OUTPUT')      
      OPEN(UNIT=9,FILE='LUOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=10,STATUS='SCRATCH',FORM='UNFORMATTED')
C
      MEFI=23
C
      NKAPO=0
C     NKAPO=1/0: RECHNUNG MIT/OHNE POLYNOME
      MMOEG=1
C     MMOEG: ANZAHL DER DURCHLAEUFE DES LOOPS POLYNOME
C
C     BELEGUNG VON F3, F7 UND F8
      FT=SQRT(1./(4.*PI))
      F7(1)=FT
      F3(1)=1.
      F8(1)=1.
      FH=1.
      DO 100 NH=2,(2*LWMAX+1)
       FSH=NH-1
       FH=FSH*FH
       F3(NH)=SQRT(FH)
       F8(NH)=1./FH
       FT=FT*.5
       F7(NH)=FT*SQRT(2.*FSH+1.)
100   CONTINUE
C     F3(I)=SQRT((I-1)!)
C     F7(I)=SQRT(2I-1)/(2**(I-1)*SQRT(4PI))
C     F8(I)=1/(I-1)!
C
C     BELEGUNG DES FELDES D AUS COMY
      D(1)=0
      D(2)=0
      DO 102, I=2,99
       D(I+1)=ALOG(FLOAT(I))+D(I)
102   CONTINUE
C
C     VORBELEGUNG DES FELDES MVK AUS ORD
      DO 106, IH=1,NDIMOR
       DO 104, KH=1,NZIQMA
        MVK(KH,IH)=0
104    CONTINUE
106   CONTINUE
C
C
C
C     ENDE DER INITIALISIERUNG
C
C     *********************************************************
C
C     INPUT DES PROGRAMMS
C     ===================
C
C
      READ (5,1000) NBAND1,NBAND2,LAUS,KAUS,MKAUS,LALL,INDEP
C     NBAND1=9: TAPE FUER ERGEBNISSE
C     LAUS  : 1...4 ZUSAETZLICHER AUSDRUCK IN LUISE
C     KAUS  : 1...4      "           "      " SDA1
C     MKAUS : 1...4     "           "      " MVAL
C     LALL  : 1...5    "           "      " LIS UND IKUGEL
C        INDEP < 0 HEADER FUER QUAF MIT VIELEN ZERLEGUNGEN SCHREIBEN            
C         INDEP > 0 MATRIXELEMENTE FUER VERSCHIEDENE ZERLEGUNGEN AUF            
C         FILES, DEREN NAMEN AM ENDE EINGELESEN WERDEN                          
C         ZUERST DER JOB MIT INDEP >0, DANN DER MIT INDEP <0                    
C
      IF(INDEP.NE.0) WRITE(NOUT,*) 'INDEP UNGLEICH NULL!  ',INDEP      
C      write(nout,*) 'test clg(2 1,3/2 -3/2|1/2 -1/2)=',CLG(4,3,1,2,-3)
      READ (5,1000) (IENT(NOP), NOP=1,NZOPER)
C     IENT =1 LEGT ZU RECHNENDE OPERATOREN FEST:
C     1  NORM
C     2  ELEKTRISCHER SPINOPERATOR
C     3  MAGNETISCHER      "
C     4  ELEKTRISCHER BAHNOPERATOR
C     5  MAGNETISCHER      "
C     6  COULOMB-/SIEGERTOPERATOR
C     7  KORREKTUROPERATOR ZUM SIEGERTOPERATOR
C
      READ (5,1000) NZF, MUL
C     NZF: ZAHL DER ZERLEGUNGEN
C     MUL: MULTIPOLARITAET DES OPERATORS
C
      DO 110 MH=1,NZF
       READ (5,1000) NZLW(MH),NZC(MH),NZPO(MH)
C      NZLW(MH): ZAHL DER DREHIMPULSSTRUKTUREN DER MH-TEN ZERLEGUNG
C      NZC(MH): ZAHL DER CLUSTER DER MH-TEN ZERLEGUNG
C      NZPO(MH): ZAHL DER POLYNOME DER MH-TEN ZERLEGUNG
110   CONTINUE
C
      REWIND NBAND1
      WRITE (NBAND1) NZF,MUL,(NZLW(MH),NZC(MH),MH=1,NZF),
     1        (IENT(MH), MH=1,NZOPER), (NZPO(MH),MH=1,NZF),INDEP
C -- ECCE QUAL --     
C     AUSDRUCK DER BISHER EINGELESENEN WERTE
C
      WRITE (*,1020)
      WRITE (*,1001) NZF, MUL
      IF(NZF.GT.NZFMAX) STOP 1
      DO 140 MH=1,NZF
       WRITE (*,1002) MH
       NZL=NZC(MH)-1
       IF(NZL.GT.3) STOP 2
       WRITE (*,1003) NZC(MH),NZLW(MH)
C
C     EINLESEN DER DREHIMPULSWERTE
       DO 130 L=1,NZLW(MH)
        WRITE (*,1004) L
        READ (5,1000)(LW(M,L,MH),M=1,NZL),KRECH(MH,L)
C       LW(M,L,MH): M-TE DREHIMPULSWERT DER L-TEN DREHIMPULSSTRUKTUR
C                   DER MH-TEN ZERLEGUNG
C       KRECH(MH,L): ES WERDEN NUR SOLCHE MATRIXELEMENTE BERECHNET
C                    BEI DENEN DAS PRODUKT VON KRECH NICHT GROESSER NULL IST
C
        WRITE (*,1005) (M,LW(M,L,MH),M=1,NZL)
        IF((NZL-1).LE.0) GOTO 130
        DO 120 M=1,(NZL-1)
         MM=NZL+M
         READ (5,1000) LW(MM,L,MH),LKOP1(M,L,MH),
     *                    LKOP2(M,L,MH)
C        NUR FUER NZL.GT.2: LKOP1 UND LKOP2 GEBEN DIE DREHIMPULSE
C        AN, AUS DENEN LW GEKOPPELT IST
         IF((NZL-1).GT.1) GOTO 116
         LKOP1(1,L,MH) =1
         LKOP2(1,L,MH) =2
116      WRITE (*,1006) MM,LW(MM,L,MH),LKOP1(M,L,MH),
     *                     LKOP2(M,L,MH)
120     CONTINUE
130    CONTINUE
C
C      EINLESEN DER POLYNOMSTRUKTUR DER MH-TEN ZERLEGUNG
       MPO=NZPO(MH)
       NZPO(MH)=MAX0(NZPO(MH),1)
       IF(MPO.GT.0)GOTO 124
       DO 122 KH=1,NZL
        KP(KH,1,MH)=0
C       KP(I,J,K): POTENZ DES I-TEN POLYNOMS DERJ-TEN POLYNOMSTRUK-
C                  TUR DER K-TEN ZERLEGUNG
122    CONTINUE
       MPO=1
       GOTO 127
C
124    DO 126 KH=1,MPO
        READ (5,1000) (KP(M,KH,MH),M=1,NZL)
126    CONTINUE
       NKAPO=1
127    DO 128 KH=1,MPO
        WRITE (*,1007) KH,(KP(M,KH,MH),M=1,NZL)
128    CONTINUE
       WRITE (NBAND1)((LW(M,L,MH),M=1,(2*NZL-1)),L=1,NZLW(MH)),
     1  ((KP(M,KH,MH),M=1,NZL),KH=1,MPO)
140   CONTINUE
C
      IF(INDEP.LT.0) STOP 'HEADER WRITTEN'
C     AUSSTIEG FUER KOPF FUER QUAF SCHREIBEN, KEINE BERCHNUNG VON MATRIXELEMENT 
C    
      IF(INDEP.GT.0) THEN  
         ICOUNT= 0       
         DO 277 ILF=1,NZF*NZF  
C        IDONE(ILF)= 0        
C        IF(NBAND5.NE.0) READ(INPUT,1000) IDONE(ILF)
277      READ(5,278) INFILE(ILF)              
278   FORMAT(A48) 
         ENDIF
C     START OF CALCULATION OF MATRIX ELEMENTS
C     ========================================
C
C     BERECHNUNG DES FAKTORS F9 FUER EL.-MAGN. OPERATOREN
C
      IH=1
      DO 145, MH=1,(2*MUL+1),2
       IH=IH*MH
145   CONTINUE
      F10=FLOAT(IH)
      F9=SQRT(FLOAT(MUL)/FLOAT(MUL+1))*F10*(-1)
      IF (LAUS.GT.1) PRINT 1023, F9
C     F9=-(2MUL+1)!!*SQRT(MUL/(MUL+1))
C     F10=(2MUL+1)!!
C  << F9,10 do not resemble the long-wavelength approx. >>      
C  they are included, only to be excluded in enemb.f
C  see Trini's theses waht structure was implemented originally!      
C  29.1.20 joki: F9/10 = 1 because of my convention
      F9 = 1.
      F10 = 1.
C
      DO 900 NFL=1,NZF
C      LOOP ZERLEGUNGEN LINKS
C
       NZLL=NZC(NFL)-1
C      NZLL: ZAHL DER DREHIMPULSE LINKS
       NLGESL=NZLL+NZLL-1
C      NUMMER DES GESAMTDREHIMPULSES DER LI SEITE IM LW-FELD
C      DER ZERLEGUNG NR. NFL
C
      INFL=NFL
      IF(INDEP.NE.0) INFL=NZF
      DO 890 NFR=1,INFL
C     LOOP ZERLEGUNGEN RIGHT
C
      IF(INDEP.NE.0) THEN
         ICOUNT=ICOUNT+1
C        IF(IDONE(ICOUNT).EQ.1) GOTO 890
         NBAND1=MEFI
         OPEN(UNIT=MEFI,FILE=INFILE(ICOUNT),STATUS='UNKNOWN',
     *   FORM='UNFORMATTED')
      ENDIF
C
        WRITE (*,1009) NFL, NFR
        NZLR=NZC(NFR)-1
C       NZLR: ZAHL DER DREHIMPULSE RECHTS
        NLGESR=NZLR+NZLR-1
C       NUMMER DES GESAMTDREHIMPULSES DER RE SEITE IM LW-FELD
C       DER ZERLEGUNG NR. NFR
        NZLME=NZLL+NZLR
C       NZLME: GESAMTZAHL DER DREHIMPULSE IM MATIXELEMENT (OHNE
C              OPERATORDREHIMPULS!)
        NZLMEP=(2*NKAPO+1)*NZLME
C       NZLMEP: GESAMTZAHL DER DREHIMPULSE IM MATRIXELEMENT BEI
C               RECHNUNG MIT POLYNOMEN
C
        DO 880 NOP=1, NZOPER
C        LOOP OPERATOREN
C
         IF(IENT(NOP)) 880,880,150
150      WRITE (*,1008) NOP
         LMOD=1
         IF (NOP.EQ.7) LMOD=0
C        LMOD: NR. DES ERNIEDRIGTEN DREHIMP. BEI DIFF.-OP.
         LOPMOD=1
C        LOPMOD: WERT,UM DEN LOP BEI MAGN. SPINOP. UND EL. BAHNOP.
C        VERAENDERT WIRD
         NZREC=1
C        NZREC: ANZAHL DER RECORDS, DIE FUER DIESEN OPERATOR GE-
C               SCHRIEBEN WERDEN
         IF (NOP.EQ.7.AND.MUL.GT.0) GOTO 840
C        FUER DER KORREKTUROPERATOR WIRD DER RECORD DES SIEGERTOPATORS
C        ALS 1. RECORD KOPIERT; DAS FALSCHE VORZEICHEN WIRD IN QUAL
C        KORRIGIERT
C
160      KZAHL =0
         KZAHLG=0
C        KZAHL/ KZAHLG: ANZAHL DES ZEILEN EINES RECORDS
         IQMAXG=0
C        IQMAXG: MAXIMALE ANZAHL VON SIGMAFAKT. EINES RECORDS
         NZLIK=0
C        NZLIK: ANZAHL DER LI-KOMBINATIONEN
         REWIND NBAND2
         IF ((NOP.EQ.1).OR.(NOP.EQ.6)) GOTO 161
         IF (MUL.GT.0) GOTO 161
         GOTO 840
C        MUL=0 LIEFERT BEI EL.-MAGN. OPERATOREN KEIN MATR.-ELEM.
C
C
161      DO 800 NLWL=1,NZLW(NFL)
C          LOOP DREHIMPULSSTRUKTUREN LINKS
C
          LWSUML=0
C         LWSUML: SUMME DER DREHIMPULSE LINKS
          DO 162 KH=1,NZLL
           LWSUML=LWSUML+LW(KH,NLWL,NFL)
162       CONTINUE
C
          DO 790 NLWR=1,NZLW(NFR)
C          LOOP DREHIMPULSSTRUKTUREN RECHTS
C
           IF (KRECH(NFL,NLWL)*KRECH(NFR,NLWR).GT.0) GOTO 790
C          HIER WERDEN IM INPUT BESTIMMTE DREHIMPULSSTRUKTUREN UEBERSPRUNGEN.
           LWSUMR=0
C          LWSUMR: SUMME DER DREHIMPULSE RECHTS
           DO 164 KH=1,NZLR
            LWSUMR=LWSUMR+LW(KH,NLWR,NFR)
164        CONTINUE
C
C          UEBERPRUEFUNG DER PARITAET
           GOTO (166, 167, 168, 167, 169, 167, 167, 165),NOP
165        STOP3
166        CONTINUE
C          NORM
           IF (MINUS1(LWSUML+LWSUMR).NE.1) GOTO 790
           LOP=0
C          LOP: DREHIMPULS DES BERECHNETEN OPERATORS
           GOTO 170
167        CONTINUE
C          ELEKTR. BAHN- UND SPINOPERATOR, COULOMB-/SIEGERTOPERATOR
C          UND KORREKTUROPERATOR
           IF (MINUS1(LWSUML+LWSUMR+MUL).NE.1) GOTO 790
           LOP=MUL
           GOTO 170
168        CONTINUE
C          MAGN. SPINOPERATOR
           IF (MINUS1(LWSUML+LWSUMR+MUL).NE.-1) GOTO 790
           LOP=MUL+LOPMOD
           GOTO 170
169        CONTINUE
C          MAGN. BAHNOPERATOR
           IF (MINUS1(LWSUML+LWSUMR+MUL).NE.-1) GOTO 790
           LOP=MUL
170        CONTINUE
           MOP=LW(NLGESL,NLWL,NFL)-LW(NLGESR,NLWR,NFR)
C          MOP: M-WERT DES DREHIMPULSES DES BERECHNETEN OPERATORS
C
C          BERECHNUNG DES FAKTORS DES REDUZIERTEN MATR.-EL.
           F=1.
C          FAKTOR DES REDUZIERTEN MATRIXELEMENTS
C
C          UEBERPRUEFUNG DER DREHIMPULSKOPPLUNG
           IF (ABS(MOP).GT.LOP) GOTO 790
           IF (LW(NLGESL,NLWL,NFL)+LW(NLGESR,NLWR,NFR).LT.LOP)
     *      GOTO 790
C
C          L1,...,L5: PARAMETER ZUM AUFRUF DES CLEBSCH-PROGRAMMS
           L1=2*LW(NLGESR,NLWR,NFR)
           L2=2*LOP
           L3=2*LW(NLGESL,NLWL,NFL)
           L4=L1
           L5=2*MOP
           CLGK=CLG(L1,L2,L3,L4,L5)
C          CLGK: CLEBSCH-GORDAN-KOEFFIZIENT DES RED. MATR.-EL.
C     <L'||MUL||L>=L'^/(-1)**k (Llkq|L'l')<L'l'|kq|Ll>           
           IF(CLGK.NE.0.) GOTO 180
           F=0.
           IF(LAUS.LE.0) GOTO 790
           WRITE (*,1010) LW(NLGESR,NLWR,NFR),MOP,LW(NLGESL,NLWL,NFL)
           GOTO 790
180        F=F*SQRT(FLOAT(1+L3))/CLGK
           IF (LAUS.GT.2) PRINT 1024, LW(NLGESR,NLWR,NFR),
     *        LW(NLGESR,NLWR,NFR), LOP, MOP, LW(NLGESL,NLWL,NFL),
     *        LW(NLGESL,NLWL,NFL), CLGK, F
C
C          BESTIMMUNG DER VORFAKTOREN DER MATR.-EL.
C
           GOTO (194, 184, 186, 185, 184, 190, 191, 182), NOP
182        STOP 5
184        CONTINUE
C          EL. SPIN UND MAGN. BAHN F9=(2L+1)!! *(L/(L+1))**1/2
           F=F*F9
           GOTO 194
185        CONTINUE
C          ELEKTR. BAHNOPERATOR
           LOP=MUL+LOPMOD
           F=F*(-1)
186        CONTINUE
C          MAGN. SPIN UND EL. BAHN
           IF (LOPMOD) 189, 188, 187
187        F=F*F9*SQRT(FLOAT(MUL)/FLOAT(2*MUL+1))
           GOTO 194
188        STOP 6
189        F=F*F9*SQRT(FLOAT(MUL+1)/FLOAT(2*MUL+1))*(-1)
           GOTO 194
190        CONTINUE
C          COULOMB-/SIEGERTOPERATOR
           F=F*F10
           GOTO 194
191        CONTINUE
C          KORREKTUROPERATOR ZUM SIEGERTOPERATOR
           LOP=MUL+1
           F=F*F9*(-1)*SQRT((2.*FLOAT(MUL)+1.)/FLOAT(MUL))
C
194        IF (LAUS.GT.2) PRINT 1025, F
C
C          BESTIMMUNG DER DREHIMPULSE DES MATR.-EL. UND DES FAKTORS
C
C
           DO 196 MH=1,NZLL
            LV(MH)=LW(MH,NLWL,NFL)
C           LV(1..NZLL): DREHIMPULSE IM BRA DES MATR.-EL.
            F=F*F7(LV(MH)+1)*MINUS1(LV(MH))
196        CONTINUE
C
           DO 198 MH=1,NZLR
            LV(NZLL+MH)=LW(MH,NLWR,NFR)
C           LV(NZLL+1...NZLME): DREHIMPULSE IM KET DES MATR.-EL.
            F=F*F7(LV(NZLL+MH)+1)*MINUS1(LV(NZLL+MH))
198        CONTINUE
C
C     ENDE BESTIMMUNG FAKTOR F
C     F = FAKTOR DES RED. MATR.-EL. 
C       * VORFAKTOR DER EL.-MAGN. OPERATORS
C       * PRODUKT UEBER ALLE I ((-1/2)**LV(I) * SQRT(2*LV(I)+1) / SQRT(4*PI))
C         (see Edmnds 4.6.5)
C
           DO 780 NPWL=1,NZPO(NFL)
C           LOOP POLYNOME LINKS
            IF(NKAPO.EQ.0) GOTO 200
            DO 199 KHH=1,NZLL
             KV(KHH)=KP(KHH,NPWL,NFL)
C            KV(1..NZLL).:POLYNOME IM BRA DES MATR.-EL.
199         CONTINUE
C
200         DO 770 NPWR=1,NZPO(NFR)
C            LOOP POLYNOME RECHTS
             IF(NKAPO.EQ.0) GOTO 208
             DO 201 KHH=1,NZLR
              KV(KHH+NZLL)=KP(KHH,NPWR,NFR)
C             KV(NZLL+1..NZLMA): POLYNOME IM KET DES MATR.-EL.
201          CONTINUE
C
             DO 205 KHH=1,NZLME
              LV(KHH+NZLME)=KV(KHH)
              LV(KHH+2*NZLME)=KV(KHH)
C             HOEHERE DREHIMPULSE SIND POLYNOME
205          CONTINUE
C
C            BESTIMMUNG DER M-WERTE DER POLYNOME IN MVAL
             CALL MVAL(NZLME)
208          CONTINUE
             IF(LAUS.GT.0) WRITE(*,1011) NPWL,NLWL,NFL,LWSUML,NPWR,
     *                                      NLWR,NFR,LWSUMR
C
C
             IPOLAR=-1
C            IPOLAR: POLARITAET
             IF ((LAUS.GT.3).AND.(NOP.GT.3).AND.(NOP.NE.6)) PRINT 1026
C
210          CONTINUE
C            FUER BAHNOPERATOREN UND KORREKTUROPERATOR: LOOP POLARITAET
             IF ((LAUS.GT.3).AND.(NOP.GT.3).AND.(NOP.NE.6))
     *                                   PRINT 1027, IPOLAR
C
             GOTO (220, 220, 220, 215, 215, 220, 215, 211), NOP
211          STOP 5
215          CONTINUE
C            BAHNOPERATOREN UND KORREKTUROPERATOR
C
C            PRUEFE, OB POLARITAET MATRIXELEMENT LIEFERT
             IF (ABS(MOP-IPOLAR).LE.LOP) GOTO 216
             IF (LAUS.GT.3) PRINT 1028
             GOTO 470
C
C            PRUEFE, OB LMOD-TER DREHIMPULS ERNIEDRIGBAR
216          IF (LV(LMOD).GT.0) GOTO 217
             IF (LAUS.GT.2) PRINT 1029, LMOD
             GOTO 770
C
C            BRECHNUNG VON FPOLAR (clebsch in Unkel's (38))
217          L1=2*LOP
             L2=2
             L3=2*MUL
             L4=2*(MOP-IPOLAR)
             L5=2*IPOLAR
             FPOLAR=CLG(L1,L2,L3,L4,L5)*(SQRT(2.)*ABS(IPOLAR)+
     *              2.*(1-ABS(IPOLAR)))
             IF (ABS(FPOLAR).LT.1E-15) GOTO 470
C
C
C            BESTIMMUNG ALLER MOEGLICHEN M-KOMBINATIONEN
C            ===========================================
C
C
220          NZMKOM=0
C            NZMKOM: ANZAHL DER M-KOMBINATIONEN
C            SETZE LINKE M-WERTE -L, RECHTE M-WERTE +L
             DO 222 MH=1,NZLL
              MV(MH)=-LV(MH)
C             MV(I): ZU LV(I) GEHOERENDER M-WERT
222          CONTINUE
             DO 224 MH=NZC(NFL),NZLME
              MV(MH)=LV(MH)
224          CONTINUE
C
C            BESTIMMUNG ALLER MOEGLICHEN M-KOMBINATIONEN LINKS MIT
C            SUMME = -LGESL
C
230          F1=1.
C            F1 WIRD WEITER UNTEN BERECHNET; F1=-1**MSUML*
C               SQRT(PRODUKT UEBER ALLE (L+M)!/(L-M)!)*
C               PRODUKT ALLER KOPPLUNGSCLEBSCHE (FUER DIE LI SEITE)
             MSUML=0
C            MSUML: SUMME DER M-WERTE LINKS
             IF ((NOP.NE.4).AND.(NOP.NE.5).AND.(NOP.NE.7)) GOTO 231
             IF (LMOD.GT.NZLL) GOTO 231
             IF (ABS(MV(LMOD)+IPOLAR).GT.(LV(LMOD)-1))
     *        GOTO 240
231          DO 232 MH=1,NZLL
              KWL(MH,1)=MV(MH)
C             FELD KWL: ABSPEICHERUNG VERSCHIEDENER L UND M-WERTE
C                       ZUR UEBERPRUEFUNG DER KOPPLUNGSMOEGLICHKEIT
              MSUML=MSUML+MV(MH)
232          CONTINUE
             IF(MSUML+LW(NLGESL,NLWL,NFL).NE.0) GOTO 240
             IF(NZLL.LE.1) GOTO 254
C
C            PRUEFE, OB KOPPLUNG MOEGLICH IST
             DO 234 MH=NZC(NFL),NLGESL
              MMH=MH-NZLL
              MM1=LKOP1(MMH,NLWL,NFL)
              MM2=LKOP2(MMH,NLWL,NFL)
              KWL(MH,4)=LW(MM1,NLWL,NFL)
              KWL(MH,5)=LW(MM2,NLWL,NFL)
              KWL(MH,2)=KWL(MM1,1)
              KWL(MH,3)=KWL(MM2,1)
              KWL(MH,1)=KWL(MH,2)+KWL(MH,3)
              IF(IABS(KWL(MH,1)).GT.LW(MH,NLWL,NFL) ) GOTO 240
234          CONTINUE
             GOTO 250
C
C            SUCHE NEUER M-KOMBINATION LINKS
240          MH=NZLL
242          IF(MV(MH)-LV(MH)) 244,246,246
244          MV(MH)=MV(MH)+1
             GOTO 230
246          MV(MH)=-LV(MH)
             MH=MH-1
             IF(MH) 400,400,242
C            SPRUNG NACH 400: ALLE MOEGLICHEN M-KOMBINATIONEN GEFUNDEN
C
C
250          CONTINUE
C            BERECHNUNG DES FAKTORS F1
             MSUML=MV(1)
             DO 252 MH=2,NZLL
              M1=LV(MH)+MV(MH)+1
              M2=LV(MH)-MV(MH)+1
              MM=NZLL+MH-1
              L1=2*KWL(MM,4)
              L2=2*KWL(MM,5)
              L3=2*LW(MM,NLWL,NFL)
              L4=-2*KWL(MM,2)
              L5=-2*KWL(MM,3)
              F1=F1*F3(M1)*F3(M2)*CLG(L1,L2,L3,L4,L5)
              MSUML=MSUML+MV(MH)
252          CONTINUE
C
254          M1=LV(1)+MV(1)+1
             M2=LV(1)-MV(1)+1
             F1=MINUS1(MSUML)*F1*F3(M1)*F3(M2)
C            ENDE LINKE SEITE
C
C
C            BESTIMMUNG ALLER M-KOMBINATIONEN RECHTS MIT MSUMR=LGESR
C
260          F2=1.
C            F2 WIRD WEITER UNTEN BERECHNET; F2 IST WIE F1 DEFINIERT
C            NUR FUER DIE RECHTE SEITE UND OHNE (-1)**MSUMR
             MSUMR=0
             IF ((NOP.NE.4).AND.(NOP.NE.5).AND.(NOP.NE.7)) GOTO 261
             IF (ABS(MV(LMOD)+IPOLAR).GT.(LV(LMOD)-1))
     *        GOTO 270
261          DO 262 MH=NZC(NFL),NZLME
              MMH=MH-NZC(NFL)+1
              KWR(MMH,1)=MV(MH)
              MSUMR=MSUMR+MV(MH)
262          CONTINUE
C
C            PRUEFE, OB MIT DIESER M-KOMBINATION RECHTS GEKOPPELT
C            WERDEN KANN
             IF(MSUMR-LW(NLGESR,NLWR,NFR).NE.0) GOTO 270
             IF(NZLR.LE.1) GOTO 284
             DO 264 MH=NZC(NFR),NLGESR
              MMH=MH-NZLR
              MM1=LKOP1(MMH,NLWR,NFR)
              MM2=LKOP2(MMH,NLWR,NFR)
              KWR(MH,4)=LW(MM1,NLWR,NFR)
              KWR(MH,5)=LW(MM2,NLWR,NFR)
              KWR(MH,2)=KWR(MM1,1)
              KWR(MH,3)=KWR(MM2,1)
              KWR(MH,1)=KWR(MH,2)+KWR(MH,3)
              IF(IABS(KWR(MH,1)).GT.LW(MH,NLWR,NFR)) GOTO 270
264          CONTINUE
             GOTO 280
C
C
C            SUCHE NEUER M-KOMBINATIONEN RECHTS
270          MH=NZLME
272          IF(MV(MH)+LV(MH)) 276,276,274
274          MV(MH)=MV(MH)-1
             GOTO 260
276          MV(MH)=LV(MH)
             MH=MH-1
             IF(MH-NZLL) 240,240,272
C            MARKE 240: SUCHE NEUER M-KOMBINATION FUER DIE LI SEITE
C
C            BERECHNUNG DES FAKTOR F2
280          DO 282 MH=2,NZLR
              MMH=MH+NZLL
              M1=LV(MMH)+MV(MMH)+1
              M2=LV(MMH)-MV(MMH)+1
              NN=NZLR+MH-1
              L1=2*KWR(NN,4)
              L2=2*KWR(NN,5)
              L3=2*LW(NN,NLWR,NFR)
              L4=2*KWR(NN,2)
              L5=2*KWR(NN,3)
              F2=F2*F3(M1)*F3(M2)*CLG(L1,L2,L3,L4,L5)
282          CONTINUE
C
284          M1=LV(NZC(NFL))+MV(NZC(NFL))+1
             M2=LV(NZC(NFL))-MV(NZC(NFL))+1
             F2=F2*F3(M1)*F3(M2)
C            ENDE RECHTE SEITE
C
C
C            UEBERPRUEFUNG DER DIMENSION DER FELDER C UND MW
             IF(NZMKOM.LT.NDIMC) GOTO 286
             WRITE (*,1012) NZMKOM,NDIMC
             STOP 6
C
C
286          DO 390 IMH=1,MMOEG
C             LOOP M-WERTE DER POLYNOME
              FAPO=1.
C             FAPO: ZUSAETZLICHER FAKTOR BEI POLYNOMRECHNUNG
              IF(NKAPO.EQ.0) GOTO 290
C
              DO 288 JH=1,NZLME
               JH1=JH+NZLME
               JH2=JH1+NZLME
               MV(JH1)=KMV(JH,IMH)
               KM=MV(JH1)
               KL=LV(JH1)
               FAPO=FAPO*F4(KM+1)/F8(KL+KM+1)*F5(KL+1)/F8(KL-KM+1)
               MV(JH2)=-KMV(JH,IMH)
288           CONTINUE
C
C             BERECHNUNG DER FAKTOREN C UND NOTIEREN VON C UND DEN M-WERTEN
290           NZMKOM=NZMKOM+1
              DO 294 KH=1,NZLMEP
               MW(NZMKOM,KH)=MV(KH)
C              MW(NZMKOM,KH): KT-TE M-WERT DER M-KOMBINATION NZMKOM
294           CONTINUE
C
              GOTO (310,310,310,320,320,310,320,300), NOP
300           STOP 7
310           CONTINUE
C             NORM, SPINOPERATOREN, COULOMB-/SIEGERTOPERATOR
C
              C(NZMKOM)=F1*F2*F*FAPO
C             C(NZMKOM): GESAMTFAKTOR DES NZMKOM-TEN MATR.-EL.
              GOTO 390
320           CONTINUE
C             BAHNOPERATOREN, KORREKTUROPERATOR
C
              MW(NZMKOM,LMOD)=MV(LMOD)+IPOLAR
              IF(ABS(MW(NZMKOM,LMOD)).GT.(LV(LMOD)-1))
     *         STOP 8
              IF(ABS(MOP-IPOLAR).GT.LOP) STOP 9
C F1     =  WFKT coupling KET
C F2     =  WFKT coupling BRA  
C F      =  red mat * MUL * IKUGEL
C FAPO   =  polynom
C FPOLAR =  FAKTOR from polarization sum (\nu, see Unkel (38ff))             
              C(NZMKOM)=F1*F2*F*FAPO*FPOLAR
C
C             ENDE LOOP M-WERTE POLYNOME
390          CONTINUE
C
C            SUCHE DER NAECHSTEN M-KOMBINATION
             GOTO 270
C
C
400          CONTINUE
C            ALLE MOEGLICHEN M-KOMBINATIONEN GEFUNDEN
C
             GOTO(410,440,440,450,450,440,450,402),NOP
402          STOP 10
410          CONTINUE
C            NORM, ZENTRAL
             IF((NZMKOM.EQ.0).AND.(LAUS.GT.2)) PRINT 1030
             IF(NZMKOM.LE.0) GOTO 770
             CALL SDA1(LV,MW,NZMKOM,C,MZAHL,NZLMEP)
C            SUCHE DER SIGMA-FAKTOREN IN SDA1
C
C
             IF(MZAHL.LE.0) GOTO 770
C            MZAHL: MAXIMALE ANZAHL VON SIGMA-FAKTOREN PRO
C                   SIGMA-KOMBINATION
             IF(MZAHL.LE.NDIMCW) GOTO 414
             WRITE (*,1013) MZAHL,NDIMCW
             STOP 11
414          IF(LAUS.LE.0) GOTO 430
             WRITE (*,1014) MZAHL,IQ
             WRITE(*,1015)
             DO 416 MH=1,MZAHL
416          WRITE (*,1016) CW(MH),(MVM(KH,MH),KH=1,IQ)
430          CALL PORD(NLWL,NLWR,MZAHL,NPWL,NPWR)
C
             GOTO 770
C
C
440          CONTINUE
C            SPIMOPERATOREN UND COULOMB-/SIEGERTOPERATOR
C
C
             IF((NZMKOM.EQ.0).AND.(LAUS.GT.2)) PRINT 1030
             IF (NZMKOM.LE.0) GOTO 770
             CALL LIS (LV,MW,NZMKOM,C,MZAHL,NZLMEP,LOP,MOP,LALL,
     *                 NLWL,NLWR,NPWL,NPWR)
C            SUCHE DER INTERNEN DREHIMPULSSTRUKTUREN IN DER
C            UNTERPROGRAMMKETTE LIS UND ANSCHL. BERECHNUNG DER
C            SIGMA-FAKTOREN
             GOTO 770
C
450          CONTINUE
C            BAHNOPERATOREN UND KORREKTUROPERATOR
C
             MOPH=MOP-IPOLAR
             IF((NZMKOM.EQ.0).AND.(LAUS.GT.2)) PRINT 1030
             IF (NZMKOM.LE.0) GOTO 470
             DO 460, MH=1, NZLMEP
              LVMOD(MH)=LV(MH)
460          CONTINUE
             LVMOD(LMOD)=LV(LMOD)-1
             CALL LIS (LVMOD,MW,NZMKOM,C,MZAHL,NZLMEP,LOP,MOPH,
     *                 LALL,NLWL,NLWR,NPWL,NPWR)
C
470          IPOLAR=IPOLAR+1
             IF (IPOLAR.LE.1) GOTO 210
C
C
C            ENDE LOOP POLYNOME RECHTS
770         CONTINUE
C
C           ENDE LOOP POLYNOME LINKS
780        CONTINUE
C
C          ENDE LOOP DREHIMPULSSTRUKTUREN RECHTS
790       CONTINUE
C
C         ENDE LOOP DREHIMPULSSTRUKTUREN LINKS
800      CONTINUE
C
         GOTO (810,840,840,840,840,840,840,802), NOP
802      STOP 12
C
810      CONTINUE
C        NORM
C
C        BESTIMMUNG VON IQMAX; IQMAX: MAXIMALE ANZAHL DER SIGMA-FAKTORN
         IQMAX=0
         IF(KZAHL.LE.0) GOTO 830
         DO 820  KH=1,KZAHL
          INDEX(KH)=0
          IF(IQMAX.GE.JQ(KH)) GOTO 820
          IQMAX=JQ(KH)
820      CONTINUE
C
830      IQMAX=MAX0(IQMAX,1)
C
         WRITE (NBAND1) KZAHL,IQMAX
         WRITE (*,1017) '<>',KZAHL,IQMAX,NDIMOR
         IF(KZAHL.LE.0) GOTO 875
         IF(LAUS.GT.0) WRITE (*,1018) NBAND1
C
         CALL WRITAP(LAUS,IQMAX,NBAND1)
C        WRITAP SCHREIBT DIE ERGEBNISSE AUF NBAND1
C
         GOTO 875
C 
C
840      CONTINUE
C        EL.-MAGN. OPERATOREN
C
         WRITE (NBAND1) KZAHLG, IQMAXG
         WRITE (*,1017) '<>',KZAHLG, IQMAXG, NDIMOR
         IF (KZAHLG.LE.0) GOTO 855
         IF (KZAHLG.LE.NDIMOR) GOTO 850
         WRITE (*,1021) KZAHLG, NDIMOR
         STOP 13
850      IF (LAUS.GT.0) WRITE (*,1018) NBAND1
         REWIND NBAND2
         CALL READAP (NZLIK,NBAND2)
C        READAP LIEST ALLE RECORDS VON NBAND2
C
         KZAHL=KZAHLG
         CALL WRITAP (LAUS,IQMAXG,NBAND1)
C        WRITAP SCHREIBT RECORD AUF TAPE 1
C
C
855      GOTO (858,875,860,865,870,875,870,859), NOP
858      STOP 14
859      STOP 15
860      CONTINUE
C        MAGN. SPINOPERATOR
C
         IF (LOPMOD.EQ.(-1)) GOTO 875
         LOPMOD=-1
         NZREC=NZREC+1
         GOTO 160
C
865      CONTINUE
C        EL. BAHNOPERATOR
C
         IF (LOPMOD.EQ.(-1)) GOTO 870
         LOPMOD=-1
         NZREC=NZREC+1
         GOTO 160
C
870      CONTINUE
C        EL. UND MAGN. BAHNOPERATOR UND KORREKTUROPERATOR
C
         LOPMOD=1
         LMOD=LMOD+1
         IF (LMOD.GT.NZLMEP) GOTO 875
         NZREC=NZREC+1
         GOTO 160
C
875      PRINT 1022, NOP, NZREC
C
C
C        ENDE LOOP OPERATOREN
880     CONTINUE
C
C       ENDE LOOP ZERLEGUNGEN RECHTS
890    CONTINUE
C
C      ENDE LOOP ZERLEGUNGEN LINKS
900   CONTINUE
C
      WRITE (*,1019)
      STOP
1000  FORMAT (20I3)
1001  FORMAT(' ZAHL DER ZERLEGUNGEN',I3,4X,'MULTIPOLARITAET',I3)
1002  FORMAT(//,'0 ZERLEGUNG',I5)
1003  FORMAT(' ANZAHL DER CLUSTER',I5,
     1 ' ANZAHL DER DREHIMPULSSTRUKTUREN',I5)
1004  FORMAT(/,' DREHIMPULSSTRUKTUR',I5)
1005  FORMAT(I4,' TER DREHIMPULS =',I3,' RELATIVDREHIMPULS')
1006  FORMAT(I4,' TER DREHIMPULS =',I3,' GEKOPPELT AUS DREHIMPULS',
     1 I3,' UND DREHIMPULS',I3)
1007  FORMAT(' BEI DER',I3,' TEN POLYNOM FUNKTION SIND POLYNOME DER'
     1 ,' ORDNUNG',3I3)
1008  FORMAT(/,' OPERATOR',I3,' WIRD GERECHNET')
1009  FORMAT(///,1X,'RECHNUNG ZWISCHEN ZERLEGUNG',I3,
     *              ' UND ZERLEGUNG',I3)
1010  FORMAT(' KOPPLUNG LIEFERT NULL',3I5)
1011  FORMAT(/,' MATRIXELEMENT ZWISCHEN ',
     1 'DEM',I3,' TEN POLYNOM DER',I3,
     2 ' TEN DREHIMPULSSTRUKTUR DER',I3,
     3 ' TEN ZERLEGUNG MIT PARITAET',I3,' UND',/,24X,
     4 'DEM',I3,' TEN POLYNOM DER',I3,
     5 ' TEN DREHIMPULSSTRUKTUR DER',I3,
     6 ' TEN ZERLEGUNG MIT PARITAET',I3)
1012  FORMAT(' DIMENSION VON C UND MW ZU KLEIN',2I5)
1013  FORMAT(' DIMENSION VON CW UND MVM ZU KLEIN',2I5)
1014  FORMAT(' NUMBER OF MATRIX ELEMENTS',I3,' NUMBER OF ',
     1 'SIGMA-FACTORS',I3)
1015  FORMAT(' MATRIX ELEM SIGMA-FACTORS')
1016  FORMAT(1X,E12.4,I5,20I3)
1017  FORMAT(' KZAHL=',I5,' IQMAX=',I4,' DIMENSION ',I6)
1018  FORMAT(//,' AUSDRUCK DER TERME WIE AUF TAPE ',I2)
1019  FORMAT(' ENDE DER RECHNUNG VON LUISE')
1020  FORMAT ('1',3X,'PROGRAMM LUISE',/,
     *            4X,'==============',///
     *            1X,'HD-VERSION VOM 06.02.89',//)
1021  FORMAT(1X,'DIMENSION DES COMMON-BLOCKS ORD ZUR KLEIN:'
     *       ,/,1X,'KZAHL= ',I6,'   NDIMOR= ',I6)
1022  FORMAT(/,4X,'FUER DEN',I2,'. OPERATOR WURDEN',I3,
     *       ' RECORDS GESCHRIEBEN.',/,' ')
1023  FORMAT(/,4X,'FAKTOR F9 DER EL.-MAGN. OPERATOREN ',
     *       E12.4)
1024  FORMAT(/,4X,'FAKTOR DES RED. MATRIXELEMENTS:',/,
     *       4X,'CLEBSCH: (',I2,',',I2,';',I2,',',I2,
     *       '/',I2,',',I2,') = ',E12.4,/,4X,'FAKTOR: ',
     *       E12.4)
1025  FORMAT(/,4X,'GESAMTVORFAKTOR DES MATR.-EL.: ',E12.4)
1026  FORMAT(/,4X,'LOOP POLARITAET')
1027  FORMAT(//,4X,'POLARITAET ',I2)
1028  FORMAT(4X,'ABS(MOP+IPOLAR) GT LOP')
1029  FORMAT(4X,'DER',I2,' TE DREHIMPULS KANN NICHT ERNIEDRIGT',
     *       ' WERDEN')
1030  FORMAT(4X,'KEINE M-KOMBINATION')
      END
      SUBROUTINE MVAL(N5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
CC      IMPLICIT NONE
C     THIS SUBROUTINE CALCULATES ALL POSSIBLE MVALUE COMBINATIONS OF
C     POLYNOMIALS
      INCLUDE 'par/LUISE'
      COMMON /MVA/ KV(2*(NZCMAX-1)),KMV(2*(NZCMAX-1),NDIMK),
     *             MMOEG, MKAUS
      DIMENSION IHV(2*(NZCMAX-1))
      MMOEG=1
      DO 10 I=1,N5
      IHV(I)=KV(I)
10    MMOEG=MMOEG*(KV(I)+1)
      IF(MMOEG.GT.NDIMK) GOTO 199
      DO 100 I=1,MMOEG
      DO 20 NH=1,N5
20    KMV(NH,I)=IHV(NH)
      MH=N5
25    IF(IHV(MH).LE.0)  GOTO 30
      IHV(MH)=IHV(MH)-1
      GOTO 100
30    IHV(MH)=KV(MH)
      MH=MH-1
      IF(MH) 40,40,25
40     IF(I.LT.MMOEG)GOTO 200
100   CONTINUE
      IF(MKAUS.EQ.0) GOTO 160
      DO 140  MH=1,MMOEG
140   PRINT 150,(KMV(NH,MH),NH=1,N5)
150    FORMAT(' MVALUES',10I4)
160   RETURN
198   FORMAT(' DIMENSION KMV ZU KLEIN')
199   PRINT 198
200   PRINT 201,I,MMOEG,KV,IHV
201   FORMAT(' NACH',I5,' VERSUCHEN VON',I5,' AUFGEGEBEN',
     1 ' KV,IHV= ',12I3)
      STOP 100
      END
      SUBROUTINE SDA1(L,MW,NEL,C,JJ,ND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     THIS SUBROUTINE CALCULATES ALL POSSIBLE REPRESENTATIONS
C     AND DETERMINES WHAT SIGMA FACTORS EXIST
C     FOR EACH REDUCED MATRIXELEMENT
C
C     L CONTAINS NQ L-VALUES
C     MW CONTAINS ALL M-VALUE COMBINATIONS
C     NEL IS THE NUMBER OF MATRIX ELEMENTS C
C     JJ IS DETERMINED IN SDA1 AND GIVES THE NUMBER OF SIGMA COMBINATIONS
      INCLUDE 'par/LUISE'
      
      COMMON/SDA/CW(NDIMCW), MVM(NZIQMA,NDIMCW), KAUS,
     *           N5, IQ, NKAPO
      COMMON/FAKTOR/F3(2*LWMAX+1), F7(2*LWMAX+1),
     *              F8(2*LWMAX+1)
      DIMENSION L(3*(2*(NZCMAX-1))),MW(NDIMC,3*(2*(NZCMAX-1)))
      DIMENSION IVM(NZIQMA),IVN(NZIQMA),IG(NZIQMA),C(NDIMC)
      DIMENSION JVM(NZIQMA),JVN(NZIQMA),LQ(3*(2*(NZCMAX-1)))
      DIMENSION KY(3*(2*(NZCMAX-1))),KYS(3*(2*(NZCMAX-1)))
      DIMENSION MKOM(2*(NZCMAX-1)+1,2*(NZCMAX-1)+1)
      DIMENSION IWN(NZIQMA),IWM(NZIQMA)
C
C
C     CHECK PRINTOUT
      IF(KAUS.LE.0) GOTO 20
      WRITE (*,1000)
1000  FORMAT (/,4X,'SUBROUTINE SDA1')
      WRITE (*,1001) NEL,ND
1001  FORMAT(4X,'ANZAHL DER MATRIXELEMENTE     :',I3,/,
     1       4X,'ANZAHL DER DREHIMPULSE        :',1X,I2)
      WRITE (*,1002) (L(KH),KH=1,ND)
1002  FORMAT(4X,'DREHIMPULSE                   :',19I3)
      DO 10 KH=1,NEL
10    WRITE (*,1003) C(KH),(MW(KH,NH),NH=1,ND)
1003  FORMAT(4X,'MATRIXELEMENT UND M-WERTE     :',1X,E12.4,1X,19I3)
C     PREPARATION
20    JJ=0
      NQ=N5+(ND-(2*NKAPO+1)*N5)
      ITEN=0
      IF(NQ.NE.N5) ITEN=1
C      TREATS TENSOR SEPARATELY
      IH=0
      DO 22 MH=1,NQ
      DO 22 NH=MH,NQ
      IH=IH+1
22    MKOM(MH,NH)=IH
C     MKOM GIVES THE COMBINATION OF SIGMA FACTORS
      IH=0
      DO 24  MH=1,ND
      LQ(MH)=L(MH)
24    IH=IH+L(MH)
      IF(MOD(IH,2).NE.0) GOTO 2000
C     CHECK IF SUM L EVEN
      IQ=IH/2
      IF(IH.GT.0) GOTO 28
      C1=0.
      DO 26 NH=1,NEL
26    C1=C1+C(NH)
      CW(1)=C1
      JJ=1
      MVM(1,1)=0
C     NO SIGMA FACTORS
      RETURN
28    DO 32 NH=1,NEL
      IH=0
      DO 30 MH=1,ND
30    IH=IH+MW(NH,MH)
      IF(IH.NE.0) GOTO 2001
C     CHECK IF SUM M-VALUES ZERO
32    CONTINUE
C     LOOK FOR POSSIBLE SIGMA FACTORS
C     DETERMINE INDICES JVN AND JVM
      IH=1
      MD=ND-1
      M=1
34    JVM(IH)=M
      IF(LQ(M)) 2002,54,36
36    LQ(M)=LQ(M)-1
      IF(IH-1) 2003,40,38
38    IF(M.NE.JVM(IH-1)) GOTO 40
      N=JVN(IH-1)
      GOTO 42
40    N=M+1
42    JVN(IH)=N
      IF(LQ(N)) 2002,48,44
44    LQ(N)=LQ(N)-1
      IF(IH-IQ) 46,66,2003
46    IH=IH+1
C     NEXT FACTOR SIGMA
      GOTO 34
C     LOOK FOR OTHER N
48    IF(N-ND) 50,52,2003
50    N=N+1
      GOTO 42
52    LQ(M)=LQ(M)+1
C     RESTORE L-VALUE AND LOOK FOR OTHER M
54    IF(M-MD)  56,58,2003
56    M=M+1
      GOTO 34
58    IF(IH-1)  2003,999,60
60    IH=IH-1
62    M=JVM(IH)
C     ENTRY POINT FOR SEARCH OF OTHER SIGMA COMBINATION
      N=JVN(IH)
      LQ(N)=LQ(N)+1
      GOTO 48
C     JVM AND JVN DETERMINED
C     DETERMINE INDICES IG
66    C1=0.
C     LOOP OVER ALL M-COMBINATIONS
      DO 500 KE=1,NEL
      IF(KAUS.GT.3) WRITE(*,1500) KE
1500   FORMAT(' LOOP UEBER M-WERTE',I5,' TES M-ELEMENT')
      C2=C(KE)
      DO 70 NH=1,ND
      KY(NH)=L(NH)-1+MW(KE,NH)
70    KYS(NH)=L(NH)-1-MW(KE,NH)
C     KY AND KYS GIVE THE NUMBER OF ARROWS FROM N AND TO N
C     CHOOSE SIGMA FACTOR
C     PREPARATION
      IH=1
      M=JVM(IH)
      N=JVN(IH)
      GOTO 100
80    IF(IH-IQ)  82,200,2003
82    IH=IH+1
      M=JVM(IH)
      N=JVN(IH)
C     CHECK IF SAME SIGMA FACTOR
      IF(M-JVM(IH-1).NE.0) GOTO 100
      IF(N-JVN(IH-1).NE.0) GOTO 100
      IF(IG(IH-1))  140,160,100
C     TRY FOR IG=+1,ARROW FROM M TO N
100   IF(KY(N).LE.0) GOTO 140
      IF(KYS(M).LE.0) GOTO 140
      IG(IH)=1
      KY(N)=KY(N)-2
      KYS(M)=KYS(M)-2
C     NEXT SIGMA FACTOR
      GOTO 80
C     TRY FOR IG=-1,ARROW FROM N TO M
140   IF(KYS(N)) 190,162,142
142   IF(KY(M)) 190,164,144
144   IG(IH)=-1
      KY(M)=KY(M)-2
      KYS(N)=KYS(N)-2
C     NEXT SIGMA FACTOR
      GOTO 80
C     TRY FOR IG=0, NO ARROW
160   IF(KYS(N).LT.0) GOTO 190
162   IF(KY(M).LT.0) GOTO 190
164   IF(KY(N).LT.0) GOTO 190
      IF(KYS(M).LT.0) GOTO 190
      IG(IH)=0
      KY(N)=KY(N)-1
      KYS(N)=KYS(N)-1
      KY(M)=KY(M)-1
      KYS(M)=KYS(M)-1
C     NEXT SIGMA FACTOR
      GOTO 80
190   IF(IH-1) 2003,500,192
192   IH=IH-1
194   N=JVN(IH)
      M=JVM(IH)
      IF(IG(IH))  196,197,195
C     RESTORE IG=+1
195   KY(N)=KY(N)+2
      KYS(M)=KYS(M)+2
C     TRY IG=-1
      GOTO 140
C     RESTORE IG=-1
196   KY(M)=KY(M)+2
      KYS(N)=KYS(N)+2
C     TRY IG=0
      GOTO 164
C     RESTORE IG=0
197   KY(M)=KY(M)+1
      KYS(M)=KYS(M)+1
      KY(N)=KY(N)+1
      KYS(N)=KYS(N)+1
C     TRY PRIOR SIGMA FACTOR
      GOTO 190
C     END OF IG
C     UTILYSE EQUALITY OF SIGMA FACTORS
200    DO 250 IK=1,IQ
C     VM FACTOR
      KH=(JVM(IK)-1)/N5
      IVM(IK)=JVM(IK)-KH*N5*NKAPO
C      NO POLYNOMIAL = NKAPO =0,NO REDUCTION NECESSARY
      IF(ITEN*KH.EQ.3) IVM(IK)=IVM(IK)+N5
      KH=MOD(KH,3)
      IWM(IK)=KH+1
C     VN FACTORS
      KH=(JVN(IK)-1)/N5
      IVN(IK)=JVN(IK)-KH*N5*NKAPO
C      NO POLYNOMIAL = NKAPO =0,NO REDUCTION NECESSARY
      IF(ITEN*KH.EQ.3) IVN(IK)=IVN(IK)+N5
      KH=MOD(KH,3)
      IWN(IK)=KH+1
      IF(KAUS.GT.3)  WRITE (*,1200) IK,JVM(IK),JVN(IK)
     1  ,IVM(IK),IVN(IK),IWM(IK),IWN(IK),IG(IK)
1200  FORMAT(' LOOP W-INDICES, IK,JVM,JVN,IVM,IVN,IWM,IWN,IG =',8I5)
C     ORDER VM .LE. VN
      IF(IVM(IK).LE.IVN(IK)) GOTO 230
      KH=IVM(IK)
      IVM(IK)=IVN(IK)
      IVN(IK)=KH
C     ORDER WM .LE. WN
230   IF(IWM(IK).LE.IWN(IK)) GOTO 250
      KH=IWM(IK)
      IWM(IK)=IWN(IK)
      IWN(IK)=KH
250   CONTINUE
C     DETERMINE CONSTANT
      C3=C2
      NF=2
      DO 320 IK=1,IQ
      IS=IK-1
      IF(IG(IK).NE.0) C3=C3*(-.5)
      IF(IS.EQ.0) GOTO 320
C     SKIP FIRST FACTOR
C     CHECK FOR EQUALITY OF ALL INDICES AND CALCULATE FACULTY
      IF(JVN(IK).NE.JVN(IS)) GOTO 310
      IF(JVM(IK).NE.JVM(IS)) GOTO 310
      IF(IG(IK).NE.IG(IS)) GOTO 310
      NF=NF+1
      GOTO 320
310   C3=C3*F8(NF)
      NF=2
320   CONTINUE
      C3=C3*F8(NF)
      C1=C1+C3
C     FACTOR DETERMINED AND SUMMED UP
      IH=IQ
C     RESTORE KY AND KYS VALUES
      IF(KAUS.GT.1) WRITE (*,1320) C1,IH,(IVM(LX),IVN(LX),LX=1,IH)
1320   FORMAT(4X,'NEUES MATRIXELEMENT           :',1X,E12.4,/,
     *        4X,'ANZAHL DER SIGMA-FAKTOREN     :',1X,I2,/,
     *        4X,'INDIZES DER SIGMA-FAKTOREN    :',1X,10('(',I2,
     *           ',',I2,')',:,2X))
      GOTO 194
500   CONTINUE
C     CHECK IF FACTOR DIFFERENT FROM ZERO
      IF(ABS(C1).LT.1.E-10) GOTO 610
      JJ=JJ+1
      IF(JJ.GT.NDIMCW) GOTO 2004
C      ORDER INDICES
      CALL SORT2(IQ,IVM,IVN)
      CW(JJ)=C1
      DO 600 IK=1,IQ
      MH=IVM(IK)
      NH=IVN(IK)
600   MVM(IK,JJ)=MKOM(MH,NH)
C     LOOK FOR DIFFERENT SIGMA FACTORS
      IF(KAUS.GT.1) WRITE(*,1610)JJ,CW(JJ),(MVM(IK,JJ),IK=1,IQ)
1610  FORMAT(4X,'ELEMENT ',I4,'   WERT UND INDEX :',1X,E12.4,
     *       1X,19I3)
610   IH=IQ
      GOTO 62
999   CONTINUE
      IF (KAUS.GT.0) PRINT 1010
1010  FORMAT (/)
      RETURN
2000  WRITE(*,1004)
1004  FORMAT(' +++ SUMME L-WERTE UNGERADE ++')
      STOP 21
2001  WRITE (*,1005) NH,(MW(NH,IH),IH=1,ND)
1005  FORMAT(' ++ SUMME M-WERTE NICHT NULL, NH=',I4,' M-WERTE',19I3)
      STOP 22
2002  WRITE (*,1006) M,LQ(M)
1006  FORMAT(' DER',I5,'TE L-WERT IST NEGATIV',I5)
      STOP 23
2003  WRITE (*,1007) IH,M,N
1007  FORMAT(' INDICES AUSSERHALB BEREICH,IH,M,N',3I5)
      STOP 24
2004  WRITE (*,1008) JJ
1008  FORMAT(' DIMENSIONIERUNG VON CW ZU KLEIN JJ=',2I5)
      STOP 25
      END
      SUBROUTINE SORT2(IQ,JVM,JVN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     SORT2 ORDER THE INDICES JVM,JVN LEXICOGRAPHICALLY
      INCLUDE 'par/LUISE'
      DIMENSION IND(NZIQMA),JVM(NZIQMA),JVN(NZIQMA)
      IF(IQ.LE.1) GOTO 200
      IQ1=IQ-1
C     ORDER ACCORDING TO JVM
      CALL SORTA(1,IQ,JVM,IND,NZIQMA)
      CALL PUTA(1,IQ,JVN,IND)
C      ORDER JVN
      JMIN=0
      DO 30 I=1,IQ1
      IF(JVM(I+1).NE.JVM(I)) GOTO 25
      IF(JMIN.NE.0) GOTO 22
      JMIN=I
22    IF(I.NE.IQ1) GOTO 30
      JMAX=I+1
      GOTO 27
25    IF(JMIN.LE.0) GOTO 30
      JMAX=I
27    IF(JMAX.EQ.JMIN) GOTO 30
      CALL SORTA(JMIN,JMAX,JVN,IND,NZIQMA)
      JMIN=0
30    CONTINUE
200   RETURN
      END
      SUBROUTINE SORTA(IMIN,IMAX,JQ,IND,NZIQMA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     SORTA ORDERS ARRAY J AND GIVES THE ORDERING IN IND
      DIMENSION JQ(NZIQMA),IND(NZIQMA)
      DO 10 I=IMIN,IMAX
10    IND(I)=I
      IF(IMAX.EQ.IMIN) GOTO 200
      IQ1=IMAX-1
      DO 20 I=IMIN,IQ1
      J=I
15    IF(JQ(J+1).GE.JQ(J)) GOTO 20
      JM=JQ(J)
      ISUB=IND(J)
      JQ(J)=JQ(J+1)
      IND(J)=IND(J+1)
      JQ(J+1)=JM
      IND(J+1)=ISUB
      J=J-1
      IF(J.GE.IMIN) GOTO 15
20    CONTINUE
200   RETURN
      END
      SUBROUTINE PUTA(IMIN,IMAX,JQ,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     PUTA INTERCHANGES ELEMENTS IN JQ ACCORDING TO IND
      INCLUDE 'par/LUISE'
      DIMENSION JQ(NZIQMA),IND(NZIQMA),KH(NZIQMA)
      DO 10 I=IMIN,IMAX
10    KH(I)=JQ(I)
      DO 20 I=IMIN,IMAX
      IH=IND(I)
20    JQ(I)=KH(IH)
      RETURN
      END
      SUBROUTINE LIS (LE,ME,NZMEK,CE,MZAHL,NZLMEP,LOP,
     *                MOP,LALL,NLWL,NLWR,NPWL,NPWR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)      
C      IMPLICIT NONE
C
C     LIS BESTIMMT ZU N GEGEBENEN EXTERNEN DREHIMPULSEN LE(I)
C     (=DREHIMPULSE DER WELLENFUNKTIONEN IM MATRIXELEMENT) ALLE
C     MOEGLICHEN INTERNEN DREHIMPULSE LI GEMAESS 4 BEDINGUNGEN
C
      INTEGER N, L0, M0, LESUM, LISUM, NZMEK, MZAHL, LALL
C     N: ANZAHL DER DREHIMPULSE IM MATR.-EL
C     L0 DREHIMPULS DES OPERATORS
C     M0: ZUGEHOERIGER M-WERT
C     LESUM SUMME ALLER LE(I)
C     LISUM SUMME ALLES LI(I)
C     LIMAX: MAXIMALES LI
C     I,K LAUFPARAMETER
C
      INCLUDE 'par/LUISE'
      PARAMETER (NZLMAX=3*(2*(NZCMAX-1)))
C     NZCMAX: MAXIMALE ANZAHL DER CLUSTER
C     LWMAX : MAXIMALER WERT EINES AUFTRETENDEN DREHIMPULSES
C     NDIMC : DIMENSIONSPARAMETER DES FELDES C
C     NZIQMA: MAXIMALE ANZAHL DER SIGMA-FAKTOREN
C     NDIMCW: DIMENSIONSPARAMETER DES FELDES CW DER MATR.-EL.
C     NDIMOR: DIMENSIONSPARAMETER IM COMMONBLOCK ORD
C     NZLMAX: MAXIMALE ANZAHL DER DREHIMPULSE
C
      COMMON/HIVA/NBAND1, NBAND2, KZAHLG, IQMAXG, NZLIK
C
C     NBAND1: TAPE FUER ERGEBNISSE
C     NBAND2: TAPE FUER ZWISCHENERGEBNISSE
C     KZAHLG: GESAMTANZAHL ALLER SIGMAKOMBINATIONEN FUER ALLE LI-
C             KOMBINATIONEN ALLER DREHIMPULSSTRUKTUREN
C     IQMAXG: MAXIMALE ANZAHL VON SIGMA-FAKTOREN FUER ALLE LI-
C             KOMBINATIONEN ALLER DREHIMPULSSTRUKTUREN
C     NZLIK : GESAMTANZAHL ALLER LI-KOMBINATIONEN FUER ALLE
C             DREHIMPULSSTRUKTUREN
      COMMON /LWERTE/ CH, N, L0, M0, LEHILF(NZLMAX),
     *                MEHILF(NZLMAX), MIHILF(NZLMAX),
     *                LI(NZLMAX), MI(NZLMAX,NDIMC)
C     LEHILF: ZWISCHENSPEICHER FUER LE-WERTE
C     MEHILF:         "         "   ME-KOMBINATION
C     MIHILF:         "         "   MI-     "
C     LI(I): I-TER INTERNER DREHIMPULS
C     CH    :         "         "   CE-     "
C     MI(I,J): ZUMI-TEN INTERNEN DREHIMPULS GEHOERENDER
C              M-WERT DER J-TEN M-KOMBINATION
C
      COMMON /FAKTOR/ F3(2*LWMAX+1), F7(2*LWMAX+1),
     *                F8(2*LWMAX+1)
C     AUS LUISE; BENOETIGT WIRD NUR F3(I)=SQRT((I-1)!)
C
      COMMON /SDA/ CW(NDIMCW), MVM(NZIQMA,NDIMCW), KAUS,
     *             NZLME, IQ, NKAPO
C     WIRD IN SDA1 BESETZT UND WEITER UNTEN AUSGEDRUCKT
C
      COMMON /ORD/ JQ(NDIMOR),EPO(NDIMOR),
     *             INDPO(NDIMOR),MVK(NZIQMA,NDIMOR),
     *             INDEX(NDIMOR),KZAHL
C     WIRD IN PORD BESETZT; BENOETIGT WIRD NUR JQ(I) UND INDEX
C     JQ(I): ANZAHL DER SIGMA-FAKTOREN DER I-TEN
C     SIGMA-KOMBINATION
C     INDEX: VERSCHLUESSELTE LI-KOMBINATION
C
      DIMENSION LE(NZLMAX), ME(NDIMC,NZLMAX), CE(NDIMC)
C     LE(I): I-TE EXTERNE DREHIMPULS (AUS DES MATR.-EL.)
C     ME(J,I): ZUM I-TEN EXTERNEN DREHIMPULS GEHOEREMDER ME-
C              WERT AUS DER J-TEN ME-KOMBINATION
C     CE(J): ZUR J-TEN ME-KOMBINATION GEHOERENDER FAKTOR
C
      DIMENSION LD(NZLMAX), MD(NDIMC,NZLMAX), C(NDIMC)
C     LD (I) = LE(I)-LI(I)
C     MD (I,J) = ME(I,J)-MI(I,J)
C     F (J): DER ZUR J-TEN MI-KOMBINATION GEHOERENDE FAKTOR
C
      DIMENSION LDMAX(NZLMAX)
C     LDMAX(I): MAXIMALES LD(K) FUER ALLE K.LE.I
C
      MINUS1(I)=1-2*MOD((ABS(I)),2)
C
C
C
C     INITIALISIERUNG UND UEBERPRUEFUNG DER DATEN
C
      N=NZLMEP
      L0=LOP
      M0=MOP
      IF (N.GT.NZLMAX) STOP 60
      IF ((ABS(M0)).GT.L0) STOP 61
C
      F1=F7(1)*MINUS1(L0+M0)/SQRT(FLOAT(2*L0+1))
      LESUM=LE(1)
      IF (LE(1).GT.LWMAX) STOP 62
      LEHILF(1)=LE(1)
      LI(1)=LE(1)
      LISUM=LI(1)
      LDMAX(1)=0
      K=1
      DO 10, I=2,N
        IF (LE(I).GT.LWMAX) STOP 62
        LEHILF(I)=LE(I)
        LESUM=LESUM+LE(I)
        LI(I)=0
  10  CONTINUE
      IF (LALL.GT.0) PRINT 1000,N,L0,M0,F1,(LE(I),I=1,N)
C
C
C
C     SETZE FUER ALLE I.GT.K LI(I)=LE(I)
C
  20  DO 30, I=(K+1),N
        LISUM=LISUM+LE(I)-LI(I)
        LI(I)=LE(I)
        LDMAX(I)=LDMAX(I-1)
  30  CONTINUE
C
C     UEBERPRUEFEN DER 4 BEDINGUNGEN
C
      IF (MINUS1((LISUM+L0)).NE.1) GOTO 60
C
      IF ((LESUM-LISUM-2*LDMAX(N)).GE.0) GOTO 40
      IF (LDMAX(N)-LDMAX(N-1)) 80, 60, 80
C
  40  IF (LISUM.LT.L0) GOTO 80
C
      LIMAX=LI(1)
      DO 50, I=2,N
        LIMAX=MAX(LIMAX,LI(I))
  50  CONTINUE
      IF ((2*LIMAX-LISUM).GT.L0) GOTO 60
C
      GOTO 100
C
C
C     SYSTEMATISCHES DURCHFAHREN NEUER KOMBINATIONEN
C
  60  K=N
  70  IF (K.LE.0) GOTO 400
        LI(K)=LI(K)-1
        IF (LI(K).GE.0) GOTO 90
        LI(K)=0
  80    K=K-1
      GOTO 70
C
  90  LISUM=LISUM-1
      LDMAX(K)=MAX((LE(K)-LI(K)),LDMAX(K))
      GOTO 20
C
C
C
 100  CONTINUE
C     ALLE BEDINGUNGEN AN DIE LI ERFUELLT
C
C     BERECHNUNG DES FAKTORS F
C     F ENTHAELT ALLE NUR VON DEN LI ABHAENGIGENFAKTOREN,
C     AUCH DIE, DIE ERST BEI DER INTEGRATION UBER DIE KUGEL-
C     FUNKTIONEN AUFTRETEN
C
      IF (MINUS1(LISUM-L0).NE.1) STOP 63
      F=F1*MINUS1((LISUM-L0)/2)
C     F=F1*(I**(LISUM-L0))
      IF (LALL.GT.2) PRINT 1010, F, (LI(I), I=1,N)
C
C
      I2=0
C     I2 GIBT AN, OB ES ZU IRGENDEINER ME-KOMBINATION UEBERHAUPT
C     EINE MI-KOMBINATION MIT NICHT VERSCHWINDENDEM GINT GIBT
C
C
C
      DO 300, J=1,NZMEK
C       LOOP UEBER ALLE ME-KOMBINATIONEN
C
        DO 110, IH=1,N
          MEHILF(IH)=ME(J,IH)
 110    CONTINUE
        CH=CE(J)
C
C       BESTIMMUNG ALLER MOEGLICHEN MI-KOMBINATIONEN IN MIS
C
        CALL MIS (NZMIK,LALL)
C       NZMIK WIRD IN MIS BESTIMMT UND GIBT DIE ANZAHL DER MI-KOMB.
C
C
        IF ((NZMIK.LE.0).AND.(LALL.GT.2)) PRINT 1030
        IF (NZMIK.LE.0) GOTO 300
        I1=0
C       I1 ZAEHLT MI-KOMBINATIONEN MIT NICHT VERSCHWINDENDEM INTEGRAL
C
        DO 200, I=1,NZMIK
C         LOOP UEBER ALLE MI-KOMBINATIONEN
C
          DO 120, IH=1,N
            MIHILF(IH)=MI(IH,I)
 120      CONTINUE
C
C         BERECHNUGN DES KUGELFUNKTIONSINTEGRAL IN IKUGEL
          CALL IKUGEL (GINT, LALL)
C
          IF (LALL.GT.3) PRINT 1060
          IF(LALL.GT.3) PRINT 1020,GINT,(MIHILF(IHH),IHH=1,N)
          IF (ABS(GINT).LT.1E-15) GOTO 200
C         INTERGRATION UEBER KUGELFKT LIEFERT 0.
C
C         BERECHNUNG VON C(I1)
C
          I2=1
          I1=I1+1
          GINT=GINT*F*CH
          DO 130, IH=1,N
            GINT=GINT/(F3(LI(IH)+MIHILF(IH)+1)*
     *                 F3(LI(IH)-MIHILF(IH)+1))
            MD(I1,IH)=ME(J,IH)-MIHILF(IH)
 130      CONTINUE
C
          C(I1)=GINT
          IF(I1.NE.1) GOTO 200
          DO 140, IH=1,N
            LD(IH)=LE(IH)-LI(IH)
 140      CONTINUE
C
C         ENDE LOOP UEBER ALLE MI-KOMBINATIONEN
 200    CONTINUE
C
C
        IF (I1.LE.0) GOTO 300
C
C       BESTIMMUNG DER SIGMA-KOMBINATIONEN IN SDA1
        CALL SDA1 (LD, MD, I1, C, MZAHL, N)
C
        IF (MZAHL.LE.0) GOTO 300
        IF (MZAHL.LE.NDIMCW) GOTO 270
        PRINT 1050, MZAHL, NDIMCW
        STOP 64
C
 270    CONTINUE
        IF (LALL.LE.1) GOTO 290
        DO 280, IH=1, MZAHL
          PRINT 1040, CW(IH), (MVM(IHH,IH), IHH=1,IQ)
 280    CONTINUE
C
 290    CALL PORD (NLWL,NLWR,MZAHL,NPWL,NPWR)
C
C
C       ENDE LOOP ME-KOMBINATIONEN
 300  CONTINUE
C
C
C     ALLE MI-KOMBINATIONEN ZU ALLEN ME-KOMBINATIONEN GEFUNDEN
C
      IF (I2.NE.1) GOTO 350
      IF(KZAHL.LE.0) GOTO 350
C     BESTIMMUNG VON IQMAX; IQMAX: MAXIMALE ANZAHL DER SIGMA-FAKTORN
      IQMAX=0
      DO 310  KH=1,KZAHL
       IF(IQMAX.GE.JQ(KH)) GOTO 310
       IQMAX=JQ(KH)
310   CONTINUE
C
      IF (LALL.GT.1) WRITE (*,1070) KZAHL,IQMAX
C
      IQMAX=MAX0(IQMAX,1)
      IQMAXG=MAX(IQMAX,IQMAXG)
      KZAHLG=KZAHLG+KZAHL
      NZLIK=NZLIK+1
C
      WRITE (NBAND2) KZAHL,IQMAX
C
C     BESTIMMUNG VON INDEX
C
      INDEXH=LI(N)
      DO  330, IH=(N-1),1,(-1)
        INDEXH=(INDEXH*10)+LI(IH)
 330  CONTINUE
C
      DO 340, IH=1,KZAHL
        INDEX(IH)=INDEXH
 340  CONTINUE
C
      IF(LALL.GT.1) WRITE (*,1080) NBAND2
C
      CALL WRITAP(LALL,IQMAX,NBAND2)
C     WRITAP SCHREIBT DIE ERGEBNISSE AUF NBAND2
C
      KZAHL=0
C
C
C     SUCHE NAECHSTE LI-KOMBINATION
 350  GOTO 60
C
 400  CONTINUE
C     ALLE LI-KOMBINATIONEN GEFUNDEN
C
C
      IF (LALL.GT.0) PRINT 1060
      RETURN
1000  FORMAT (//,4X,'PROGRAMMEINHEIT LIS',/,4X,
     *               '===================',/,
     *       4X,'ANZAHL DER DREHIMPULSE        :',1X,I2,/,
     *       4X,'OPERATORDREHIMPULS            :',1X,I2,1X,I2,/,
     *       4X,'FAKTOR UND EXTERNE DREHIMPULSE:',1X,E12.4,1X,18I3,/)
1010  FORMAT (//,4X,'FAKTOR UND INTERNE DREHIMPULSE:',1X,E12.4,1X,18I3)
1020  FORMAT (4X,'INTEGRAL UND INTERNE M-WERTE  :',1X,E12.4,1X,18I3)
1030  FORMAT (4X,'KEINE MI-KOMBINATION')
1040  FORMAT (4X,'MATRIXELEMENT U. SIGMAFAKTOREN:',1X,E12.4,1X,21I3,/)
1050  FORMAT (4X,'DIMENSION VON NDIMCW ZU KLEIN. MZAHL:',I6,
     *        '  NDIMCW:',I5)
1060  FORMAT (/)
1070  FORMAT (/,4X,'ANZAHL DER SIGMA-KOMBINATIONEN:',I3,/,
     *         4X,'MAXIMALE FAKTORENZAHL         :',I3)
1080  FORMAT (//,4X,'AUSDURCK DER TERME WIE AUF TAPE ',I2)
      END
       SUBROUTINE MIS(NZMIK,LALL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C
C       INTEGER   NZCMAX,NDIMC,LI,MIMAX,MIMIN,MPFEIL,M,
C     +           MOBEN,MUNTEN,MRECHT,MLINKS,NZLI,I,J,
C     +           K,KUI,KOI,KUJ,KOJ,NZMIK,MHILF,LE,ME,
C     +           LDUMMY,MDUMMY,NZLMAX
C      REAL CH
       INCLUDE 'par/LUISE'
       PARAMETER (NZLMAX=3*2*(NZCMAX-1))
       DIMENSION LI(NZLMAX),MIMAX(NZLMAX),MIMIN(NZLMAX),
     +           MI(NZLMAX,NDIMC),MHILF(NZLMAX),LE(NZLMAX),
     +           MPFEIL(NZLMAX),ME(NZLMAX),MDUMMY(NZLMAX)
       COMMON/LWERTE/ CH, NZLI,LDUMMY,M,LE,ME,MDUMMY,LI,MI
C
      IF (LALL.GT.0) PRINT 1000, CH, (ME(K), K=1,NZLI)
       I=1
       NZMIK=0
       MUNTEN=0
       MOBEN=0
C
C
       DO 10 K=1,NZLI
          MIMIN(K)=MAX(ME(K)+LI(K)-LE(K),-LI(K))
          MIMAX(K)=MIN(ME(K)-LI(K)+LE(K), LI(K))
          MHILF(K)=MIMIN(K)
          MUNTEN=MUNTEN+MIMIN(K)
10        MOBEN=MOBEN+MIMAX(K)
C
       IF(MOBEN  .LT. -M) GOTO 999
       IF(MUNTEN .GT. -M) GOTO 999
C
20     IF(-M-MUNTEN .LE. MIMAX(I)-MIMIN(I)) GOTO 30
         MHILF(I)=MIMAX(I)
         MPFEIL(I)=0
         MUNTEN=MUNTEN+MIMAX(I)-MIMIN(I)
         I=I+1
         GOTO20
30     MHILF(I)=MHILF(I)-M-MUNTEN
C
       DO 40 K=I,NZLI
40        MPFEIL(K)=1
       I=MAX(I,2)
       MRECHT=1
       MLINKS=I-1
C
50    NZMIK=NZMIK+1
       IF(NZMIK .GT. NDIMC) GOTO 9999
       DO 55 K=1,NZLI
55        MI(K,NZMIK)=MHILF(K)
C
60     KOI=(MIMAX(I)-MIMIN(I))*MPFEIL(I)+MIMIN(I)
       KUI= MIMAX(I)+MIMIN(I)-KOI
       MPFEIL(1)=MPFEIL(I)
C
       IF(MHILF(I) .NE. KOI) GOTO 70
65        MPFEIL(I)=1-MPFEIL(I)
          MLINKS=(MLINKS-I)*MPFEIL(I)+I
          MRECHT=(I-MRECHT)*MPFEIL(I)+MRECHT
          I=I+1
       IF(NZLI-I) 999,60,60
C
70     J=(MRECHT-MLINKS)*MPFEIL(I)+MLINKS
80     KOJ=(MIMAX(J)-MIMIN(J))*MPFEIL(J)+MIMIN(J)
       KUJ= MIMAX(J)+MIMIN(J)-KOJ
C
       IF(MHILF(J) .EQ. KUJ) GOTO 90
85        MHILF(I)=MHILF(I)+2*MPFEIL(I)-1
          MHILF(J)=MHILF(J)-2*MPFEIL(I)+1
          I=2
          MRECHT=1
          MLINKS=1
          GOTO50
C
90     IF(J .EQ. 1) GOTO 100
          J=J-1
       IF(MPFEIL(J)-MPFEIL(I)) 90,80,90
C
100    J=J+1
       IF(J .EQ. I) GOTO 65
         KOJ=(MIMAX(J)-MIMIN(J))*MPFEIL(I)+MIMIN(J)
          KUJ=MIMAX(J)+MIMIN(J)-KOJ
       IF(MHILF(J)-KUJ) 85,100,85
C
999    RETURN
1000  FORMAT (4X,'CE-FAKTOR UND EXTERNE M-WERTE :',1X,E12.4,1X,18I3)
9999   PRINT*,'NDIMC ZU KLEIN'
       STOP 65
       END
      SUBROUTINE IKUGEL (GINT, LALL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C
C     IKUGEL BERECHNET ALLE KOPPLUNGEN VON N KUGELFUNKTIONEN MIT  DEN
C     DREHIMPULSEN L(I) UND ZUGEHOERIGER Z-KOMPONENTE  M(I) UND INTEGRIERT
C     SIE MIT DER KUGELFUNKTION MIT DREHIMPULS L0 UND Z-KOMPONENTE M0
C
C      INTEGER N, L0, M0, L, M, LKOP, MKOP, K, K1, I, NZCMAX,
C     *        NDIMC, NZLMAX, LALL, L1, L2, L3, NKOP, LW1, LW2,
C     *        LW3, MW1, MW2
C      REAL Q, GINT, CH
      INCLUDE 'par/LUISE'
      PARAMETER (NZLMAX=3*(2*(NZCMAX-1)))
      COMMON /LWERTE/ CH, N, L0, M0, L1(NZLMAX),
     *                L2(NZLMAX), M(NZLMAX),
     *                L(NZLMAX), L3(NZLMAX,NDIMC)
C
      DIMENSION LKOP(NZLMAX), MKOP(NZLMAX), Q(NZLMAX)
C
C     NZCMAX MAXIMALE ANZAHL DER CLUSTER
C     NDIMC DIMENSIONPARAMETER IM COMMON-BLOCK
C     NZLMAX    '       '     '  DREHIMPULSE
C     L1, L2, L3 WERDEN NICHT BENOETIGT
C     L(I) DREHIMPULS DER I-TEN KUGELFUNKTION
C     M(I) ZUGEHOERIGE M-WERT
C     LKOP(I) DREHIMPULS, ZU DEM DIE I ERSTEN KUGELFUNKTIONEN GEKOPPELT WERDEN
C     MKOP(I) ZUGEHOERIGE Z-KOMPONENTE
C     NKOP ZAEHLT DIE KOPPLUGSSCHEMATA DURCH
C     Q(I) PRODUKT DER KOPPLUNGSKOEFFIZIENTEN DER ERSTEN I KUGELFUKTIONEN
C     LALL STEUERT AUSDRUCK: LALL.GT.4 FUEHRT ZU AUSDRUCK
C     ANDERE VARIABLE: LAUFINDIZES, DIMENSIONSPARAMETER ETC.
C
      MINUS1(I)=1-2*MOD((ABS(I)),2)
C
C
      IF (LALL.GT.4) PRINT 1000
C
C     UEBERPRUEFUNG DER EINGABEWERTE
C
      IF (N.GT.NZLMAX) STOP 70
      IF ((ABS(M0)).GT.L0) GOTO 200
      DO 10, I=1,N
        IF ((ABS(M(I))).GT.L(I)) GOTO 210
10    CONTINUE
C
C
C
C     INITIALISIERUNG DER PARAMETER UND DES FELDES MDSUM
C
      K=1
      K1=2
      GINT=0.
      NKOP=0
      LKOP(1)=L(1)
      Q(1)=1.
      MKOP(1)=M(1)
      LKOP(N)=L0
      DO 20, I=2,N
        MKOP(I)=MKOP(I-1)+M(I)
 20   CONTINUE
C
C
C
C     KOPPLUNG DER N-1 ERSTEN KUGELFUNKTIONEN ZUM DREHIMPULS LKOP(N-1),
C     WOBEI FUER ALLE DREHIMPULSE GROESSER K MAXIMAL GEKOPPELT WIRD
C
      IF (MKOP(N).NE.(-M0)) GOTO 110
30    K1=MIN(K1,MAX(K,2))
      IF((K+1).GT.(N-1)) GOTO 50
      DO 40, I=(K+1),(N-1)
        LKOP(I)=LKOP(I-1)+L(I)
40    CONTINUE
C
C     UEBERPRUEFUNG, OB MIT L(N) ZU L0 GEKOPPELT WERDEN KANN
C
50    IF ((MINUS1(LKOP(N-1)+L(N)+L0)).EQ.(-1)) GOTO 110
      IF ((LKOP(N-1)+L(N)).LT.L0) GOTO 100
      IF ((L(N)-LKOP(N-1)).GT.L0) GOTO 100
      IF ((LKOP(N-1)-L(N)).GT.L0) GOTO 80
C
C     BERECHNUNG VON Q(N)
C
      DO 60, I=K1,N
        LW1=2*LKOP(I-1)
        LW2=2*L(I)
        LW3=2*LKOP(I)
        MW1=2*MKOP(I-1)
        MW2=2*M(I)
        Q(I)=Q(I-1)*CLG(LW1,LW2,LW3,MW1,MW2)*CLG(LW1,LW2,LW3,0,0)
60    CONTINUE
      GINT=GINT+Q(N)
      K1=N
      NKOP=NKOP+1
      IF (LALL.LE.4) GOTO 80
      DO 70, I=2,N
        PRINT 1010, LKOP(I-1),MKOP(I-1),L(I),M(I),LKOP(I),MKOP(I),
     *              Q(I)
        IF (I.EQ.2) PRINT 1060, NKOP
70    CONTINUE
C
C
C
C     SUCHEN VON NICHTMAXIMAL GEKOPPELTEN LOESUNGEN
C
80    K=N-1
90    CONTINUE
        IF (K.LE.1) GOTO 110
        LKOP(K)=LKOP(K)-2
        IF (LKOP(K).GE.(MAX((ABS(LKOP(K-1)-L(K))),(ABS(MKOP(K))))))
     *                                                  GOTO 30
100     K=K-1
      GOTO 90
C
C
C
110   CONTINUE
C     ALLE KOPPLUNGEN GEFUNDEN; RECHNUNG BEENDET
C
      RETURN
C
 200  PRINT 1030, L0, M0
      STOP 71
 210  PRINT 1040, (L(IH), IH=1,N)
      PRINT 1050, (M(IH), IH=1,N)
      STOP 71
1000  FORMAT (/,4X,'SUBROUTINE IKUGEL')
1010  FORMAT (37X,'Y',I2,',',I3,' MIT Y',I2,',',I3,' ZU Y',
     *        I2,',',I3,' GEKOPPELT. FAKTOR = ',E12.4)
1030  FORMAT (4X,'FALSCHER OPERATORDREHIMPULS: L0=',I3,'  M0=',I4)
1040  FORMAT (4X,'FALSCHE DREHIMPULSE: L-WERTE  ',18I3)
1050  FORMAT (4X,'                     M-WERTE  ',18I3)
1060  FORMAT ('+',3X,'KOPPLUNGSSCHEMA ',I3,11X,':')
      END
      SUBROUTINE PORD(LL,LR,MZAHL,KZL,KZR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     THIS ROUTINE PUTS ALL MATRIXELEMENTS INTO A SCHEME,ACCORDING TO
C     THE OCCURRING SIGMA FACTORS
      INCLUDE 'par/LUISE'
      COMMON /SDA/CW(NDIMCW),MVM(NZIQMA,NDIMCW),KAUS,N5,IQ
     1 ,NKAPO
      COMMON /ORD/ JQ(NDIMOR),EPO(NDIMOR),
     *             INDPO(NDIMOR),MVK(NZIQMA,NDIMOR),
     *             INDEX(NDIMOR),KZAHL
      IND=(((KZL-1)*10+KZR-1)*100+LL-1)*100+LR-1
      DO 200 MH=1,MZAHL
C     LOOP OVER ALL ELEMENTS DETERMINED IN SDA1
      IF(KZAHL.LE.0) GOTO 100
      DO 40 KH=1,KZAHL
      IF(IQ.NE.JQ(KH))  GOTO 40
C     CHECK IF COINCIDENCE WITH PREVIOUS ELEMENTS
      IF(IND.NE.INDPO(KH)) GOTO 40
C     CHECK IF SAME ANGULAR MOMENTUM STRUCTURE
      IF(IQ.EQ.0)  GOTO 50
      JH=0
      DO 10 IH=1,IQ
10    JH=JH+IABS(MVK(IH,KH)-MVM(IH,MH))
      IF(JH.EQ.0)  GOTO 50
40    CONTINUE
      GOTO 100
50    EPO(KH)=EPO(KH)+CW(MH)
C     MATRIX ELEMENT EXISTS ALREADY, ADD UP
      GOTO 200
100   KZAHL=KZAHL+1
C     NEW MATRIX ELEMENT
      IF(KZAHL.GT.NDIMOR)  GOTO 1001
      EPO(KZAHL)=CW(MH)
      INDPO(KZAHL)=IND
      JQ(KZAHL)=IQ
      IF(IQ.LE.0)  GOTO 190
C     STORE SIGMA INDICES FOR LATER COMPARISON
      DO 120  IH=1,IQ
120   MVK(IH,KZAHL)=MVM(IH,MH)
      GOTO 200
190   MVK(1,KZAHL)=0
200   CONTINUE
      RETURN
1001  WRITE (*,1002) KZAHL,MH
1002  FORMAT(' DIMENSION IN PORD ZU KLEIN,KZAHL=',2I5,'TES ELEMENT')
      STOP 41
      END
      SUBROUTINE WRITAP(LAUS,IQM,NBAND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
      INCLUDE 'par/LUISE'
      COMMON /ORD/ JQ(NDIMOR),EPO(NDIMOR),
     *             INDPO(NDIMOR),MVK(NZIQMA,NDIMOR),
     *             INDEX(NDIMOR),KZAHL
      IF(LAUS.LE.1) GOTO 20
      PRINT 1000
      DO 10 KH=1,KZAHL
      write(*,1010) '<>',JQ(KH),INDPO(KH),EPO(KH),
     *             (MVK(IH,KH),IH=1,IQM),INDEX(KH)
10    CONTINUE
20    CONTINUE
      WRITE (NBAND)(JQ(KH),INDPO(KH),EPO(KH),(MVK(IH,KH),IH=1,IQM),
     *               INDEX(KH), KH=1,KZAHL)
      DO 40 IH=1,IQM
      DO 30 KH=1,KZAHL
30    MVK(IH,KH)=0.
40    CONTINUE
      RETURN
1000  FORMAT (/1X,'ANZAHL',/1X,'DER'/1X,'SIGMAS  STRUKTUR  ',
     *        'FAKTOR         INDEX  SIGMAFAKTOREN')
1010  FORMAT (1X,I4,4X,I8,2X,E12.4,2X,I6,2X,19I3)
      END
      SUBROUTINE READAP (NZLIK,NBAND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT NONE
C     READUP LIEST ALLE DATENSAETZE VON NBAND EIN
C
      INCLUDE 'par/LUISE'
      COMMON /ORD/ JQ(NDIMOR),EPO(NDIMOR),
     *             INDPO(NDIMOR),MVK(NZIQMA,NDIMOR),
     *             INDEX(NDIMOR),KZAHL
C
      IUNTEN=1
      DO 10, K=1,NZLIK
        READ (NBAND) KZAHL, IQM
        IOBEN=IUNTEN+KZAHL-1
        READ(NBAND)(JQ(I),INDPO(I),EPO(I),(MVK(IH,I),IH=1,IQM)
     *              ,INDEX(I), I=IUNTEN,IOBEN)
        IUNTEN=IOBEN+1
  10  CONTINUE
C
      RETURN
      END

      DOUBLE PRECISION FUNCTION CLG(J1,J2,J3,M1,M2)
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      DOUBLE PRECISION FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END
      FUNCTION F6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I F6J FUNCTION CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     ANGULAR MOMENTUM COUPLING TESTS FOR 6J COEFFICIENT
      F6J=0.0
      IF(J1.LT.0 .OR. J2.LT.0 .OR. J3.LT.0) RETURN
      IF(L1.LT.0 .OR. L2.LT.0 .OR. L3.LT.0) RETURN
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J1+L2+L3,2).NE.0) RETURN
      IF(L3.GT.J1+L2 .OR. L3.LT.ABS(J1-L2)) RETURN
      IF(MOD(L1+J2+L3,2).NE.0) RETURN
      IF(L3.GT.L1+J2 .OR. L3.LT.ABS(L1-J2)) RETURN
      IF(MOD(L1+L2+J3,2).NE.0) RETURN
      IF(J3.GT.L1+L2 .OR. J3.LT.ABS(L1-L2)) RETURN
      F6J=S6J(J1,J2,J3,L1,L2,L3)
      RETURN
      END
      FUNCTION F9J(JD1,JD2,JD3,JD4,JD5,JD6,JD7,JD8,JD9)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     F9J VERSION I  CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H.
      DIMENSION KN(6),KX(6),NN(6)
      J1=JD1   
      J2=JD2  
      J3=JD3 
      J4=JD4
      J5=JD5
      J6=JD6
      J7=JD7
      J8=JD8
      J9=JD9
      F9J= 0.0
C     ANGULAR MOMENTUM COUPLING TESTS FOR 9J COEFFICIENT 
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J4+J5+J6,2).NE.0) RETURN
      IF(J6.GT.J4+J5 .OR. J6.LT.ABS(J4-J5)) RETURN
      IF(MOD(J7+J8+J9,2).NE.0) RETURN
      IF(J9.GT.J7+J8 .OR. J9.LT.ABS(J7-J8)) RETURN
      IF(MOD(J1+J4+J7,2).NE.0) RETURN
      IF(J7.GT.J1+J4 .OR. J7.LT.ABS(J1-J4)) RETURN
      IF(MOD(J2+J5+J8,2).NE.0) RETURN
      IF(J8.GT.J2+J5 .OR. J8.LT.ABS(J2-J5)) RETURN
      IF(MOD(J3+J6+J9,2).NE.0) RETURN
      IF(J9.GT.J3+J6 .OR. J9.LT.ABS(J3-J6)) RETURN
      KN(1)=MAX0(IABS(J2-J6),IABS(J1-J9),IABS(J4-J8))
      KN(2)=MAX0(IABS(J2-J7),IABS(J5-J9),IABS(J4-J3))
      KN(3)=MAX0(IABS(J6-J7),IABS(J5-J1),IABS(J8-J3))
      KN(4)=MAX0(IABS(J6-J1),IABS(J2-J9),IABS(J5-J7))
      KN(5)=MAX0(IABS(J2-J4),IABS(J3-J7),IABS(J6-J8))
      KN(6)=MAX0(IABS(J3-J5),IABS(J1-J8),IABS(J4-J9))
      KX(1)=MIN0(J2+J6,J1+J9,J4+J8)
      KX(2)=MIN0(J2+J7,J5+J9,J4+J3)
      KX(3)=MIN0(J6+J7,J5+J1,J8+J3)
      KX(4)=MIN0(J1+J6,J2+J9,J5+J7)
      KX(5)=MIN0(J2+J4,J3+J7,J6+J8)
      KX(6)=MIN0(J3+J5,J1+J8,J4+J9)
      DO 35 K=1,6
   35 NN(K)=KX(K)-KN(K)
      KSIGN=1
      I=MIN0(NN(1),NN(2),NN(3),NN(4),NN(5),NN(6))
      DO 40 K=1,6
      IF(I-NN(K))40,50,40
   40 CONTINUE
   50 KMIN=KN(K)+1
      KMAX=KX(K)+1
      GO TO(130,52,53,54,55,56),K
   52 J=J1
      J1=J5
      J5=J
      J=J3
      J3=J8
      J8=J
      J=J6
      J6=J7
      J7=J
      GO TO 130
   53 J=J2
      J2=J7
      J7=J
      J=J3
      J3=J4
      J4=J
      J=J5
      J5=J9
      J9=J
      GO TO 130
   54 J=J1
      J1=J2
      J2=J
      J=J4
      J4=J5
      J5=J
      J=J7
      J7=J8
      J8=J
      GO TO 120
   55 J=J1
      J1=J3
      J3=J
      J=J4
      J4=J6
      J6=J
      J=J7
      J7=J9
      J9=J
      GO TO 120
   56 J=J2
      J2=J3
      J3=J
      J=J5
      J5=J6
      J6=J
      J=J8
      J8=J9
      J9=J
  120 KSIGN=(1-MOD(J1+J2+J3+J4+J5+J6+J7+J8+J9,4))
C     SUMMATION OF SERIES OF EQUATION (2)  
  130 SUM=0.0                             
      SIG=(-1)**(KMIN-1)*KSIGN
      FLK=KMIN                           
      DO 200 K=KMIN,KMAX,2              
      TERM=FLK*S6J(J1,J4,J7,J8,J9,K-1)*S6J(J2,J5,J8,J4,K-1,J6)
     1*S6J(J3,J6,J9,K-1,J1,J2)
      FLK=FLK+2.0                      
  200 SUM=SUM+TERM                    
      F9J=SUM*SIG
      RETURN                       
      END                         
      FUNCTION S6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I  FORTRAN IV
      DIMENSION MA(4),MB(3),MED(12)
      COMMON /FACT/FL(322),NCALL
      DATA NCALL/1/
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     DETERMINE WHETHER TO CALCULATE FL(N) S
      IF(NCALL.EQ.0) GOTO 15
      NCALL=0
C     CALCULATE FL(N) S
      FL(1)=0.0
      FL(2)=0.0
      DO 50 N= 3,322
      FN=N-1
   50 FL(N)=FL(N-1)+LOG(FN)
   15 MED(1)=(-J1+J2+J3)/2
      MED(2)=(+J1-J2+J3)/2
      MED(3)=(+J1+J2-J3)/2
      MED(4)=(-J1+L2+L3)/2
      MED(5)=(+J1-L2+L3)/2
      MED(6)=(+J1+L2-L3)/2
      MED(7)=(-L1+J2+L3)/2
      MED(8)=(+L1-J2+L3)/2
      MED(9)=(+L1+J2-L3)/2
      MED(10)=(-L1+L2+J3)/2
      MED(11)=(+L1-L2+J3)/2
      MED(12)=(+L1+L2-J3)/2
      MA(1)=MED(1)+MED(2)+MED(3)
      MA(2)=MED(4)+MED(5)+MED(6)
      MA(3)=MED(7)+MED(8)+MED(9)
      MA(4)=MED(10)+MED(11)+MED(12)
      MB(1)=MA(1)+MED(12)
      MB(2)=MA(1)+MED(4)
      MB(3)=MA(1)+MED(8)
C     DETERMINE MAXIMUM OF (J1+J2+J3),(J1+L2+L3),(L1+J2+L3),(L1+L2+J3)
      MAX=MA(1)
      DO 30 N=2,4
      IF (MAX-MA(N)) 20,30,30
   20 MAX=MA(N)
   30 CONTINUE
C     DETERMINE MINIMUM OF (J1+J2+L1+L2), (J2+J3+L2+L3),(J3+J1+L3+L1)
      MIN=MB(1)
      DO 51 N=2,3
      IF (MIN-MB(N)) 51,51,40
   40 MIN=MB(N)
   51 CONTINUE
      MINH=MIN
      KMAX=MIN-MAX
      MINP1=MIN+1
      MINI  =MINP1-MA(1)
      MIN2=MINP1-MA(2)
      MIN3=MINP1-MA(3)
      MIN4=MINP1-MA(4)
      MIN5=MINP1+1
      MIN6=MB(1)-MIN
      MIN7=MB(2)-MIN
      MIN8=MB(3)-MIN
      UK=1.E-15
      S=1.0E-15
      IF (KMAX) 65,65,55
   55 DO 60 K=1,KMAX
      UK=-UK*DBLE(MINI-K)*DBLE(MIN2-K)*DBLE(MIN3-K)*DBLE(MIN4-K)/
     1 (DBLE(MIN5-K)*DBLE(MIN6+K)*DBLE(MIN7+K)*DBLE(MIN8+K))
C     CUT OFF SERIES AT 1.0D-25
      IF(ABS(UK)-1.E-25) 65,60,60
   60 S=S+UK
   65 S=S*1.0E+15
C     CALCULATE DELTA FUNCTIONS
      DELOG=0.0
      DO 70 N=1,12
      NUM=MED(N)
   70 DELOG=DELOG+FL(NUM+1)
      NUM1=MA(1)+2
      NUM2=MA(2)+2
      NUM3=MA(3)+2
      NUM4=MA(4)+2
      DELOG=DELOG-FL(NUM1)-FL(NUM2)-FL(NUM3)-FL(NUM4)
      DELOG=0.5*DELOG
      ULOG=FL(MIN5)-FL(MINI)-FL(MIN2)-FL(MIN3)-FL(MIN4)-FL(MIN6+1)-
     1   FL(MIN7+1)-FL(MIN8+1)
      PLOG=DELOG+ULOG
      P=EXP (PLOG)
      S6J=P*S
      IF(MOD(MINH,2).NE.0)  S6J=-S6J
      RETURN
      END
      PROGRAM ENEMB
C     ENPON FUER QUAL
C
C     ELEKTROMAGNETISCHE UEBERGAENGE ZWISCHEN BOUND STATES OHNE
C     LANGWELLE (MIT SIEGERTOPERATOR)
C
C
C
C                       ***********
C                       * ACHTUNG *
C                       ***********
C
C     JEDER KANAL DARF NUR EINEN BASISVEKTOR ENTHALTEN
C     ================================================
C
C
C
C     ISTEU=1
C     PROGRAMM BERECHNET PHOTOABSORBTION
C     < FINAL STATE / OPERATOR / INITIAL STATE >
C
C     ISTEU=2
C     PROGRAMM BERECHNET ELEKTRONENSTREUUNG AN BOUND STATES
C     < FINAL STATE / OPERATOR / INITIAL STATE >
C
C
C     IP=1 : ELEKTRISCHE UEBERGAENGE
C     IP=2 : MAGNETISCHE UEBERGAENGE
C     IP=3 : COULOMBUEBERGAENGE
C
C     IP*10: ENTRECHENDE FORMFATOREN DURCH DIE LADUNGSFORMFAKTOREN FUER
C            PROTON UND NEUTRON KORRIGIERT
C
C
C     ISTEU=3/4
C     WIE ISTEU=1/2, ABER FUER QUARKRECHNUNG
C
C
C     NBAND1 KOMMT VON QUAL
C     NBAND2 (='FORMFA') ENTHAELT BEI ELEKTRONENSTREUUNG DIE FORM-
C            FAKTOREN ALS ERGEBNIS
C
C
C     FEBRUAR 1987  M. UNKELBACH
C     FASSUNG MAI 90  M.U., AUS ENEMB VERSION VOM 13.09.89
C     AENDERUNG 05.06.90: PROGRAMM UMSTRUKTURIERT  M.U.
C     AENDERUNG 13.06.90: DIMENSIONIERUNG GEAENDERT  M.U.
C     AENDERUNG 28.06.90: LOOP POTENTIALE MIT DEN INNEREN WEITEN LOOPS VER-
C                         TAUSCHT UND BERECHNUNG OPERATOR 12 KORRIGIERT.
C                         DIMENSIONIERUNG GEAENDERT
C     AENDERUNG 02.07.90: AUSDRUCK GEAENDERT M.U.
C     AENDERUNG 03.07.90: DIMENSIONIERUNG NDIM1 GEAENDERT  M.U.
C     AENDERUNG 25.10.90: FALSCHE NUKLEONFORMFAKTORKORREKTUR FUER
C                         SPINOPERATOREN BERICHTIGT  M.U.
C     AENDERUNG 26.10.90: DIMESINIONIERUNG GEAENDERT  M.U.
C     AENDERUNG 29.10.90: FEHLER BEI NORMRECHNUNG KORRIGIERT M.U.
C     AENDERUNG 31.10.90: FALSCHE PLAZIERUNG DES EINLESENS DER F-FAKTOREN
C                         BERICHTIGT  M.U.
C     AENDERUNG 01.02.91: AN NEUE QUALME-VERSION ANGEPASST  M.U.
C     LETZTE AENDERUNG 01.02.91 M. U.
C
C
      INCLUDE 'par/ENEMB'

C     NZOPER: ANZAHL DER OPERATOREN IN ENEMB
C     NZOPQU: ANZAHL DER OPERATOREN IN QUAL
C     NZPARM: MAXIMALE ANZAHL RADIALWEITEN EINES BASISVEKTORS
C     NZKMAX:    "       "    DER KANAELE
C     NZUMAX:    "       "     "  UEBERLAGERUNGSKOEFFIZIENTEN
C     NZBMAX:    "       "    BASISVEKTOREN
C     NDIM  :    "      SUMME UEBER ALLE KANAELE (ANZAHL DER RADIALPARA-
C             METER DES KANALS)
C             NDIM.LE.NZPARM*NZKMAX (HOECHSTMOEGLICHE ZAHL FUER NDIM)
C     NDIM1 : MAXIMALE ANZAHL VERSCHIEDENER EXPONENTIALVORFAKTOREN
C     NDIM2 :    "       "          "       K-POTENZEN
C     NZFMAX:    "       "    DER ZERLEGUNGEN
C     NZEKMA:    "       "    DER VERSCHIEDNEN K-VETOREN DES PHOTONS
C
      COMMON /COMY/ D(100)
C
      COMMON /CSOR/ MMM, NTI, OP(NDIM2,2,NDIM,NDIM),EFG(2,NDIM,NDIM),
     *              ECFG(NDIM1,NZOPER-2), OCP(NDIM2,NDIM1,NZOPER-2),
     *              LL1MAX(NZOPER-2)
C
      COMMON /OUTPF/ EK(NZEKMA),EKNULL
      COMMON /OUTPI/  INR, ISRB, JWSL, JWSR, MUL,
     *              NBAND2, JWSLM, MULM, MUL2
C
      DIMENSION MLWERT(5,NZBMAX),MMS(3,NZBMAX),PAQ(NZPARM,NZBMAX)
      DIMENSION NZQ(NZKMAX+1),LWERT(5,NZKMAX),OPWE(3),DF(13)
      DIMENSION OPWERT(NZEKMA,NZOPER), NZECFG(NZOPER-2)
      DIMENSION KPB(NZBMAX),  LREG(NZOPQU), NZPAQ( NZBMAX)
      DIMENSION FG(2,NZPARM,NZPARM), NZPAR(NZKMAX)
      DIMENSION MMASSE(2,NZBMAX), MMLAD(2,NZBMAX),MS(3,NZKMAX),
     *    LUM(NZPARM+1,NZKMAX),  DN(NDIM2,2,NZPARM,NZPARM),
     *    NZRHO(NZFMAX), MREG(NZOPER), UMKOF(NZKMAX,NZBMAX ),
     *    UMKOFL(NZKMAX), UMKOFR(NZKMAX), UNK(NZUMAX),
     *    NUMK(NZBMAX), UMK(NZBMAX), MUMK(NZBMAX),
     *    NCOF(NZBMAX,NZKMAX), GEFAK(NZOPER-2),
     *    IND(NZBMAX,NZBMAX)
      DIMENSION MLWER1(5,NZBMAX),MMS1(3,NZBMAX),PAQ1(NZPARM,NZBMAX),
     *          MMASS1(2,NZBMAX), MMLAD1(2,NZBMAX),KPB1(NZKMAX),
     *          NZRHO1(NZFMAX), ITEH(6)
C
      OPEN(UNIT=5,FILE='INEN',STATUS='OLD')
      OPEN(UNIT=6,FILE='OUTPUT')
      OPEN(UNIT=10,FILE='QUAOUT',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(UNIT=15,FILE='FORMFA',STATUS='UNKNOWN',FORM='FORMATTED')
C
      NBAND2=15
      NBAND3=20
      HC=197.32858
      H2MCP=HC/938.2796/2.
      H2MCN=HC/939.5731/2.
      PI=3.141592654
      D(1)=.0
      D(2)=.0
      DO 199 I=2,99
  199 D(I+1)=ALOG( FLOAT(I))+D(I)
      DF(1)=1.
      DO 200 I=2,12,2
200   DF(I+1)=FLOAT(I+1)*DF(I-1)
C     DF(I) = I!!
      WRITE(6,1003)
C LIT std:             10     2          1      
      READ(5,1002) NBAND1,ISTEU,IGAK,KEIND,IQUAK
C     NBAND1 KOMMT VON QUAL
C     ISTEU=1/3: PHOTOABSORBTION
C     ISTEU=2/4: ELEKTRONENSTREUUNG
C     KEIND  =1: UEBERLAGERUNG VON BASISVEKTOREN
C            =0: KEINE UEBERLAGERUNG VON BASISVEKTOREN
C     IGAK   STEUERVARIABLE DES AUSDRUCKS
C            .LT.2: NUR EINGABEWERTE UND MARIXELEMENTE WERDEN AUSGEDRUCKT
C            .LT.3: AUSDRUCK VON ECFG, OCP, OP
C            .LT.4:     "     "  OP, EFG
C            .LT.5:     "     "  SCHEMA
C            .GE.5:     "     IM LOOP RADIALPARAMETER
C     IQUAK  STEUERVARIABLE FUER UEBERGABE AUS QUAL
C            .LT.1: KEIN AUSDRUCK
C            .LT.2: DEFINITION DER BASISVEKTOREN
C            .LT.3: NICHT-VERSCHWINDENDE MATRIXELEMENTE
C            .GE.3: ALLE UEBERGABEWERTE
C
      IF (ISTEU.EQ.1.OR.ISTEU.EQ.3) WRITE (6,1030)
      IF (ISTEU.EQ.2.OR.ISTEU.EQ.4) WRITE (6,1031)
      READ(5,1002) (MREG(K),K=1,NZOPER)
      IF (ISTEU.EQ.1.OR.ISTEU.EQ.3) MREG(NZOPER-1)=0
      IF (ISTEU.EQ.1.OR.ISTEU.EQ.3) MREG(NZOPER)=0
C     BEI PHOTOABSORBTION KEIN COULOMOPERATOR
C
C     modus = 0 fuer LIT, i.e., set MREG in INEN != only up to 11
      MODUS=0
      DO 21, K=12, NZOPER-2
         IF (MREG(K).EQ.1) MODUS=1
21    CONTINUE
      IF (MODUS.EQ.1) OPEN(20,FILE='QUALMOUT',STATUS='OLD',
     *                     FORM='UNFORMATTED')
C
C     EINLESEN UND ZUWEISUNG DER RICHTIGEN G-FAKTOREN
      READ(5,1013) GEFAK(2), GEFAK(3), GEFAK(6), GEFAK(7),
     *             GEFAK(10), GEFAK(11)
      GEFAK(1)=1.
      GEFAK(4)=GEFAK(2)
      GEFAK(5)=GEFAK(3)
      GEFAK(8)=GEFAK(6)
      GEFAK(9)=GEFAK(7)
      IF (GEFAK(10).EQ.0.) GEFAK(10)=GEFAK(6)
      IF (GEFAK(11).EQ.0.) GEFAK(11)=GEFAK(7)
      WRITE (6,1014) GEFAK(6), GEFAK(2), GEFAK(7), GEFAK(3)
C
C     BESTIMMUNG DER VORFAKTOREN FUER DIE MATRIXELEMENTE DER OPERATOREN
      DO 114 K=2,8,2
      GEFAK(K)=GEFAK(K)*H2MCP
114   GEFAK(K+1)=GEFAK(K+1)*H2MCN
C      GEFAK(12)=1.
      DO 115, K=13, NZOPQU
          GEFAK(K)=1./HC
115   CONTINUE
C
      IF (IGAK.GT.1) WRITE (6,1015) (K, GEFAK(K), K=1,NZOPER-2)
C     ENDE ZUWEISUNG GEFAK
C
C     EINLESEN DER NORMIERUNG DER ZUSTAENDE UND DER PHOTONENENERGIE
      READ(5,1013) ANORML,ANORMR
      READ(5,1013) ENER
      EKNULL=ENER/HC
C
      IF (ISTEU.NE.2) STOP 10
C     LIT ISTEU=2
      READ (5,1002) NZEK, INR, ISRB
      READ (5,1013) EK(1), EKDIFF
      EK(1)=EK(1)/HC
      EKDIFF=EKDIFF/HC
      DO 9, NEK=2, NZEK
       EK(NEK)=EK(NEK-1)+EKDIFF
      EKNULL = EK(1)
9     CONTINUE
C
      REWIND NBAND1
      REWIND NBAND2
C                                      qual.f:      I= sum_K NZRHO(K)      
      READ(NBAND1)NZF,MUL,(LREG(K),K=1,NZOPQU),NZBASV,(NZRHO(K),K=1,NZF)
      IF(NZBASV.GT.NZBMAX) THEN
         PRINT 1009, NZBASV, NZBMAX
         STOP 2
      ENDIF

      WRITE(6,1010) MUL,(K, K, MREG(K),K=1,NZOPER)
      IF (IQUAK.GT.0) WRITE (6,1016)


      DO 1 N=1,NZBASV

C                  #rel.width for this BV = MZPAR in QUAL.f        
      READ(NBAND1) MM,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     * (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),(PAQ(J,N),J=1,MM),KPB(N)
      NZPAQ(N)=MM
      IF (MM.GT.NZPARM) THEN
         WRITE (6,1008) MM, NZPARM
         STOP 3
      ENDIF
      IF (IQUAK.GT.0)
     *     WRITE (6,1017) N,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     *     (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),MM,KPB(N)
    1 CONTINUE
C
      IF (ISTEU.LT.3) LAD=MMLAD(1,1)+MMLAD(2,1)
C
C
C     EINLESEN DER GESAMTDREHIMPULSE UND DER PARITAETEN
C     1 = -  und  2 = +    only deltaPi is relevant
C               2*( Jl   Jr              m_jl m_L )  
      READ(5,1002)JWSL,JWSR,NPARL,NPARR,JWSLM,MULM
      IF (JWSL.NE.JWSR) MREG(1)=0
C     BEI NORM MUESSEN GESAMTDREHIMPULSE LI UND RE UEBEREINSTIMMEN
C
C     BESTIMMUNG DER CLEBSCH DES RED. MATR.-EL.
      GJL=.5*FLOAT(JWSL)
      GJLM=.5*FLOAT(JWSLM)
      GJR=.5*FLOAT(JWSR)
      AK=FLOAT(MUL)
      AKM=.5*FLOAT(MULM)
c      AKM=GJL-GJR

      AJRD=FLOAT(JWSR+1)
      MUL2=2*MUL
      
      CL=CLG(INT(2*AK), INT(2*GJR),INT(2*GJL),
     1      INT(2*AKM),INT(2*(GJLM-AKM)))
c      WRITE (6,1204) AK,AKM,GJR,(GJLM-AKM),GJL,GJLM,CL
C      CL=YG(GJR,AK,GJL,GJR,AKM)
      IF(CL.NE.0.) GOTO 101
      STOP 4
C

C     PARITAETSCHECK
101   DO 106 MKC=1,NZOPER
      IF(MREG(MKC).LE.0) GOTO 106
      A=IABS(((-1)**MUL-1)/2)
      AA=IABS(NPARL-NPARR)
      GOTO(104,105,105,107,107,105,105,107,107,105,105,104,105,
     *                         105,107,107,105,105,103) MKC
103   STOP 5
104   A=0.
105   IF (A.EQ.AA) GOTO 106
      WRITE (6,1203) MKC
      MREG(MKC)=0
      GOTO 106
107   IF(A.NE.AA) GOTO 106
      WRITE (6,1203) MKC
      MREG(MKC)=0
106   CONTINUE
C
C     AUDRUCK DER GESDAMTDREHIMPULSE UND DER PARITAET
      IF(NPARL.EQ.1) GOTO 570
      WRITE(6,1024) JWSL
      GOTO 581
570   WRITE(6,1025) JWSL
581   IF(NPARR.EQ.1) GOTO 670
      WRITE(6,1034) JWSR
      GO TO 681
670   WRITE(6,1035) JWSR
681   CONTINUE
C
      WRITE(6,1036) ENER
      
      WRITE (6,1041) EK(1)
      
C ECCE!
      READ(5,1002) NZKL,NZKR

      READ (5,1002) KK
      IF (KK.LE.NZUMAX) GOTO 55
      WRITE (6,1005) KK, NZUMAX
      STOP 6
55    READ (5,1001) (UNK(J),J=1,KK)

C ECCE!
      NZKA=NZKL+NZKR
      IF (NZKA.LE.NZKMAX) GOTO 57
      WRITE (6,1012) NZKL, NZKR, NZKA, NZKMAX
      STOP 7
57    MAXPAR=0
      DO 5 N=1,NZBASV
C NZPAQ(N) = #rel.widths for this BV        
      IF(NZPAQ(N).GT.MAXPAR) MAXPAR=NZPAQ(N)
5     CONTINUE
      IF (MAXPAR.LE.NZPARM) GOTO 58
      WRITE (6,1008) MAXPAR, NZPARM
      STOP 8
58    DO 2 M=1,MAXPAR
      DO 2 N=1,NZKA
2     LUM(M,N)=0
C
C
C     DEFINITION DER KANAELE
C
C
      DO 28 N=1,NZKA
       DO 192 J=1,NZBASV
 192   NCOF(J,N) = 0
C   KK = # of BV in channel      NUMK = BV number in QUA convention
       READ (5,1002) KK, (NUMK(J),J=1, KK)
C   MUMK = UECOEFF number for the BV       
       READ (5,1002) (MUMK(J),J=1,KK)
    
       DO 193 J=1,KK
       L = NUMK(J)
       MUM = MUMK(J)
       UMK(L) = UNK(MUM)
 193   NCOF(L,N) = 1
       DO 27   M = 1,NZBASV
       UMKOF(N,M) = NCOF(M,N)
       IF (NCOF(M,N).EQ.0) THEN
        GOTO 27
       ENDIF
       UMKOF(N,M) = UMK(M) * UMKOF(N,M)
   27  CONTINUE
       J = 0
       DO 25 M=1,NZBASV
       IF (ABS(UMKOF(N,M)).LT.1.E-10) THEN
        GOTO 25
       ENDIF
       J = J + 1
       NUMK(J) = M
       UMK(J) = UMKOF(N,M)
  25   CONTINUE
       WRITE (6,1018) N, (UMK(M),NUMK(M),M=1,J)
       I=0
       DO 84 J=1,NZBASV
       IF(NCOF(J,N).EQ.0) GOTO 84
        IF(I.GT.0) GOTO 87
       I=1
       MS(3,N)=MMS(3,J)
       LWERT(5,N)=MLWERT(5,J)
       MM=NZPAQ(J)
       READ(5,1002) (LUM(M,N),M=1,MM)
       WRITE(6,1011)    (LUM(M,N),M=1,MM)
       J1=0
       NZPAR(N)=0
       DO 410  M=1,MM
       IF(LUM(M,N).LE.0) GOTO 410
       NZPAR(N)=NZPAR(N)+1
       J1=J1+1
       LUM(M,N)=J1
  410  CONTINUE
       LUM(MAXPAR+1,N)=J1
       GO TO 84
87     CONTINUE
       IF(MM.EQ.NZPAQ(J)) GOTO 84
       WRITE (6,1006) MM, NZPAQ(N)
       STOP 5
   84  CONTINUE
  28  CONTINUE
C     ENDE KANALDEFINITION
C
C NZQ = #relw in ch_1 , ... , #relw in ch_NZKA
      NZQ(1)=0
      DO 31 K=1,NZKA
      NZQ(K+1)=NZQ(K)+NZPAR(K)
   31 CONTINUE
      MM = NZQ(NZKA+1)
      MMM= NZQ(NZKA+1)
      IF(MMM.LE.NDIM) GOTO 130
      PRINT 1007, MMM, NDIM
      STOP 10
C
130   DO 230, I=1, NZOPER-2
       NZECFG(I)=0
       LL1MAX(I)=0
       DO 230, K=1, NDIM1
        ECFG(K,I)=0.
        DO 230, L=1, NDIM2
         OCP(L,K,I)=0.
230   CONTINUE
      DO 240, I=1, NZOPER
       DO 240, NEK=1, NZEK
        OPWERT(NEK,I)=0.
240   CONTINUE
C
C
      DO 150, LAUF=1, MODUS+1
C     LOOP DURCHLAEUFE
C
      IF (LAUF.EQ.1) THEN
         MKCMIN=1
         MKCMAX=11
         NTI=1
         NBAND=NBAND1
      ELSE
         MKCMIN=12
         MKCMAX=18
C !!  ACHTUNG: NUR DIE SEAGULL TERME WERDEN BERUECKSICHTIGT !!
         NTI=2
         NBAND=NBAND3
      ENDIF
C
C
      DO 140 MFL=1,NZF
C     LOOP ZERLEGUNGEN LINKS
C NZRHO(MFL) '=' #BV in ZERL '=' # int.weiten
      IRHO=NZRHO(MFL)
      IF (LAUF.EQ.1) THEN
         MFRMAX=MFL
      ELSE
         MFRMAX=NZF
      ENDIF
C
C
      DO 139 MFR=1, MFRMAX
C     LOOP ZERLEGUNGEN RECHTS
C
      JRHO=NZRHO(MFR)
      MLES=IRHO*JRHO
      IF(MLES.LE.0) GOTO 139
C
C
      DO 41 MKC=MKCMIN, MKCMAX
C     LOOP OPERATOREN
C     COULOMBOPERATOR WIRD AUS SIEGERTOPERATOR GEWONNEN
C
      IF(LREG(MKC).LE.0) GOTO 41
      MREGH=MREG(MKC)
      IF (MKC.EQ.10.OR.MKC.EQ.11) MREGH=MAX0(MREG(MKC),
     *                             MREG(NZOPER-11+MKC))
      IF (MREGH.GT.0.AND.IGAK.GT.1) WRITE (6,1201) MKC
      IH=NZECFG(MKC)
      NZPOT=1
      KWIED=1
      IF (MKC.EQ.4.OR.MKC.EQ.5) KWIED=2
C     KWIED STEUERT WIEDERHOLUNG DES LOOP INNERE WEITEN RECHTS
      IF (LAUF.EQ.1) THEN
         READ (NBAND) NTE,NC,ND,ITE
      ELSE
         READ (NBAND) NTE,NC,ND,ITE,NZPOT,KWIED,
     *                 (ITEH(J), J=1,KWIED+1)
         KWIED=KWIED+1
      ENDIF
C
      IF (NTE*ITE.EQ.0) THEN
        GOTO 41
      ENDIF
C
C
      DO 60 KKK = 1,NTE
C     LOOP OBEM
C
C
      IF (NZPOT.NE.1) STOP 'NZPOT<>0'
C
C
      DO 61 LLL = 1,NC
C     LOOP INNERE WEITEN LINKS 
C      NC   = cluster-intern (usually = 1)
C vgl. IRHO = fragment-intern
      DO 62 JJJ = 1,ND
C     LOOP INNERE WEITEN RECHTS - sollte = JRHO
C
      KONTRO=0
C     KONTRO=1 FUER NICHT VERSCHWINDENDE KOPPLUNG
      KONTR=0

C MMM = total number of calculated rel widths      
      DO 37 M = 1,MMM
      DO 37 N = 1,MMM
      DO 37 NT=1,NTI
      EFG(NT,M,N)=1.
      DO 37 L=1, NDIM2
   37 OP(L,NT,M,N) = .0
C
C
      DO 64, JWIED=1, KWIED
C     LOOP UNTEROPERATOREN
C
      IF (MKC.GT.11 .AND. ITEH(JWIED).EQ.0) GOTO 64
      IF (KONTR.EQ.0 .AND. LAUF.EQ.2) THEN
         READ (NBAND) IK1, JK1, (((FG(NT,K,L), NT=1,2),
     *                             L=1,JK1),K=1,IK1)
         KONTR=1
      ENDIF

      READ (NBAND) ((IND(MM,NN), NN=1, JRHO), MM=1, IRHO)
      IF (MREGH.GT.0.AND.IQUAK.GT.1) WRITE (6,1023)
     *            ((IND(MM,NN), NN=1, JRHO), MM=1, IRHO)

C                  = IRHO*JRHO
      DO 40 NLES=1,MLES
C     LOOP BASISVEKTOR-MATRIZEN
C
      MM=1+INT((NLES-1)/JRHO)
      NN=NLES-INT((NLES-1)/JRHO)*JRHO
      IF (IND(MM,NN).EQ.0) GOTO 40
      IF (MKC.LT.12) THEN
         READ (NBAND) NUML,NUMR,IK1,JK1,LL1,
     *              ((FG(1,K,L),(IDUMMY,DN(J,1,K,L),J=1,LL1),L=1,JK1),
     *                K=1,IK1)
      ELSE
         READ (NBAND) NUML,NUMR,LL1,
     *                ((((DN(J,NT,K,L),NT=1,NTI),J=1,LL1),L=1,JK1),
     *                K=1,IK1)
      ENDIF
      IF (MREGH.EQ.0) GOTO 40
C
      IF (MKC.EQ.1 .OR. MKC.EQ.12) THEN
      DO 287, K=1, IK1
       DO 287, L=1, JK1
        DO 287, NT=1, NTI
         FG(NT,K,L)=0.
287   CONTINUE
      ENDIF
C     BEI NORM GIBT ES KEINE EXPONENTIALVORFAKTOREN
C
      IF (IQUAK.GT.1) WRITE (6,1019) NUML, NUMR, IK1, JK1,
     *                               LL1, KKK, LLL, JJJ
      IF(IQUAK.LE.2) GOTO 300
      DO 290 K=1,IK1
      DO 290 L=1,JK1
      DO 290, NT=1, NTI
290   WRITE(6,1021) FG(NT,K,L),((J-1), DN(J,NT,K,L),J=1,LL1)
300   CONTINUE
      DO 651 N=1,NZKA
651   UMKOFL(N)=UMKOF(N,NUML)
      DO 656 N=1,NZKA
656   UMKOFR(N)=UMKOF(N,NUMR)
C      write(6,*)'UMKOF,NUML:',NUML,(UMKOF(N,NN),N=1,NZKA)
      LBL=MLWERT(5,NUML)
      LBL2=2*LBL
      LBR=MLWERT(5,NUMR)
      LBR2=2*LBR
      ML=MMS(3,NUML)
      SPL=.5* FLOAT(ML)
      MR=MMS(3,NUMR)
      SPR=.5* FLOAT(MR)
C      F=YG(GJR,AK,GJL,GJR,AKM)
      F=CLG(INT(2*AK), INT(2*GJR),INT(2*GJL),
     1      INT(2*AKM),INT(2*(GJLM-AKM)))
c      WRITE (6,1204) AK,AKM,GJR,(GJLM-AKM),GJL,GJLM,F
C           1  2- SPIN -5  6- BAHN -9 Sp Sn
      GOTO(99,92,92,92,92,91,91,91,91,91,91,99,93,93,94,94,89), MKC
89    STOP 11
C
91    CONTINUE
C     BAHNOPERATOREN, SIEGERT UND KORREKTUROPERATOR
      IF(ML.NE.MR) THEN
         WRITE (6,1200) MKC, ML, MR
         STOP 12
      ENDIF
C       AJRD   = (JWSR+1)
C       LB-R/L = total orbital angular momenta
C       M-R/L  = 2 * total Spin
C       SP-R/L =     total Spin
C       2(SR+1)  <SL||id||SR> = 1/Sqrt[2S+1]
      FK1=(-1)**((MUL2+LBL2+ML+JWSR)/2)
      FK1=FK1*SQRT(AJRD/(2.*SPR+1.))
      FK1=FK1*F6J(LBL2,LBR2,MUL2,JWSR,JWSL,MR)
      FK2=(-1)**((MUL2+LBR2+MR+JWSR)/2)
      FK2=FK2*SQRT(AJRD/(2.*SPL+1.))
      FK2=FK2*F6J(LBR2,LBL2,MUL2,JWSR,JWSL,ML)
      FK2=FK2*FLOAT((-1)**( LBR-LBL))
C    PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
      IF(MKC.EQ.6.OR.MKC.EQ.7) FK2=-FK2
      IF(MKC.EQ.12.OR.MKC.EQ.13) FK2=-FK2
C    PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
      ISRANK2  = INT(0)
      IORANK2  = INT(MUL2)
      FK1new = (-1)**(AK-GJR+GJL)*SQRT(JWSR+1.)*SQRT(MUL2+1.)
     1        *F9J(LBL2,LBR2,IORANK2,ML,MR,ISRANK2,JWSL,JWSR,MUL2)
C      write(6,*)'F9J(',LBL2,LBR2,IORANK2,ML,MR,
C     * ISRANK2,JWSL,JWSR,MUL2,') = ', FK1new

      GOTO 100
C
92    CONTINUE
C     SPINOPERATOREN
      FK1=(-1)**((ML+MR+LBL2+LBR2+JWSL+JWSR)/2)
      IF (MKC.EQ.2.OR.MKC.EQ.3) FK1=-FK1
      FK2=FK1
      FK1=FK1*SQRT(AJRD*(2.*AK+1.))
      FK2=FK2*FLOAT((-1)**((LBR2-LBL2+MR-ML)/2))*SQRT(AJRD*(2.*AK+1.))
C    PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
      MUL2M1=MUL2
      IF(MKC.EQ.4.OR.MKC.EQ.5) MUL2M1=MUL2+2-4*(JWIED-1)
      FK1=FK1*F9J(ML,MR,2,LBL2,LBR2,MUL2M1,JWSL,JWSR,MUL2)
      FK2=FK2*F9J(MR,ML,2,LBR2,LBL2,MUL2M1,JWSL,JWSR,MUL2)

      ISRANK2=2
      IORANK2=MUL2
      IF(MKC.EQ.4.OR.MKC.EQ.5) IORANK2=MUL2+2-4*(JWIED-1)
      FK1new = SQRT(JWSR+1.)*SQRT(MUL2+1.)
     1        *F9J(LBL2,LBR2,IORANK2,ML,MR,ISRANK2,JWSL,JWSR,MUL2)
      GOTO 100
C
93    CONTINUE
C     ELEKTRISCH PION SEAGULL
      MUL2MH=JWIED/(KWIED/2+1)
      MUL2M1=MUL2+KWIED-2*(JWIED-MUL2MH)
      MUL2M2=MUL2+2-4*MUL2MH
      GOTO 95
C
94    CONTINUE
C     MAGNETISCH PION SEAGULL
      MUL2M1=MUL2+KWIED-2*JWIED+1
      MUL2M2=MUL2
C
95    CONTINUE
C     EL. + MAGN. PION SEAGULL
      IF (MOD(MKC,2).EQ.1) THEN
         MSPIN2=4
      ELSE
         MSPIN2=2
      ENDIF
C     MSPIN2: 2*RANG DES SPINANTEIL DES OPERATORS
      FK1=(-1)**((MSPIN2+MUL2M1-MUL2)/2)
      FK1=FK1*SQRT(AJRD*(2.*AK+1.))
      FK1=FK1*SQRT(FLOAT(MSPIN2+1))*F6J(MUL2,MUL2M2,2,2,MSPIN2,MUL2M1)
      FK2=0.
      FK1=FK1*F9J(LBL2,ML,JWSL,LBR2,MR,JWSR,MUL2M1,MSPIN2,MUL2)
CCC   FK2=FK2*(-1)**((LBR2-LBL2+MUL2M2-MUL2M1+2+MR-ML+MSPIN2)/2)
C     PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
CCC   FK2=FK2*F9J(LBR2,MR,JWSL,LBL2,ML,JWSR,MUL2M1,MSPIN2,MUL2)
      GOTO 100
C
99    CONTINUE
C     NORM
      IF (ML.NE.MR) THEN
        WRITE (6,1200) MKC, ML, MR
        STOP 13
      ENDIF
      FK1=(-1)**((LBL2+ML+JWSR)/2)
      FK1=FK1*SQRT(AJRD/(2.*SPR+1))
      FK1=FK1*F6J(LBL2,LBR2,0,JWSL,JWSR,ML)
C      write(nout,*)'f6j:',LBL2,LBR2,0,JWSL,JWSR,ML
C      write(nout,*) F6J(LBL2,LBR2,0,JWSL,JWSR,ML)
      FK2=FK1
C
100   CONTINUE
C  for F1 <J'|L|J> + F2 <J|L|J'>
C  LIT source: F2 = 0      
      FK2 = 0
C      IF (LAUF.EQ.2) FK2=0.
      F=CL
C     HIER WIRD DER FUER DIE NORM FALSCHE CLEBSCH-GORDAN-KOEFFIZIENT
C     DES RED. MATR.-ELEMENTS HERAUSGEKUERZT.
C     ALLE OPERATOREN
      F1=F*FK1new*GEFAK(MKC)
C
      IF(F1.EQ.0.AND.F2.EQ.0.) THEN
        GOTO 40
      ENDIF
      NZKL1=NZKL+1
C
C
      DO 42 KANL=1,NZKL
C     LOOP KANAELE LINKS
C
C
      DO 142 KANR=NZKL1,NZKA
C     LOOP KANAELE RECHTS
C      write(6,*)'UL,R:',UMKOFL(KANL),UMKOFR(KANR)
C
      FAK1 = UMKOFL(KANL)*UMKOFR(KANR)
      FAK2 = UMKOFR(KANL)*UMKOFL(KANR)

      IF(ABS(FAK1)+ABS(FAK2).LT.1.E-12) THEN
        GOTO 142
      ENDIF
      KONTRO=1
      IF(NUML.EQ.NUMR) FAK2=0.
      FA=FAK1*F1
      FB=FAK2*F2
C
C
      DO 46 K=1,IK1
C     LOOP RADIALPARAMETER LINKS
C
C
      DO 146 L=1,JK1
C     LOOP RADIALPARAMETER RECHTS
C
      K1=LUM(K,KANL)
      L1=LUM(L,KANR)
      K2=LUM(K,KANR)
      L2=LUM(L,KANL)
      KK=NZQ(KANL)+K1
      LL=NZQ(KANR)+L1
      LK=NZQ(KANR)+K2
      KL=NZQ(KANL)+L2
      IF(K1*L1.LE.0) GOTO 44
      IF (FA.EQ.0.) GOTO 44
      DO 147, NT=1, NTI
      DO 47 JJ = 1,LL1
C                     
      OP(JJ,NT,KK,LL)=OP(JJ,NT,KK,LL)+DN(JJ,NT,K,L)*FA
   47 CONTINUE
      EFG(NT,KK,LL)=FG(NT,K,L)
      IF(IGAK.GT.4) WRITE(6,1037) KANL,KANR,K1,L1,KK,LL,EFG(NT,KK,LL),
     *                            FA,(OP(JJ,NT,KK,LL),JJ=1,LL1)
147   CONTINUE
44    IF(K2*L2.LE.0) GOTO 45
      IF(FB.EQ.0.) GOTO 45
      DO 148, NT=1, NTI
      DO 48 JJ = 1,LL1
      OP(JJ,NT,KL,LK)=OP(JJ,NT,KL,LK)+DN(JJ,NT,K,L)*FB
   48 CONTINUE
      EFG(NT,KL,LK)=FG(NT,K,L)
      IF(IGAK.GT.4) WRITE(6,1038) KANL,KANR,K2,L2,KL,LK,EFG(NT,KL,LK),
     *                            FB,(OP(JJ,NT,KL,LK),JJ=1,LL1)
148   CONTINUE
45    CONTINUE
C
C     ENDE LOOP RADIALPARAMETER RECHTS
146   CONTINUE
C
C     ENDE LOOP RADIALPARAMETER LINKS
46    CONTINUE
C
C     ENDE LOOP KANAELE RECHTS
142   CONTINUE
C
C     ENDE LOOP KANAELE LINKS
42    CONTINUE
C
      LL1MAX(MKC)=MAX(LL1MAX(MKC),LL1)
C
C     ENDE LOOP BASISVEKTOR-MATRIZEN
   40 CONTINUE
C
      IF (MREGH.EQ.0) GOTO 64
      IF (KONTRO.EQ.0) GOTO 64
C
C     AUSDRUCK DER OP-WERTE UND DER K-POTENZ LAMBDA
      IF(IGAK.LT.2) GOTO 64
      DO 520 I1 = 1,MMM
       DO 520 I2 = 1,MMM
        DO 520, JJ=1, LL1MAX(MKC)
         DO 520, NT=1, NTI
          IF (OP(JJ,NT,I1,I2).NE.0.) WRITE(6,1202) I1,I2,JJ,NT,
     *                            EFG(NT,I1,I2),OP(JJ,NT,I1,I2)
520   CONTINUE
C
C
C     ENDE LOOP UNTEROPERATOREN
64    CONTINUE
C
C
      IF (MREGH.EQ.0 .OR. KONTRO.EQ.0) GOTO 62
      IF (IGAK.GT.2) WRITE (6,1300) JJJ,LLL,KKK,MKC,MFR,MFL
      CALL SORTEO(MKC,IH)
      IF(IGAK.GT.1) WRITE (6, 1004)MKC,IH
C
C     ENDE LOOP INNERE WEITEN RECHTS
   62 CONTINUE
C
C     ENDE LOOP INNERE WEITEN LINKS
   61 CONTINUE

C     ENDE LOOP OBEM
   60 CONTINUE
C
      NZECFG(MKC)=IH
C
C     ENDE LOOP OPERATOREN
   41 CONTINUE
C
C     ENDE LOOP ZERLEGUNGEN RECHTS
139    CONTINUE
C
C     ENDE LOOP ZERLEGUNGEN LINKS
  140 CONTINUE
C
C     ENDE LOOP DURCHLAEFE
150   CONTINUE
C
C     BESTIMMUNG VON OPWERT
C
      DO 620, NEK=1, NZEK
C
       IF (IGAK.GT.0) WRITE (6,1041) EK(NEK)
C
       DO 610, MKC=1, NZOPER
C
        MREGH=MREG(MKC)
        IF (MKC.EQ.10.OR.MKC.EQ.11) MREGH=MAX0(MREG(MKC),
     *                             MREG(NZOPER-11+MKC))
        IF (MREGH.EQ.0) GOTO 610
C        IF (MKC.EQ.NZOPER-1 .OR. MKC.EQ.NZOPER) GOTO 601
C
C        write(6,*)'ECCE:',NZECFG(MKC),LL1MAX(MKC)
        DO 600, I1=1, NZECFG(MKC)
         OPH1=0
         DO 590, JJ=1,LL1MAX(MKC)
C                1                                  Sp  Sn
          GOTO(586,587,587,588,588,588,588,587,587,587,587,
     *                            586,588,588,587,587,584), MKC
584       STOP 16
C
586       CONTINUE
C         NORM
          JQ=0
          GOTO 589
C
587       CONTINUE
C         EL. SPIN- UND MAGN. BAHNOPERATOREN UND SIEGERTOPERATOR
          JQ=2*(JJ-1)+MOD(MUL,2)
          GOTO 589
C
588       CONTINUE
C         MAGN. SPIN- UND EL. BAHNOPERATOREN
          JQ=2*(JJ-1)+MOD((MUL+1),2)
C
589       CONTINUE
          OPH=OCP(JJ,I1,MKC)
          IF (JQ.GT.0.) OPH=OPH*(EK(NEK)**JQ)
          OPH1=OPH1+OPH
          IF(IGAK.GT.1) WRITE(6,1050) JQ,OCP(JJ,I1,MKC),OPH,OPH1
590      CONTINUE
         OPH2=OPH1
         IF (EK(NEK).GT.0.) OPH2=OPH1*EXP((EK(NEK)**2)*ECFG(I1,MKC))
         OPWERT(NEK,MKC)=OPWERT(NEK,MKC)+OPH2
         IF(IGAK.GT.1) WRITE(6,1051) OPH1,ECFG(I1,MKC),OPH2,
     *                               OPWERT(NEK,MKC)
600     CONTINUE
C
601     GOTO (607,603,603,603,603,607,607,607,607,605,605,
     *        607,607,607,607,607,606,606,602), MKC
C
602     STOP 17
C
603     CONTINUE
C       SPINOPERATOREN
        OPWERT(NEK,MKC)=OPWERT(NEK,MKC)*EK(NEK)
        GOTO 607
C
605     CONTINUE
C       SIEGERTOPERATOR
C       ecce: (jk,26.9.2019) this factor is now considered below in VF
C        IF (EKNULL.GT.0.) OPWERT(NEK,MKC)=OPWERT(NEK,MKC)*
C     *                    EKNULL/EK(NEK)
        GOTO 607
C
606     CONTINUE
C       COULOMBOPERATOR
        MKCH=11+MKC-NZOPER
        OPWERT(NEK,MKC)=OPWERT(NEK,MKCH)
        IF (EKNULL.GT.0.) THEN
         OPWERT(NEK,MKC)=OPWERT(NEK,MKC)*EK(NEK)/EKNULL
        ELSE
         OPWERT(NEK,MKCH)=0.
        ENDIF
        GOTO 609
C
607     CONTINUE
C
C      MULTIPLIKATION MIT FAKTOR DES RED. MATR.-ELEMENTS UND
C      MIT NORMIERUNGSFAKTOREN
C  the factor recovers the dependence on the magnetic quantum numbers
C  generalize: CL -> (Jm_j Lm_L | J'm_J')
C       OPWERT(NEK,MKC)=OPWERT(NEK,MKC)*SQRT(2.*GJL+1.)/CL/
C     *             (ANORML*ANORMR)
609    IF (MREGH.GT.0.AND.IGAK.GT.0) then
        WRITE (6,1032) MKC,OPWERT(NEK,MKC)
C        write(6,*) SQRT(2.*GJL+1.)
       endif
C operator loop
610    CONTINUE

C energy loop
620   CONTINUE
C
C     berechnung der vorfaktoren (multipol, siegert, ...)
C     alles, was nichts mit kopplungen und basis spezifika
C     zu tun hat
C     ========================
c ----- old
C DF=!! from long-wave-length limit of j_l (see Walecka Eq.(7.46))      
C      VF1=1.
C      IF (MUL.GT.0) VF1=(AK+1.)/AK
C      (see Eq.(7.44) in Walecka)      
C      VF=8.*PI*VF1/(DF(MUL2+1)**2)
C      VF=HC/137.03604
C      VF=VF*EKNULL
C      VFE=VF1/(DF(MUL2+1)**2)

c Siegert for LIT benchmark (Eq.(55) in Bampa)
      VF = (1./(HC*EK(1)))*4.*SQRT(PI/137.03604)
      WRITE (6,*)"E_0 = ", EK(1)
      IF (MUL.GT.0) VF=VF*SQRT((FLOAT(MUL)+1.)/FLOAT(MUL))
      WRITE (6,*)"Vorfaktor = ", VF
c      WRITE (6,*)"Kopplungsfaktor(FA) = ", FA
c      WRITE (6,*)"Kopplungsfaktor(FB) = ", FB
      VFE=VF     

C     AUSRDRUCK DER ERGEBNISSE
C     ========================
C
      WRITE (6,1040)
C
C     NORMOPERATOR
      IF (MREG(1).EQ.0) GOTO 625
      WRITE (6,1033)
      WRITE (6,1029) OPWERT(1,1)/(SQRT(2.*GJL+1.)*FLOAT(MMASSE(1,1)+
     *                            MMASSE(2,1)))
625   CONTINUE
      IF (MREG(12).EQ.0) GOTO 630
      WRITE (6,1033)
      WRITE (6,1029) OPWERT(1,12)/(SQRT(2.*GJL+1.)*2.)
C
630   CONTINUE
      IF (ISTEU.EQ.1.OR.ISTEU.EQ.3) GOTO 940
C     AUSDRUCK FUER ELEKTRONENSTREUUNG

      write(6,1077)
1077  FORMAT(1X,' EK2         EK(NEK)     JWSL   MUL  JWSR JWSLM', 
     * 2X,'MULM  OP          MET   ')


      DO 900, NEK=1, NZEK

C
       VFUE=FLOAT(LAD**2)/(4.*PI)
C      VORFAKTOR DES UEBERALLFORMFAKTORS
C
C      KORREKTURFAKTOREN FUER DIE LADUNGSFORMFAKTOREN VON PROTON UND
C      NEUTRON
C      BERECHNUNG NACH UEBERALL "ELECTRON SCATTERING FROM COMPLEX
C      NUCLEI", PART A, NEW YORK AND LONDON 1971, S. 188
       EK2=(EK(NEK)+EKNULL)*(EK(NEK)-EKNULL)
       GS=.5*(2.5/(1.+EK2/15.7)-1.6/(1.+EK2/26.7)+.1)
       GV=.5*(1.16/(1.+EK2/8.19)-.16)
       GEP=GS+GV
       GEN=GS-GV
C
C      KORREKTUR FUER DIE MAGN. MOMENTE VON PROTON UND NEUTRON
C      BERECHNUNG NACH: FRIAR AND NEGELE "DETERMINATION OF NUCLEAR CHARGE
C      DISTRIBUTIONS" IN "ADVACES IN NUCLEAR PHYSICS", 8 (1975), S. 227
       GMP=(1./(1.+EK2*HC*HC/(840.*840.)))**2
       GMN=GMP
C      ELEKTRISCHE OPERATOREN MIT SIEGERTOPERATOR
       IF (MREG(10)+MREG(11).EQ.0) STOP

C sum        
       OPE=OPWERT(NEK,10)+OPWERT(NEK,11)
       OPE=OPE*VF
       CALL OUT(NEK,1,OPE)
C      ECCE: LIT benchmark => no other operators or corrections
C            goto next energy
       GOTO 900
900   CONTINUE
      GOTO 980
C
940   CONTINUE
C     AUSDRUCK FUER PHOTOABSORPTION
C
      DO 950, MKC=1, NZOPER
       OPWERT(1,MKC)=OPWERT(1,MKC)/EKNULL**MUL
C      UMRECHNUNG AUF MERTELMEIERDEFINITION
950   CONTINUE
C
C     ELEKTISCHE OPERATOREN
      IF(MREG(2)+MREG(3)+MREG(6)+MREG(7)+MREG(10)+MREG(11).EQ.0)
     *  GOTO 970
C      IF(MREG(2)+MREG(3)+MREG(6)+MREG(7)+MREG(10)+MREG(11)+
C     *    MREG(13)+MREG(14).EQ.0) GOTO 970      
      WRITE (6,1053)
      WRITE (6,1054) MUL
      IF (MREG(2)*MREG(3).NE.0) THEN
         OPWE(1)=OPWERT(1,2)+OPWERT(1,3)
         WRITE (6,1039) OPWE(1), MUL
      ELSE
         OPWE(1)=0.
         WRITE (6,1090)
      ENDIF
      WRITE (6,1055) MUL
      IF (MREG(6)*MREG(7).NE.0) THEN
         OPWE(3)=OPWERT(1,6)+OPWERT(1,7)
         WRITE (6,1039) OPWE(3), MUL
      ELSE
         OPWE(3)=0.
         WRITE (6,1090)
      ENDIF
      WRITE (6,1056) MUL
      IF (MREG(10)*MREG(11).NE.0) THEN
         OPWE(2)=OPWERT(1,10)+OPWERT(1,11)
         WRITE (6,1039) OPWE(2), MUL
      ELSE
         OPWE(2)=0.
         WRITE (6,1090)
      ENDIF
      OPWE(2)=OPWE(2)+OPWE(1)
      OPWE(1)=OPWE(1)+OPWE(3)
      WRITE (6,1057) MUL
C      IF (MREG(13)*MREG(14).NE.0) THEN
C         OPWE(3)=OPWERT(1,12)+OPWERT(1,13)
C         WRITE (6,1039) OPWE(3), MUL
C      ELSE
         OPWE(3)=0.
         WRITE (6,1090)
C      ENDIF
      OPWE(3)=OPWE(3)+OPWE(2)
C
      DO 960, I=1,3
       IF (I.EQ.1) WRITE (6,1080) MUL
       IF (I.EQ.2) WRITE (6,1081) MUL
       IF (I.EQ.3) WRITE (6,1082) MUL
       WRITE (6,1039) OPWE(I), MUL
       BE=OPWE(I)*OPWE(I)/AJRD
       WRITE (6,1064) MUL, BE, MUL2
       IF (ENER.LE.0.) GOTO 960
       WIDE=VF*BE
       WRITE (6,1066) MUL, WIDE
960   CONTINUE
C     ENDE ERGEBNISAUSDRUCK ELEKTRISCHE OPERATOREN
C
C
970   CONTINUE
C     MAGNETISCHE OPERATOREN
      IF(MREG(4)+MREG(5)+MREG(8)+MREG(9).EQ.0)
     *                                                  GOTO 980
C      IF(MREG(4)+MREG(5)+MREG(8)+MREG(9)+MREG(15)+MREG(16).EQ.0)
C     *                                                  GOTO 980     
      WRITE (6,1052)
      WRITE (6,1058) MUL
      IF (MREG(4)*MREG(5).NE.0) THEN
         OPWE(1)=OPWERT(1,4)+OPWERT(1,5)
         WRITE (6,1039) OPWE(1), MUL
      ELSE
         OPWE(1)=0.
         WRITE (6,1090)
      ENDIF
      WRITE (6,1059) MUL
      IF (MREG(8)*MREG(9).NE.0) THEN
         OPWE(2)=OPWERT(1,8)+OPWERT(1,9)
         WRITE (6,1039) OPWE(2), MUL
      ELSE
         OPWE(2)=0.
         WRITE(6,1090)
      ENDIF
      OPWE(1)=OPWE(1)+OPWE(2)
      WRITE (6,1060) MUL
C      IF (MREG(15)*MREG(16).NE.0) THEN
C         OPWE(2)=OPWERT(1,15)+OPWERT(1,16)
C         WRITE (6,1039) OPWE(2), MUL
C      ELSE
         OPWE(2)=0.
         WRITE(6,1090)
C      ENDIF
      OPWE(2)=OPWE(1)+OPWE(2)
C
      DO 975, I=1,2
       IF (I.EQ.1) WRITE (6,1083) MUL
       IF (I.EQ.2) WRITE (6,1084) MUL
       WRITE (6,1039) OPWE(I), MUL
       BM=OPWE(I)*OPWE(I)/AJRD
       BMK=BM/H2MCP**2
       MUL22=MUL2-2
       WRITE (6,1065) MUL, BM, MUL2, BMK, MUL22
       IF (ENER.LE.0.) GOTO 975
       WIDM=VF*BM
       WRITE (6,1067) MUL, WIDM
975   CONTINUE
C     ENDE ERGEBNISAUSDRUCK MAGNETISCHE OPERATOREN
C
C
980   WRITE (6,1026)
      STOP
C
1000  FORMAT(6E12.4)
1001  FORMAT(E20.12)
1002  FORMAT(30I3)
1003  FORMAT('1','PROGRAMM ENEMB',/,1X,14('='),////,
     *       1X,'VERSION VOM 01.02.91',///,1X)
1004  FORMAT(' AUS SORT',4I10)
1005  FORMAT(1X,'ZU VIELE UEBERLAGERUNGSKOEFFIZIENTEN',2I4)
1006  FORMAT(27H FEHLER IN DEN EINGABEDATEN ,4I3)
1007  FORMAT(' TOO MANY RADIALPARAMETERS*CHANNELS',2I5)
1008  FORMAT(1X,'ZU VIELE RADIALWEITEN',2I4)
1009  FORMAT(' TOO MANY BASISVECTORS',2I10)
1010  FORMAT(1X,'L = ',I2,' - OPERATOREN',18(/,1X,'OPERATOR',I3,
     *       ': MREG(',I2,') = ',I1))
1011  FORMAT(30H BENUTZTE RADIALFUNKTIONEN      /30I3)
1012  FORMAT(1X,'ZU VIELE KANAELE',4I4)
1013  FORMAT(6F12.4)
1014  FORMAT(//,1X,'G-FAKTOREN:   PROTON  BAHN',F12.4,
     *       /,15X,'PROTON  SPIN',F12.4,/,15X,'NEUTRON BAHN',
     *       F12.4,/,15X,'NEUTRON SPIN',F12.4)
1015  FORMAT(//,1X,'VORFAKTOREN:',13(/,1X,'GEFAK(',I2,') = ',F12.4))
1016  FORMAT(///,1X,'DEFINITION DER BASISVEKTOREN:',//,1X,
     *       'NR. DES  NUKLEONENZAHL  LADUNG  SPINS            ',
     *       'DREHIMPULSE                ZAHL DER     POLYNOM-',/,1X,
     *       'BASV          M1    M2   Q1 Q2     S1   S2 SGES  ',
     *       '   L1   L2 L1,2 LREL LGES  REL.-WEITEN  POTENZ',/,1X)
1017  FORMAT(1X,I7,3X,2I6,2X,2I3,2X,3(I3,'/2'),2X,5I5,5X,I8,2X,I8)
1018  FORMAT (2H0/,I3,4H ) =,4(E12.4,2H /,I3,2H )),
     1   30(/,9X,4(E12.4,2H /,I3,2H ))))
1019  FORMAT(1X,'NUML,NUMR,IK1,JK1,LL1',5I3,/,1X,I4,'TE DC, ',
     * I3,' TE INNERE WEITE LINKS,',I3,'TE INNERE WEITE RECHTS')
1020  FORMAT('0')
1021  FORMAT(' FG= ',E12.5,4(' IQ=',I3,' DN= ',E12.5,:))
1023  FORMAT(/,1X,'IND:',25I3)
1024  FORMAT(/1X,'J(FINAL)   = ',I3,' /2  +'/)
1025  FORMAT(/1X,'J(FINAL)   = ',I3,' /2  -'/)
1026  FORMAT(///,1X,'ENDE DER RECHNUNG VON ENEMB')
1029  FORMAT(/,1X,'NORM:',G14.6)
1030  FORMAT(1X,'ES WIRD PHOTOABSORBTION GERECHNET',///,1X)
1031  FORMAT(1X,'ES WIRD ELEKTRONENSTREUUNG GERECHNET',///,1X)
1032  FORMAT(1X,'REDUZIERTES MATRIXELEMENT DES OPERATORS',
     *       I3,':   ',E16.8)
1033  FORMAT(////,1X,'NORMOPERATOR',/,1X,12('='))
1034  FORMAT(1X,'J(INITIAL) = ',I3,' /2  +'//)
1035  FORMAT(1X,'J(INITIAL) = ',I3,' /2  -'//)
1036  FORMAT(/,1X,'ENERGIE  DES PHOTOENS:',F12.6,' MEV')
1037  FORMAT(1X,'KANL, KANR',2I5,' K1, L1',2I5,
     *       ' KK,LL',2I5,' EXPONENT EFG = ',E16.8,' FA=',
     *       E14.4,/,1X,'OP  ',9E14.4)
1038  FORMAT(1X,'KANL, KANR',2I5,' K2, L2',2I5,
     *       ' KL,LK',2I5,' EXPONENT EFG = ',E16.8,' FB = ',
     *       E16.8,/,1X,'OP  ',9E14.4)
1039  FORMAT(/,1X,'RED. MATRIXELEMENT:',G14.6,:,' E * FERMI**',I3)
1040  FORMAT('1','AUSDRUCK DER ERGEBNISSE',/,1X,23('='))
1041  FORMAT(/,1X,'K-VEKTOR DES PHOTONS:',F12.6,' FERMI**(-1)')
1050  FORMAT(1X,'LAMBDA  ',I2,'    OCP  ',E12.5,'   OCP*'
     *       ,'(EK**LAMBDA)  ',E12.5,'    OPH1  ',E12.5)
1051  FORMAT(//,1X,'OPH1  ',E12.5,' * ',
     *       'VORFAKTOR  EXP(',E12.5,'*(EK**2))  =  ',E12.5,/,1X,
     *       'NEUES OPERATORMATRIXELEMENT OPWERT',E12.5,/,' ')
1052  FORMAT(////,1X,'MAGNETISCHE OPERATOREN',/,1X,22('='))
1053  FORMAT(////,1X,'ELEKTRISCHE OPERATOREN',/,1X,22('='))
1054  FORMAT(//,1X,'E',I3,' SPINOPERATOR')
1055  FORMAT(//,1X,'E',I3,' BAHNOPERATOR')
1056  FORMAT(//,1X,'E',I3,' SIEGERT-OPERATOR')
1057  FORMAT(//,1X,'E',I3,' PION-SEAGULL-OPERATOR')
1058  FORMAT(//,1X,'M',I3,' SPINOPERATOR')
1059  FORMAT(//,1X,'M',I3,' BAHNOPERATOR')
1060  FORMAT(//,1X,'M',I3,' PION-SEAGULL-OPERATOR')
1064  FORMAT(/,1X,'B(E',I2,') = ',G14.6,' E**2 * FERMI **',I3)
1065  FORMAT(/,1X,'B(M',I2,') = ',G14.6,' E**2 * FERMI**',I3,
     *'     =     ',G14.6,' KERNMAGNETON**2  *  FERMI**',I3)
1066  FORMAT(1X,'WIDTH(E',I2,') = ',G14.6,' MEV')
1067  FORMAT(1X,'WIDTH(M',I2,') = ',G12.4,' MEV')
1080  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR')
1081  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR (MIT SIEGERT-OPERATOR)')
1082  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR MIT PION-SEAGULL-',
     *                     'OPERATOR)')
1083  FORMAT(///,1X,'M',I3,' GESAMTOPERATOR')
1084  FORMAT(///,1X,'M',I3,' GESAMTOPERATOR MIT PION-SEAGULL-',
     *                     'OPERATOR)')
1090  FORMAT(1X,'WURDE NICHT BERECHNET')
1091  FORMAT(1X,'VERGLEICHSFEHLER ZWISCHEN QUAOUT UND QUALMOUT')
1200  FORMAT(1X,'BEI OPERATOR',I2,'  SL.NE.SR ',2I5)
1201  FORMAT(////,1X,'OPERATOR',I3,/,1X,'===========',/,'0')
1202  FORMAT(1X,4I3, (6E12.4))
1203  FORMAT(1X,'BEI OPERATOR',I3,' FALSCHE PARITAET')
1204  FORMAT(1X,'(',4F6.1,'  / ',2F6.1,' ) = ',F6.2)
1300  FORMAT(I10,' ELEMENTE FUER WEITE RECHTS,LINKS,DC,OPERATOR',
     * ',ZERLEGUNG RECHTS,LINKS ',6I5,' GESCHRIEBEN')
      END
      SUBROUTINE SORTEO(MKC,IH)
      INCLUDE 'par/ENEMB'
C
      COMMON /CSOR/ MMM, NTI, OP(NDIM2,2,NDIM,NDIM),EFG(2,NDIM,NDIM),
     *              ECFG(NDIM1,NZOPER-2), OCP(NDIM2,NDIM1,NZOPER-2),
     *              LL1MAX(NZOPER-2)
C
      DO 200 I1=1,MMM
         DO 190 I2=1,MMM
            DO 185 NT=1,NTI
C  EFG is the total exponent, which includes the sign (A.4) - alpha_jj k**2
C  see l.1328 in qual.f:  FG=FG/(-4)              
               IF (EFG(NT,I1,I2).GT.0.) GOTO 185
               EN=EFG(NT,I1,I2)
               DO 170 JT=1,IH
C                 SUCHE, OB EXPONENTIALVORFAKTOR SCHON VORHANDEN
                  IF (ABS(EN-ECFG(JT,MKC)).GT.1.E-8) GOTO 170
                  DO 150 L=1,LL1MAX(MKC)
                     OCP(L,JT,MKC)=OCP(L,JT,MKC)+OP(L,NT,I1,I2)
150               CONTINUE
                  GOTO 185
170            CONTINUE
C              NEUER EXPONENTIALVORFAKTOR
               IH=IH+1
               IF (IH.GT.NDIM1) GOTO 1000
               ECFG(IH,MKC)=EFG(NT,I1,I2)
               DO 180 L=1,LL1MAX(MKC)
                  OCP(L,IH,MKC)=OP(L,NT,I1,I2)
180            CONTINUE
185         CONTINUE
190      CONTINUE
200   CONTINUE
      RETURN
1000  WRITE(6,1001)IH,NDIM1
1001  FORMAT(' DIMENSION ZU KLEIN',2I5)
      STOP 1000
      END
      SUBROUTINE OUT(NEK,IP,OP)
C     OUT DIENT ZUM AUSDRUCK DER ERGEBNISSE BEI ELEKTRONENSTREUUNG
C     AUSDRUCK IM GLEICHEN FORMAT WIE EXODUS
C
      INCLUDE 'par/ENEMB'
C
      COMMON /OUTPF/ EK(NZEKMA),EKNULL
      COMMON /OUTPI/  INR, ISRB, JWSL, JWSR, MUL,
     *              NBAND, JWSLM, MULM, MUL2
C
      EK2=EK(NEK)*EK(NEK)
      WRITE (6,1001) EK2,EK(NEK),JWSL,MUL2,JWSR,JWSLM,MULM,OP

      WRITE (NBAND,1000) EK2, EK(NEK), MUL, INR, ISRB, IP,
     *                   JWSL, JWSR, 0, OP, 0.
      RETURN         
1000  FORMAT (2E12.4,7I3,2E12.4)
1001  FORMAT (2E12.4,5I6,1E12.4)
      END

      REAL FUNCTION CLG(J1,J2,J3,M1,M2)
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C     
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C  
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      REAL FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END

      FUNCTION F6J(JD1,JD2,JD3,LD1,LD2,LD3)
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I F6J FUNCTION CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     ANGULAR MOMENTUM COUPLING TESTS FOR 6J COEFFICIENT
      F6J=0.0
      IF(J1.LT.0 .OR. J2.LT.0 .OR. J3.LT.0) RETURN
      IF(L1.LT.0 .OR. L2.LT.0 .OR. L3.LT.0) RETURN
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J1+L2+L3,2).NE.0) RETURN
      IF(L3.GT.J1+L2 .OR. L3.LT.ABS(J1-L2)) RETURN
      IF(MOD(L1+J2+L3,2).NE.0) RETURN
      IF(L3.GT.L1+J2 .OR. L3.LT.ABS(L1-J2)) RETURN
      IF(MOD(L1+L2+J3,2).NE.0) RETURN
      IF(J3.GT.L1+L2 .OR. J3.LT.ABS(L1-L2)) RETURN
      F6J=S6J(J1,J2,J3,L1,L2,L3)
      RETURN
      END
      FUNCTION F9J(JD1,JD2,JD3,JD4,JD5,JD6,JD7,JD8,JD9)
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     F9J VERSION I  CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H.
      DIMENSION KN(6),KX(6),NN(6)
      J1=JD1   
      J2=JD2  
      J3=JD3 
      J4=JD4
      J5=JD5
      J6=JD6
      J7=JD7
      J8=JD8
      J9=JD9
      F9J= 0.0
C     ANGULAR MOMENTUM COUPLING TESTS FOR 9J COEFFICIENT 
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J4+J5+J6,2).NE.0) RETURN
      IF(J6.GT.J4+J5 .OR. J6.LT.ABS(J4-J5)) RETURN
      IF(MOD(J7+J8+J9,2).NE.0) RETURN
      IF(J9.GT.J7+J8 .OR. J9.LT.ABS(J7-J8)) RETURN
      IF(MOD(J1+J4+J7,2).NE.0) RETURN
      IF(J7.GT.J1+J4 .OR. J7.LT.ABS(J1-J4)) RETURN
      IF(MOD(J2+J5+J8,2).NE.0) RETURN
      IF(J8.GT.J2+J5 .OR. J8.LT.ABS(J2-J5)) RETURN
      IF(MOD(J3+J6+J9,2).NE.0) RETURN
      IF(J9.GT.J3+J6 .OR. J9.LT.ABS(J3-J6)) RETURN
      KN(1)=MAX0(IABS(J2-J6),IABS(J1-J9),IABS(J4-J8))
      KN(2)=MAX0(IABS(J2-J7),IABS(J5-J9),IABS(J4-J3))
      KN(3)=MAX0(IABS(J6-J7),IABS(J5-J1),IABS(J8-J3))
      KN(4)=MAX0(IABS(J6-J1),IABS(J2-J9),IABS(J5-J7))
      KN(5)=MAX0(IABS(J2-J4),IABS(J3-J7),IABS(J6-J8))
      KN(6)=MAX0(IABS(J3-J5),IABS(J1-J8),IABS(J4-J9))
      KX(1)=MIN0(J2+J6,J1+J9,J4+J8)
      KX(2)=MIN0(J2+J7,J5+J9,J4+J3)
      KX(3)=MIN0(J6+J7,J5+J1,J8+J3)
      KX(4)=MIN0(J1+J6,J2+J9,J5+J7)
      KX(5)=MIN0(J2+J4,J3+J7,J6+J8)
      KX(6)=MIN0(J3+J5,J1+J8,J4+J9)
      DO 35 K=1,6
   35 NN(K)=KX(K)-KN(K)
      KSIGN=1
      I=MIN0(NN(1),NN(2),NN(3),NN(4),NN(5),NN(6))
      DO 40 K=1,6
      IF(I-NN(K))40,50,40
   40 CONTINUE
   50 KMIN=KN(K)+1
      KMAX=KX(K)+1
      GO TO(130,52,53,54,55,56),K
   52 J=J1
      J1=J5
      J5=J
      J=J3
      J3=J8
      J8=J
      J=J6
      J6=J7
      J7=J
      GO TO 130
   53 J=J2
      J2=J7
      J7=J
      J=J3
      J3=J4
      J4=J
      J=J5
      J5=J9
      J9=J
      GO TO 130
   54 J=J1
      J1=J2
      J2=J
      J=J4
      J4=J5
      J5=J
      J=J7
      J7=J8
      J8=J
      GO TO 120
   55 J=J1
      J1=J3
      J3=J
      J=J4
      J4=J6
      J6=J
      J=J7
      J7=J9
      J9=J
      GO TO 120
   56 J=J2
      J2=J3
      J3=J
      J=J5
      J5=J6
      J6=J
      J=J8
      J8=J9
      J9=J
  120 KSIGN=(1-MOD(J1+J2+J3+J4+J5+J6+J7+J8+J9,4))
C     SUMMATION OF SERIES OF EQUATION (2)  
  130 SUM=0.0                             
      SIG=(-1)**(KMIN-1)*KSIGN
      FLK=KMIN                           
      DO 200 K=KMIN,KMAX,2              
      TERM=FLK*S6J(J1,J4,J7,J8,J9,K-1)*S6J(J2,J5,J8,J4,K-1,J6)
     1*S6J(J3,J6,J9,K-1,J1,J2)
      FLK=FLK+2.0                    
  200 SUM=SUM+TERM                    
      F9J=SUM*SIG
      RETURN                       
      END                         
      FUNCTION S6J(JD1,JD2,JD3,LD1,LD2,LD3)
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I  FORTRAN IV
      DIMENSION MA(4),MB(3),MED(12)
      COMMON /FACT/FL(322),NCALL
      DATA NCALL/1/
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     DETERMINE WHETHER TO CALCULATE FL(N) S
      IF(NCALL.EQ.0) GOTO 15
      NCALL=0
C     CALCULATE FL(N) S
      FL(1)=0.0
      FL(2)=0.0
      DO 50 N= 3,322
      FN=N-1
   50 FL(N)=FL(N-1)+LOG(FN)
   15 MED(1)=(-J1+J2+J3)/2
      MED(2)=(+J1-J2+J3)/2
      MED(3)=(+J1+J2-J3)/2
      MED(4)=(-J1+L2+L3)/2
      MED(5)=(+J1-L2+L3)/2
      MED(6)=(+J1+L2-L3)/2
      MED(7)=(-L1+J2+L3)/2
      MED(8)=(+L1-J2+L3)/2
      MED(9)=(+L1+J2-L3)/2
      MED(10)=(-L1+L2+J3)/2
      MED(11)=(+L1-L2+J3)/2
      MED(12)=(+L1+L2-J3)/2
      MA(1)=MED(1)+MED(2)+MED(3)
      MA(2)=MED(4)+MED(5)+MED(6)
      MA(3)=MED(7)+MED(8)+MED(9)
      MA(4)=MED(10)+MED(11)+MED(12)
      MB(1)=MA(1)+MED(12)
      MB(2)=MA(1)+MED(4)
      MB(3)=MA(1)+MED(8)
C     DETERMINE MAXIMUM OF (J1+J2+J3),(J1+L2+L3),(L1+J2+L3),(L1+L2+J3)
      MAX=MA(1)
      DO 30 N=2,4
      IF (MAX-MA(N)) 20,30,30
   20 MAX=MA(N)
   30 CONTINUE
C     DETERMINE MINIMUM OF (J1+J2+L1+L2), (J2+J3+L2+L3),(J3+J1+L3+L1)
      MIN=MB(1)
      DO 51 N=2,3
      IF (MIN-MB(N)) 51,51,40
   40 MIN=MB(N)
   51 CONTINUE
      MINH=MIN
      KMAX=MIN-MAX
      MINP1=MIN+1
      MINI  =MINP1-MA(1)
      MIN2=MINP1-MA(2)
      MIN3=MINP1-MA(3)
      MIN4=MINP1-MA(4)
      MIN5=MINP1+1
      MIN6=MB(1)-MIN
      MIN7=MB(2)-MIN
      MIN8=MB(3)-MIN
      UK=1.E-15
      S=1.0E-15
      IF (KMAX) 65,65,55
   55 DO 60 K=1,KMAX
      UK=-UK*DBLE(MINI-K)*DBLE(MIN2-K)*DBLE(MIN3-K)*DBLE(MIN4-K)/
     1 (DBLE(MIN5-K)*DBLE(MIN6+K)*DBLE(MIN7+K)*DBLE(MIN8+K))
C     CUT OFF SERIES AT 1.0D-25
      IF(ABS(UK)-1.E-25) 65,60,60
   60 S=S+UK
   65 S=S*1.0E+15
C     CALCULATE DELTA FUNCTIONS
      DELOG=0.0
      DO 70 N=1,12
      NUM=MED(N)
   70 DELOG=DELOG+FL(NUM+1)
      NUM1=MA(1)+2
      NUM2=MA(2)+2
      NUM3=MA(3)+2
      NUM4=MA(4)+2
      DELOG=DELOG-FL(NUM1)-FL(NUM2)-FL(NUM3)-FL(NUM4)
      DELOG=0.5*DELOG
      ULOG=FL(MIN5)-FL(MINI)-FL(MIN2)-FL(MIN3)-FL(MIN4)-FL(MIN6+1)-
     1   FL(MIN7+1)-FL(MIN8+1)
      PLOG=DELOG+ULOG
      P=EXP (PLOG)
      S6J=P*S
      IF(MOD(MINH,2).NE.0)  S6J=-S6J
      RETURN
      END      
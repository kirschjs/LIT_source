      PROGRAM ENEMB
C     ENPON FUER QUAL
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C  
C      ELEKTROMAGNETISCHE UEBERGAENGE ZWISCHEN BOUND STATES OHNE
C     LANGWELLE (MIT SIEGERTOPERATOR)
C
C
C
C                       ***********
C                       * ACHTUNG *
C                       ***********
C
C     JEDER KANAL DARF NUR EINEN BASISVEKTOR ENTHALTEN
C     ================================================
C
C
C
C     ISTEU=1
C     PROGRAMM BERECHNET PHOTOABSORBTION
C     < FINAL STATE / OPERATOR / INITIAL STATE >
C
C     ISTEU=2 
C     PROGRAMM BERECHNET ELEKTRONENSTREUUNG AN BOUND STATES
C     < FINAL STATE / OPERATOR / INITIAL STATE >
C
C
C     MTD=1: WURZEL AUS FORMFAKTOR IN UEBERALLDEFINITION
C     MTD=2:   "     "       "     "  NORMALDEFINITION SQRT(=4.*PI/Z**2)*FFUEB
C     MTD=3: FORMFAKTOR IN UEBERALLDEFINITION
C     MTD=4:     "      "  NORMALDEFINITION
C
C     IP=1 : ELEKTRISCHE UEBERGAENGE
C     IP=2 : MAGNETISCHE UEBERGAENGE
C     IP=3 : COULOMBUEBERGAENGE
C
C     IP*10: ENTRECHENDE FORMFATOREN DURCH DIE LADUNGSFORMFAKTOREN FUER
C            PROTON UND NEUTRON KORRIGIERT
C
C
C     ISTEU=3/4
C     WIE ISTEU=1/2, ABER FUER QUARKRECHNUNG
C
C
C     NBAND1 KOMMT VON QUAL
C     NBAND2 (='FORMFA') ENTHAELT BEI ELEKTRONENSTREUUNG DIE FORM-
C            FAKTOREN ALS ERGEBNIS
C
C
C     FEBRUAR 1987  M. UNKELBACH
C     FASSUNG MAI 90  M.U., AUS ENEMB VERSION VOM 13.09.89
C     AENDERUNG 05.06.90: PROGRAMM UMSTRUKTURIERT  M.U.
C     AENDERUNG 13.06.90: DIMENSIONIERUNG GEAENDERT  M.U.
C     AENDERUNG 28.06.90: LOOP POTENTIALE MIT DEN INNEREN WEITEN LOOPS VER-
C                         TAUSCHT UND BERECHNUNG OPERATOR 12 KORRIGIERT.
C                         DIMENSIONIERUNG GEAENDERT
C     AENDERUNG 02.07.90: AUSDRUCK GEAENDERT M.U.
C     AENDERUNG 03.07.90: DIMENSIONIERUNG NDIM1 GEAENDERT  M.U.
C     AENDERUNG 25.10.90: FALSCHE NUKLEONFORMFAKTORKORREKTUR FUER
C                         SPINOPERATOREN BERICHTIGT  M.U.
C     AENDERUNG 26.10.90: DIMESINIONIERUNG GEAENDERT  M.U.
C     AENDERUNG 29.10.90: FEHLER BEI NORMRECHNUNG KORRIGIERT M.U.
C     AENDERUNG 31.10.90: FALSCHE PLAZIERUNG DES EINLESENS DER F-FAKTOREN
C                         BERICHTIGT  M.U.
C     AENDERUNG 01.02.91: AN NEUE QUALME-VERSION ANGEPASST  M.U.
C     LETZTE AENDERUNG 01.02.91 M. U.
C
C
      INCLUDE 'par/ENEMB'

C     NZOPER: ANZAHL DER OPERATOREN IN ENEMB
C     NZOPQU: ANZAHL DER OPERATOREN IN QUAL
C     NZPARM: MAXIMALE ANZAHL RADIALWEITEN EINES BASISVEKTORS
C     NZKMAX:    "       "    DER KANAELE
C     NZUMAX:    "       "     "  UEBERLAGERUNGSKOEFFIZIENTEN
C     NZBMAX:    "       "    BASISVEKTOREN
C     NDIM  :    "      SUMME UEBER ALLE KANAELE (ANZAHL DER RADIALPARA-
C             METER DES KANALS)
C             NDIM.LE.NZPARM*NZKMAX (HOECHSTMOEGLICHE ZAHL FUER NDIM)
C     NDIM1 : MAXIMALE ANZAHL VERSCHIEDENER EXPONENTIALVORFAKTOREN
C     NDIM2 :    "       "          "       K-POTENZEN
C     NZFMAX:    "       "    DER ZERLEGUNGEN
C     NZEKMA:    "       "    DER VERSCHIEDNEN K-VETOREN DES PHOTONS
C 
      COMMON /COMY/ D(100)
C
      COMMON /CSOR/ MMM, NTI,
     *         OP(NZOPER,NDIM2,2,NDIM),EFG(NZOPER,2,NDIM),
     *         ECFG(NDIM1,NZOPER-2), OCP(NDIM2,NDIM1,NZOPER-2),
     *         LL1MAX(NZOPER-2)
C
      COMMON /OUTPF/ EK(NZEKMA)
      COMMON /OUTPI/ INR, ISRB, JWSL, JWSR, MUL,
     *               NBAND2, JWSLM, MULM, MUL2
C
      DIMENSION DM(NDIM,NDIM,NZOPER)
C                  NDIM >= NZF*NZBV*NZREL
      DIMENSION DNN(NZPARM,NZPARM,NDIM2)
      DIMENSION FGN(NZPARM,NZPARM)
      DIMENSION NPARZ(NZFMAX)
C
      DIMENSION MLWERT(5,NZBMAX),MMS(3,NZBMAX),PAQ(NZPARM,NZBMAX)
      DIMENSION NZQ(NZKMAX+1),LWERT(5,NZKMAX),OPWE(3),DF(13)
      DIMENSION OPWERT(NZEKMA,NZOPER), NZECFG(NZOPER-2)
      DIMENSION KPB(NZBMAX),  LREG(NZOPQU), NZPAQ( NZBMAX)
      DIMENSION FG(2,NZPARM,NZPARM), NZPAR(NZKMAX)
      DIMENSION MMASSE(2,NZBMAX), MMLAD(2,NZBMAX),MS(3,NZKMAX),
     *    LUM(NZPARM+1,NZKMAX),  DN(NZPARM,NZPARM),
     *    NZRHO(NZFMAX),NZREL(NZFMAX),
     *    MREG(NZOPER), UMKOF(NZKMAX,NZBMAX ),
     *    UNK(NZUMAX),
     *    NUMK(NZBMAX), UMK(NZBMAX), MUMK(NZBMAX),
     *    NCOF(NZBMAX,NZKMAX), GEFAK(NZOPER-2),
     *    IND(NZBMAX,NZBMAX)
      DIMENSION MLWER1(5,NZBMAX),MMS1(3,NZBMAX),PAQ1(NZPARM,NZBMAX),
     *          MMASS1(2,NZBMAX), MMLAD1(2,NZBMAX),KPB1(NZKMAX),
     *          NZRHO1(NZFMAX), ITEH(6)
C
      CHARACTER*80 INFILE, OUTPUTout, FORMFAout
      
      call getarg(1,INFILE)
      OPEN(UNIT=5,FILE=INFILE,STATUS='OLD')
c      OPEN(UNIT=5,FILE='INEN',STATUS='OLD')      
      
      call getarg(2,OUTPUTout)
      OPEN(UNIT=6,FILE=OUTPUTout)
c      OPEN(UNIT=6,FILE='outi')      
      
      call getarg(3,FORMFAout)
c      OPEN(UNIT=15,FILE=FORMFAout,STATUS='UNKNOWN',FORM='FORMATTED')
      OPEN(UNIT=15,FILE=FORMFAout,FORM='UNFORMATTED',
     *     STATUS='REPLACE')
      OPEN(UNIT=10,FILE='QUAOUT',STATUS='OLD',FORM='UNFORMATTED')
C
      NBAND2=15
      NBAND3=20
      HC=197.32858
      H2MCP=HC/938.2796/2.
      H2MCN=HC/939.5731/2.
      PI=3.141592654
      D(1)=.0
      D(2)=.0
      DO 199 I=2,99
  199 D(I+1)=ALOG( REAL(I))+D(I)
      DF(1)=1.
      DO 200 I=2,12,2
200   DF(I+1)=REAL(I+1)*DF(I-1)
C     DF(I) = I!!
      WRITE(6,1003)
      READ(5,1002) NBAND1,IGAK,KEIND,IQUAK
C     NBAND1 KOMMT VON QUAL
C     KEIND  =1: UEBERLAGERUNG VON BASISVEKTOREN
C            =0: KEINE UEBERLAGERUNG VON BASISVEKTOREN
C     IGAK   STEUERVARIABLE DES AUSDRUCKS
C            .LT.2: NUR EINGABEWERTE UND MARIXELEMENTE WERDEN AUSGEDRUCKT
C            .LT.3: AUSDRUCK VON ECFG, OCP, OP
C            .LT.4:     "     "  OP, EFG
C            .LT.5:     "     "  SCHEMA
C            .GE.5:     "     IM LOOP RADIALPARAMETER
C     IQUAK  STEUERVARIABLE FUER UEBERGABE AUS QUAL
C            .LT.1: KEIN AUSDRUCK
C            .LT.2: DEFINITION DER BASISVEKTOREN
C            .LT.3: NICHT-VERSCHWINDENDE MATRIXELEMENTE
C            .GE.3: ALLE UEBERGABEWERTE
C
      READ(5,1002) (MREG(K),K=1,NZOPER)

      IF (MREG(10).EQ.0.OR.MREG(11).EQ.0) then
        write(6,*)'SIEGERT VERSION: MKC 10 and 11 must be != 0.'
        STOP 23
      ENDIF
C
C
      MODUS=0
      DO 21, K=12, NZOPER-2
         IF (MREG(K).EQ.1) MODUS=1
21    CONTINUE
      IF (MODUS.EQ.1) OPEN(20,FILE='QUALMOUT',STATUS='OLD',
     *                     FORM='UNFORMATTED')
C
C     EINLESEN UND ZUWEISUNG DER RICHTIGEN G-FAKTOREN
      READ(5,1013) GEFAK(2), GEFAK(3), GEFAK(6), GEFAK(7),
     *             GEFAK(10), GEFAK(11)
      GEFAK(1)=1.
      GEFAK(4)=GEFAK(2)
      GEFAK(5)=GEFAK(3)
      GEFAK(8)=GEFAK(6)
      GEFAK(9)=GEFAK(7)
      IF (GEFAK(10).EQ.0.) GEFAK(10)=GEFAK(6)
      IF (GEFAK(11).EQ.0.) GEFAK(11)=GEFAK(7)
      WRITE (6,1014) GEFAK(6), GEFAK(2), GEFAK(7), GEFAK(3)
C
C     BESTIMMUNG DER VORFAKTOREN FUER DIE MATRIXELEMENTE DER OPERATOREN
C    g -> g * hc/(mc^2) => [g] = fm
C    g(SIEGERT,MKC=10,11)=1(proton) and 0(neutron)
      DO 114 K=2,8,2
      GEFAK(K)=GEFAK(K)*H2MCP
114   GEFAK(K+1)=GEFAK(K+1)*H2MCN
C      GEFAK(12)=1.
      DO 115, K=13, NZOPQU
          GEFAK(K)=1./HC
115   CONTINUE
C
      IF (IGAK.GT.1) WRITE (6,1015) (K, GEFAK(K), K=1,NZOPER-2)
C     ENDE ZUWEISUNG GEFAK
C
C     EINLESEN DER NORMIERUNG DER ZUSTAENDE
      READ(5,1013) ANORML,ANORMR
C     ENER = EK(1) (below) in MeV      
      READ(5,1013) ENER
C                   Anz. energies      
      READ (5,1002) NZEK, INR, ISRB
C                   E(photon)_0 dE in MeV      
      READ (5,1013) EK(1), EKDIFF
      EK(1)=EK(1)/HC
      EKDIFF=EKDIFF/HC
      DO 9, NEK=2, NZEK
       EK(NEK)=EK(NEK-1)+EKDIFF
9     CONTINUE
C     EK: K-VEKTOR DES (VIRTUELLEN) PHOTONS  in fm^-1 !
      GOTO 11
C
C     PHOTOABSORBTION
10    CONTINUE
      NZEK=1
C
11    CONTINUE
C
      REWIND NBAND1
      REWIND NBAND2
      READ(NBAND1)NZF,MUL,
     * (LREG(K),K=1,NZOPQU),NZBASV,(NZRHO(K),K=1,NZF)
c      WRITE(6,*) '(nband1): ',
c     * NZF,MUL,(LREG(K),K=1,NZOPQU),NZBASV,(NZRHO(K),K=1,NZF)
      IF(NZBASV.GT.NZBMAX) THEN
         PRINT 1009, NZBASV, NZBMAX
         STOP 2
      ENDIF
      IF (MODUS.EQ.0) GOTO 30
      REWIND NBAND3
      STOP 12
      READ (NBAND3) NZF1, MUL1, (LREG(K), K=12,NZOPQU), NZBAS1,
     *              (NZRHO1(K),K=1,NZF1)
      IF (NZF1.NE.NZF .OR. MUL1.NE.MUL .OR. NZBAS1.NE.NZBASV) THEN
         WRITE (6,1091)
         WRITE (6,1002) NZF, NZF1, MUL, MUL1, NZBASV, NZBAS1
         STOP 1
      ENDIF
      DO 22, K=1, NZF
         IF (NZRHO1(K).NE.NZRHO(K)) THEN
            WRITE (6,1091)
            WRITE (6,1002) NZRHO(K), NZRHO1(K)
            STOP 1
         ENDIF
22    CONTINUE
30    CONTINUE
      WRITE(6,1010) MUL,(K, K, MREG(K),K=1,NZOPER)
      IF (IQUAK.GT.0) WRITE (6,1016)
      DO 1 N=1,NZBASV
      READ(NBAND1) MM,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     * (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),(PAQ(J,N),J=1,MM),KPB(N)
c      WRITE(6,*) '(nband1): ',
c     * (MLWERT(J,N),J=1,5)
      NZPAQ(N)=MM
      IF (MM.GT.NZPARM) THEN
         WRITE (6,1008) MM, NZPARM
         STOP 3
      ENDIF
      IF (IQUAK.GT.0)
     *     WRITE (6,1017) N,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     *     (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),MM,KPB(N)
      IF (MODUS.EQ.0) GOTO 1
      READ (NBAND3) MM1,(MMASS1(J,N),J=1,2),(MMLAD1(J,N),J=1,2),
     * (MMS1(J,N),J=1,3),(MLWER1(J,N),J=1,5),(PAQ1(J,N),J=1,MM1),KPB1(N)
      ICHECK=0
      IF (MM.NE.MM1) ICHECK=1
      DO 23, J=1,5
         IF (MLWER1(J,N).NE.MLWERT(J,N)) ICHECK=1
         IF (J.GT.3) GOTO 23
         IF (MMS1(J,N).NE.MMS(J,N)) ICHECK=1
         IF (J.GT.2) GOTO 23
         IF (MMASS1(J,N).NE.MMASSE(J,N)) ICHECK=1
         IF (MMLAD1(J,N).NE.MMLAD(J,N)) ICHECK=1
23    CONTINUE
      IF (ICHECK.GT.0) THEN
         WRITE (6,1091)
         WRITE (6,1017) N,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     *     (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),MM,KPB(N)
         WRITE (6,1017) N,(MMASS1(J,N),J=1,2),(MMLAD1(J,N),J=1,2),
     *     (MMS1(J,N),J=1,3),(MLWER1(J,N),J=1,5),MM1,KPB1(N)
         STOP 1
      ENDIF
      ICHECK=0
      DO 24, J=1, MM
         IF (PAQ1(J,N).NE.PAQ(J,N)) ICHECK=1
24    CONTINUE
      IF (ICHECK.GT.0) THEN
         WRITE (6,1091)
         WRITE (6,1000) (PAQ(J,N), PAQ1(J,N), J=1, MM)
         STOP 1
      ENDIF
    1 CONTINUE
C
      IF (ISTEU.LT.3) LAD=MMLAD(1,1)+MMLAD(2,1)
C
C
C     EINLESEN DER GESAMTDREHIMPULSE UND DER PARITAETEN
C     1 = -  und  2 = +    only deltaPi is relevant
C               2*( Jl   Jr              m_jl m_L )  
      READ(5,1002)JWSL,JWSR,NPARL,NPARR,JWSLM,MULM
      IF (JWSL.NE.JWSR) MREG(1)=0
C     BEI NORM MUESSEN GESAMTDREHIMPULSE LI UND RE UEBEREINSTIMMEN
C
C     BESTIMMUNG DER CLEBSCH DES RED. MATR.-EL.
      GJL=.5*REAL(JWSL)
      GJLM=.5*REAL(JWSLM)
      GJR=.5*REAL(JWSR)
      AK=REAL(MUL)
      AKM=.5*REAL(MULM)
c      AKM=GJL-GJR

      AJRD=REAL(JWSR+1)
      MUL2=2*MUL
      
      CL=CLG(INT(2*AK), INT(2*GJR),INT(2*GJL),
     1      INT(2*AKM),INT(2*(GJLM-AKM)))
c      WRITE (6,1204) AK,AKM,GJR,(GJLM-AKM),GJL,GJLM,CL
C      CL=YG(GJR,AK,GJL,GJR,AKM)
      IF(CL.EQ.0.) STOP 4
C
      DO 1126 NZERL=1,NZF
      NBVO = 1
      DO 1127 NZERLE=1,NZERL-1
1127  NBVO = NBVO + NZRHO(NZERLE)
1126  NPARZ(NZERL) = MOD(MLWERT(3,NBVO)+MLWERT(4,NBVO),2)

c C     AUDRUCK DER GESDAMTDREHIMPULSE UND DER PARITAET
c       IF(NPARL.EQ.1) GOTO 570
c       WRITE(6,1024) JWSL
c       GOTO 581
c 570   WRITE(6,1025) JWSL
c 581   IF(NPARR.EQ.1) GOTO 670
c       WRITE(6,1034) JWSR
c       GO TO 681
c 670   WRITE(6,1035) JWSR
c 681   CONTINUE
C 
      WRITE(6,1036) EK(1)
      READ(5,1002) NZKL,NZKR
C
130   continue
c array initialization
      DM  = 0.
      DN  = 0.
      DNN = 0.
      FGN = 1.
C
      MKCMIN=1
      MKCMAX=11
      NTI=1
      NBAND=NBAND1
C
      IRHO=NZRHO(1)
      DO 140 MFL=1,NZF
C     LOOP ZERLEGUNGEN LINKS
      IRHO=NZRHO(MFL)
C
      MFRMAX=MFL
C
      DO 139 MFR=1, MFRMAX
C     LOOP ZERLEGUNGEN RECHTS
      JRHO=NZRHO(MFR)
C
      DO 41 MKC=MKCMIN, MKCMAX
C     LOOP OPERATOREN
C
      A=IABS(((-1)**MUL-1)/2)
c      write(nout,*)'A=',A
      AA=IABS(NPARZ(MFL)-NPARZ(MFR))
c      write(nout,'(A19,2I3)')'(ecce) Parity L/R: ',
c     *  NPARZ(MFL),NPARZ(MFR)
      IF(LREG(MKC).LE.0) GOTO 41
      FPAR = 1.
C
      GOTO(104,107,107,107,107,107,107,107,107,105,105) MKC
103   STOP 5
104   A=0.
105   IF (A.EQ.AA) GOTO 106
      WRITE (6,1203) MKC
      write(6,*)'MUL,IABS(((-1)**MUL-1)/2)',MUL,IABS(((-1)**MUL-1)/2)
      FPAR = 0.
      GOTO 106
107   WRITE(6,*)'No implementation for MKC=',MKC
      STOP 107
106   CONTINUE
C
C
c      write(6,'(A13,3I3)')'Zl,Zr - MKC: ',MFL,MFR,MKC
C 
C     LOOP BASISVEKTOR-MATRIZEN
C      DO 40 NLES=1,MLES
      DO 401 NBVL=1,IRHO
        DO 402 NBVR=1,JRHO
C
      IF (MFL.ne.MFR) THEN
C        NTI = 1 if 1<=MKC<=11        
         READ (NBAND) NUML,NUMR,IK1,JK1,LL1,
     *       ((FGN(K,L),
     * (IDUMMY,DNN(K,L,J),J=1,LL1),L=1,JK1),K=1,IK1)
          NZREL(MFL) = IK1
          NZREL(MFR) = JK1
C 
      write(6,'(A13,5I4)') '(from qual): ',NUML,NUMR,IK1,JK1,LL1
      write(6,'(2F18.8)') 
     *     ((FGN(K,L),DNN(K,L,1),L=1,JK1),K=1,IK1)

c     
      ELSE
        IF (NBVL.le.NBVR) THEN
C          
         READ (NBAND) NUML,NUMR,IK1,JK1,LL1,
     *       ((FGN(K,L),
     * (IDUMMY,DNN(K,L,J),J=1,LL1),L=1,JK1),K=1,IK1)
C
      write(6,'(A13,5I4)') '(from qual): ',NUML,NUMR,IK1,JK1,LL1
      write(6,'(A28,E12.4,I3,E12.4)')
     * 'FGN(1,1),IDUMMY,DNN(1,1,1): ',FGN(1,1),IDUMMY,DNN(1,1,1)
C
         IF (MFL.ne.MFR) stop 23
         NZREL(MFL) = IK1
C         NZREL(MFR) = JK1
        ENDIF
C
      ENDIF
c      if(nzero.ne.2) goto 142
      LBL=MLWERT(5,NUML)
      LBL2=2*LBL
      LBR=MLWERT(5,NUMR)
      LBR2=2*LBR
      ML=MMS(3,NUML)
      SPL=.5* REAL(ML)
      MR=MMS(3,NUMR)
      SPR=.5* REAL(MR)
C      F=YG(GJR,AK,GJL,GJR,AKM)
      F=CLG(INT(2*AK), INT(2*GJR),INT(2*GJL),
     1      INT(2*AKM),INT(2*(GJLM-AKM)))
      if(F.NE.CL) STOP 89
c      WRITE (6,1204) AK,AKM,GJR,(GJLM-AKM),GJL,GJLM,F
C           1  2- SPIN -5  6- BAHN -9 Sp Sn
      GOTO(99,92,92,92,92,91,91,91,91,91,91), MKC
89    STOP 11
C
91    CONTINUE
C     BAHNOPERATOREN, SIEGERT UND KORREKTUROPERATOR
      IF(ML.NE.MR) THEN
C         WRITE (6,1200) MKC, ML, MR
         FPAR = 0.
      ENDIF
C
C    o/srank: rank of the spatial/spin component of the radiation operator
      ISRANK2  = INT(0)
C    if spin rank=0, I set the m projection maximal which is allowed b/c
C    this is the reduced matrix element       
      IORANK2  = INT(MUL2)
      FK1new = (-1)**(AK-GJR+GJL)*SQRT(JWSR+1.)*SQRT(MUL2+1.)
     1        *F9J(LBL2,LBR2,IORANK2,ML,MR,ISRANK2,JWSL,JWSR,MUL2)
C
c      write(6,'(9I3)')LBL2,LBR2,IORANK2,ML,MR,ISRANK2,JWSL,JWSR,MUL2
c      write(6,'(2F8.4)')FK1new,CL
      GOTO 100
C
  92  CONTINUE
C     SPINOPERATOREN
      FK1=(-1)**((ML+MR+LBL2+LBR2+JWSL+JWSR)/2)
      IF (MKC.EQ.2.OR.MKC.EQ.3) FK1=-FK1
      FK1=FK1*SQRT(AJRD*(2.*AK+1.))
C    PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
      MUL2M1=MUL2
      IF(MKC.EQ.4.OR.MKC.EQ.5) MUL2M1=MUL2+2-4*(JWIED-1)
      FK1=FK1*F9J(ML,MR,2,LBL2,LBR2,MUL2M1,JWSL,JWSR,MUL2)

      ISRANK2=2
      IORANK2=MUL2
      IF(MKC.EQ.4.OR.MKC.EQ.5) IORANK2=MUL2+2-4*(JWIED-1)
C see eq.(12) this is not the multipole-expansion L^      
      FK1new = SQRT(JWSR+1.)*SQRT(MUL2+1.)
     1        *F9J(LBL2,LBR2,IORANK2,ML,MR,ISRANK2,JWSL,JWSR,MUL2)
      GOTO 100
C
  93  CONTINUE
C     ELEKTRISCH PION SEAGULL
      MUL2MH=JWIED/(KWIED/2+1)
      MUL2M1=MUL2+KWIED-2*(JWIED-MUL2MH)
      MUL2M2=MUL2+2-4*MUL2MH
      GOTO 95
C
  94  CONTINUE
C     MAGNETISCH PION SEAGULL
      MUL2M1=MUL2+KWIED-2*JWIED+1
      MUL2M2=MUL2
C
  95  CONTINUE
C     EL. + MAGN. PION SEAGULL
      IF (MOD(MKC,2).EQ.1) THEN
         MSPIN2=4
      ELSE
         MSPIN2=2
      ENDIF
C     MSPIN2: 2*RANG DES SPINANTEIL DES OPERATORS
      FK1=(-1)**((MSPIN2+MUL2M1-MUL2)/2)
      FK1=FK1*SQRT(AJRD*(2.*AK+1.))
      FK1=FK1*SQRT(REAL(MSPIN2+1))*F6J(MUL2,MUL2M2,2,2,MSPIN2,MUL2M1)
      FK1=FK1*F9J(LBL2,ML,JWSL,LBR2,MR,JWSR,MUL2M1,MSPIN2,MUL2)
C     PHASE FUER VERTAUSCHEN DER BASISVEKTOREN LINKS UND RECHTS
      GOTO 100
C
   99 CONTINUE
C     NORM
      IF (ML.NE.MR) THEN
        WRITE (6,1200) MKC, ML, MR
c        STOP 13
      ENDIF 
      FK1=(-1)**((LBL2+ML+JWSR)/2)
c      FK1=FK1*SQRT(AJRD/(2.*SPR+1))
C     HIER WIRD  DER FUER DIE NORM FALSCHE CLEBSCH-GORDAN-KOEFFIZIENT
C     DES RED. MATR.-ELEMENTS HERAUSGEKUERZT.
      FK1=FK1*F6J(LBL2,LBR2,0,JWSL,JWSR,ML)
c      stop 666
c      FK1=FK1*F6J(LBR2,MR,JWSR,ML,LBL2,0)
      FK1new=FK1/CL
C
  100 CONTINUE
C  for F1 <J'|L|J> + F2 <J|L|J'>
      F=CL
      IF (MREG(MKC).eq.0) THEN
      F = 0.
      write(6,*) '(ecce) MKC = ',MKC
c      stop 100
      ENDIF
C     ALLE OPERATOREN
C                 = hbarc/mn for siegert proton      
      F1=F*FK1new*GEFAK(MKC)*FPAR
      write(6,'(A30,5F12.8,/)')'F1=F*FK1new*GEFAK(MKC)*FPAR = ',
     *           F1,F,FK1new,GEFAK(MKC),FPAR

      KANL=1
      KANR=1
C LL1 is of order 1 for small angular momenta and multipolarities
C
c      write(nout,'(A18,2F12.6)')'(ecce):  F1 = ',F1
C
      DO 47 JJ = 1,LL1
C JJ/LL1 accounts for the d's (see A.4 - Unkelbach)         
C              nrm el-spin  mag-spin el-bahn mag-bahn siegert
C                  prot neu p   n    p   n   p   n    p   n
          GOTO(586,587, 587,588,588, 588,588,587,587, 587,587), MKC
C
  586 CONTINUE
C         NORM
          JQ=0
          GOTO 589
C
  587 CONTINUE
C         EL. SPIN- UND MAGN. BAHNOPERATOREN UND SIEGERTOPERATOR
          JQ=2*(JJ-1)+MOD(MUL,2)
          GOTO 589
C
  588 CONTINUE
C         MAGN. SPIN- UND EL. BAHNOPERATOREN
          JQ=2*(JJ-1)+MOD((MUL+1),2)
C
  589 CONTINUE
C
      DO 458 K=1,IK1
      DO 458 L=1,JK1
      if(MKC.ne.1) then        
      DNN(K,L,JJ) = 
     *    DNN(K,L,JJ)*
     *    F1*
     *    (EK(1)**JQ)*
     *    EXP((EK(1)**2)*FGN(K,L))
      ELSE
      DNN(K,L,JJ) = DNN(K,L,JJ)
      endif
C     AUSDRUCK DER OP-WERTE UND DER K-POTENZ LAMBDA
c      write(nout,'(A13,F8.4,3I3)')'(ecce) DNN = ',DNN(K,L,JJ),K,L,JJ
      IF(IQUAK.ge.0.and.ABS(FGN(K,L)).gt.0) then
      WRITE(6,'(A42,7I3,3F12.8)') 
     *         'MFL,MFR,MKC,NBVL,NBVR,K,L,FGN(K,L),F1,DNN: ',
     *           MFL,MFR,MKC,NBVL,NBVR,K,L,
     *           FGN(K,L),F1,DNN(K,L,JJ)
      write(6,'(/,A30,E12.4)')'F1*EK**JQ*EXP(EK**2*FGN(K,L))=',
     *           F1*(EK(1)**JQ)*EXP((EK(1)**2)*FGN(K,L))
      write(6,'(/,A10,2F12.8,I3)')'F1,EK,JQ: ',
     *           F1,EK(1),JQ
      endif
  458 CONTINUE
   47 CONTINUE
C
      DO 459 K=1,IK1
      DO 459 L=1,JK1        
      DO 459 J=1,LL1
      DN(K,L) = DN(K,L) + DNN(K,L,J)
C
  459 CONTINUE    
C
      NROWOz = 1
      NCOLOz = 1
      DO 221 nr=1,MFL-1
  221  NROWOz = NROWOz + NZRHO(nr)*NZREL(nr)
      DO 222 nc=1,MFR-1
  222  NCOLOz = NCOLOz + NZRHO(nc)*NZREL(nc)
C
c      write(nout,'(A20,2I5)') '(ecce): row0, col0: ',NROWOz,NCOLOz  
      NROWOv=NROWOz
      NCOLOv=NCOLOz
      DO 223 nr=1,NBVL-1
  223  NROWOv = NROWOv + NZREL(MFL)
      DO 224 nc=1,NBVR-1
  224  NCOLOv = NCOLOv + NZREL(MFR)

      NROW = NROWOv
      DO 469 K=1,IK1
      NCOL = NCOLOv
      DO 468 L=1,JK1
      if(ABS(DN(K,L)).lt.1E-20) DN(K,L)=0
      DM(NROW,NCOL,MKC) = DN(K,L)
c      write(nout,'(A11,I4,A1,I4,A1,I4,A4,E18.8)')'(ecce): DM(',
c     *   NROW,',',NCOL,',',MKC,') = ',DN(K,L)
      NCOL = NCOL + 1
  468 CONTINUE
      NROW = NROW + 1
  469 CONTINUE
C
      DN = 0.
      DNN= 0.
C     ENDE LOOP BASISVEKTOR-RECHTS
  402 CONTINUE
C     ENDE LOOP BASISVEKTOR-LINKS      
  401 CONTINUE
C     ENDE LOOP OPERATOREN
   41 CONTINUE
C     ENDE LOOP ZERLEGUNGEN RECHTS
  139 CONTINUE
C     ENDE LOOP ZERLEGUNGEN LINKS
  140 CONTINUE
C 
c      write(nout,*)'(ecce):',NCOL,NROW
C     BESTIMMUNG VON SIEGERT OPWERT = op10 + op11
c      WRITE(NBAND2,1638)
1638  FORMAT('      E [fm]   JL  MUL   JR   JM', 
     * ' MULM   <JL,JM|MUL|JR>')
      DO 143 K=1,NROW-1
      DO 143 L=1,NCOL-1
  143 WRITE(6,'(A32,4E12.4)') 
     *      'DM(L,L,1),DM(K,K,1),DM(K,L,10),DM(K,L,11):',
     *       DM(L,L,1),DM(K,K,1),DM(K,L,10),DM(K,L,11)
      WRITE(NBAND2)
     * (( (DM(K,L,10)+DM(K,L,11))/SQRT(DM(L,L,1)*DM(K,K,1))
     *   ,L=1,NCOL-1 ),K=1,NROW-1 )
C
1637  FORMAT(E12.4,5I5,'     ',E20.14)      
C
C
980   WRITE (6,1026)
      STOP
C
1000  FORMAT(6E12.4)
1001  FORMAT(E20.12)
1002  FORMAT(30I3)
1003  FORMAT('1','PROGRAMM ENEMB',/,1X,14('='),////,
     *       1X,'VERSION VOM 01.02.91',///,1X)
1004  FORMAT(' AUS SORT',4I10)
1005  FORMAT(1X,'ZU VIELE UEBERLAGERUNGSKOEFFIZIENTEN',2I4)
1006  FORMAT(27H FEHLER IN DEN EINGABEDATEN ,4I3)
1007  FORMAT(' TOO MANY RADIALPARAMETERS*CHANNELS',2I5)
1008  FORMAT(1X,'ZU VIELE RADIALWEITEN',2I4)
1009  FORMAT(' TOO MANY BASISVECTORS',2I10)
1010  FORMAT(1X,'L = ',I2,' - OPERATOREN',18(/,1X,'OPERATOR',I3,
     *       ': MREG(',I2,') = ',I1))
1011  FORMAT(30H BENUTZTE RADIALFUNKTIONEN      /30I3)
1012  FORMAT(1X,'ZU VIELE KANAELE',4I4)
1013  FORMAT(6F12.4)
1014  FORMAT(//,1X,'G-FAKTOREN:   PROTON  BAHN',F12.4,
     *       /,15X,'PROTON  SPIN',F12.4,/,15X,'NEUTRON BAHN',
     *       F12.4,/,15X,'NEUTRON SPIN',F12.4)
1015  FORMAT(//,1X,'VORFAKTOREN:',13(/,1X,'GEFAK(',I2,') = ',F12.4))
1016  FORMAT(///,1X,'DEFINITION DER BASISVEKTOREN:',//,1X,
     *       'NR. DES  NUKLEONENZAHL  LADUNG  SPINS            ',
     *       'DREHIMPULSE                ZAHL DER     POLYNOM-',/,1X,
     *       'BASV          M1    M2   Q1 Q2     S1   S2 SGES  ',
     *       '   L1   L2 L1,2 LREL LGES  REL.-WEITEN  POTENZ',/,1X)
1017  FORMAT(1X,I7,3X,2I6,2X,2I3,2X,3(I3,'/2'),2X,5I5,5X,I8,2X,I8)
1018  FORMAT (2H0/,I3,4H ) =,4(E12.4,2H /,I3,2H )),
     1   30(/,9X,4(E12.4,2H /,I3,2H ))))
1019  FORMAT(1X,'NUML,NUMR,IK1,JK1,LL1',5I3,/,1X,I4,'TE DC, ',
     * I3,' TE INNERE WEITE LINKS,',I3,'TE INNERE WEITE RECHTS')
1020  FORMAT('0')
1021  FORMAT(' FG= ',E12.5,4(' IQ=',I3,' DN= ',E12.5,:))
1023  FORMAT(/,1X,'IND:',25I3)
1024  FORMAT(/1X,'J(FINAL)   = ',I3,' /2  +'/)
1025  FORMAT(/1X,'J(FINAL)   = ',I3,' /2  -'/)
1026  FORMAT(///,1X,'ENDE DER RECHNUNG VON ENEMB')
1029  FORMAT(/,1X,'NORM:',G14.6)
1030  FORMAT(1X,'ES WIRD PHOTOABSORBTION GERECHNET',///,1X)
1031  FORMAT(1X,'ES WIRD ELEKTRONENSTREUUNG GERECHNET',///,1X)
1032  FORMAT(1X,'REDUZIERTES MATRIXELEMENT DES OPERATORS',
     *       I3,':   ',E16.8)
1033  FORMAT(////,1X,'NORMOPERATOR',/,1X,12('='))
1034  FORMAT(1X,'J(INITIAL) = ',I3,' /2  +'//)
1035  FORMAT(1X,'J(INITIAL) = ',I3,' /2  -'//)
1036  FORMAT(/,1X,'ENERGIE  DES PHOTOENS:',F12.6,' MEV')
1037  FORMAT(1X,'MFL, MFR',2I3,' MKC',1I3,' NLES/MLES',2I3,
     *       ' RWL',1I3,' RWR',1I3,' EXPONENT EFG = ',E12.6,' FA=',
     *       E10.4,2X,'OP  ',9E10.4)
1038  FORMAT(1X,'KANL, KANR',2I5,' K2, L2',2I5,
     *       ' KL,LK',2I5,' EXPONENT EFG = ',E16.8,' FB = ',
     *       E16.8,/,1X,'OP  ',9E14.4)
1039  FORMAT(/,1X,'RED. MATRIXELEMENT:',G14.6,:,' E * FERMI**',I3)
1040  FORMAT('1','AUSDRUCK DER ERGEBNISSE',/,1X,23('='))
1041  FORMAT(/,1X,'K-VEKTOR DES PHOTONS:',F12.6,' FERMI**(-1)')
1050  FORMAT(1X,'LAMBDA  ',I2,'    OCP  ',E12.5,'   OCP*'
     *       ,'(EK**LAMBDA)  ',E12.5,'    OPH1  ',E12.5)
1051  FORMAT(//,1X,'OPH1  ',E12.5,' * ',
     *       'VORFAKTOR  EXP(',E12.5,'*(EK**2))  =  ',E12.5,/,1X,
     *       'NEUES OPERATORMATRIXELEMENT OPWERT',E12.5,/,' ')
1052  FORMAT(////,1X,'MAGNETISCHE OPERATOREN',/,1X,22('='))
1053  FORMAT(////,1X,'ELEKTRISCHE OPERATOREN',/,1X,22('='))
1054  FORMAT(//,1X,'E',I3,' SPINOPERATOR')
1055  FORMAT(//,1X,'E',I3,' BAHNOPERATOR')
1056  FORMAT(//,1X,'E',I3,' SIEGERT-OPERATOR')
1057  FORMAT(//,1X,'E',I3,' PION-SEAGULL-OPERATOR')
1058  FORMAT(//,1X,'M',I3,' SPINOPERATOR')
1059  FORMAT(//,1X,'M',I3,' BAHNOPERATOR')
1060  FORMAT(//,1X,'M',I3,' PION-SEAGULL-OPERATOR')
1064  FORMAT(/,1X,'B(E',I2,') = ',G14.6,' E**2 * FERMI **',I3)
1065  FORMAT(/,1X,'B(M',I2,') = ',G14.6,' E**2 * FERMI**',I3,
     *'     =     ',G14.6,' KERNMAGNETON**2  *  FERMI**',I3)
1066  FORMAT(1X,'WIDTH(E',I2,') = ',G14.6,' MEV')
1067  FORMAT(1X,'WIDTH(M',I2,') = ',G12.4,' MEV')
1080  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR')
1081  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR (MIT SIEGERT-OPERATOR)')
1082  FORMAT(///,1X,'E',I3,' GESAMTOPERATOR MIT PION-SEAGULL-',
     *                     'OPERATOR)')
1083  FORMAT(///,1X,'M',I3,' GESAMTOPERATOR')
1084  FORMAT(///,1X,'M',I3,' GESAMTOPERATOR MIT PION-SEAGULL-',
     *                     'OPERATOR)')
1090  FORMAT(1X,'WURDE NICHT BERECHNET')
1091  FORMAT(1X,'VERGLEICHSFEHLER ZWISCHEN QUAOUT UND QUALMOUT')
1200  FORMAT(1X,'BEI OPERATOR',I2,'  SL.NE.SR ',2I5)
1201  FORMAT(////,1X,'OPERATOR',I3,/,1X,'===========',/,'0')
1202  FORMAT('-+- ',1X,4I3, (6E12.4))
1203  FORMAT(1X,'BEI OPERATOR',I3,' FALSCHE PARITAET')
1204  FORMAT(1X,'(',4F6.1,'  / ',2F6.1,' ) = ',F6.2)
1300  FORMAT(I10,' ELEMENTE FUER WEITE RECHTS,LINKS,DC,OPERATOR',
     * ',ZERLEGUNG RECHTS,LINKS ',6I5,' GESCHRIEBEN')
      END
C
      SUBROUTINE OUT(NEK,IP,OP,MTD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C     OUT DIENT ZUM AUSDRUCK DER ERGEBNISSE BEI ELEKTRONENSTREUUNG
C     AUSDRUCK IM GLEICHEN FORMAT WIE EXODUS
C
      INCLUDE 'par/ENEMB'
C
      COMMON /OUTPF/ EK(NZEKMA)
      COMMON /OUTPI/  INR, ISRB, JWSL, JWSR, MUL,
     *              NBAND2, JWSLM, MULM, MUL2
C
      EK2=EK(NEK)*EK(NEK)
      WRITE (6,1001) EK2,EK(NEK),JWSL,MUL2,JWSR,JWSLM,MULM,OP,MTD

      WRITE (NBAND2,1000) EK2, EK(NEK), MUL, INR, ISRB, IP,
     *                   JWSL, JWSR, 0, OP, 0., MTD
      RETURN         
1000  FORMAT (E12.4,' ',E12.4,' ',7I3,' ',E12.6,' ',E12.6,I3)
1001  FORMAT (2E12.4,5I6,' ',1E12.6,I4)
      END

      FUNCTION CLG(J1,J2,J3,M1,M2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)      
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C     
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C  
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      REAL*8 FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END

      FUNCTION F6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I F6J FUNCTION CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     ANGULAR MOMENTUM COUPLING TESTS FOR 6J COEFFICIENT
      F6J=0.0
      IF(J1.LT.0 .OR. J2.LT.0 .OR. J3.LT.0) RETURN
      IF(L1.LT.0 .OR. L2.LT.0 .OR. L3.LT.0) RETURN
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J1+L2+L3,2).NE.0) RETURN
      IF(L3.GT.J1+L2 .OR. L3.LT.ABS(J1-L2)) RETURN
      IF(MOD(L1+J2+L3,2).NE.0) RETURN
      IF(L3.GT.L1+J2 .OR. L3.LT.ABS(L1-J2)) RETURN
      IF(MOD(L1+L2+J3,2).NE.0) RETURN
      IF(J3.GT.L1+L2 .OR. J3.LT.ABS(L1-L2)) RETURN
      F6J=S6J(J1,J2,J3,L1,L2,L3)
      RETURN
      END
      FUNCTION F9J(JD1,JD2,JD3,JD4,JD5,JD6,JD7,JD8,JD9)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     F9J VERSION I  CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H.
      DIMENSION KN(6),KX(6),NN(6)
      J1=JD1   
      J2=JD2  
      J3=JD3 
      J4=JD4
      J5=JD5
      J6=JD6
      J7=JD7
      J8=JD8
      J9=JD9
      F9J= 0.0
C     ANGULAR MOMENTUM COUPLING TESTS FOR 9J COEFFICIENT 
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J4+J5+J6,2).NE.0) RETURN
      IF(J6.GT.J4+J5 .OR. J6.LT.ABS(J4-J5)) RETURN
      IF(MOD(J7+J8+J9,2).NE.0) RETURN
      IF(J9.GT.J7+J8 .OR. J9.LT.ABS(J7-J8)) RETURN
      IF(MOD(J1+J4+J7,2).NE.0) RETURN
      IF(J7.GT.J1+J4 .OR. J7.LT.ABS(J1-J4)) RETURN
      IF(MOD(J2+J5+J8,2).NE.0) RETURN
      IF(J8.GT.J2+J5 .OR. J8.LT.ABS(J2-J5)) RETURN
      IF(MOD(J3+J6+J9,2).NE.0) RETURN
      IF(J9.GT.J3+J6 .OR. J9.LT.ABS(J3-J6)) RETURN
      KN(1)=MAX0(IABS(J2-J6),IABS(J1-J9),IABS(J4-J8))
      KN(2)=MAX0(IABS(J2-J7),IABS(J5-J9),IABS(J4-J3))
      KN(3)=MAX0(IABS(J6-J7),IABS(J5-J1),IABS(J8-J3))
      KN(4)=MAX0(IABS(J6-J1),IABS(J2-J9),IABS(J5-J7))
      KN(5)=MAX0(IABS(J2-J4),IABS(J3-J7),IABS(J6-J8))
      KN(6)=MAX0(IABS(J3-J5),IABS(J1-J8),IABS(J4-J9))
      KX(1)=MIN0(J2+J6,J1+J9,J4+J8)
      KX(2)=MIN0(J2+J7,J5+J9,J4+J3)
      KX(3)=MIN0(J6+J7,J5+J1,J8+J3)
      KX(4)=MIN0(J1+J6,J2+J9,J5+J7)
      KX(5)=MIN0(J2+J4,J3+J7,J6+J8)
      KX(6)=MIN0(J3+J5,J1+J8,J4+J9)
      DO 35 K=1,6
   35 NN(K)=KX(K)-KN(K)
      KSIGN=1
      I=MIN0(NN(1),NN(2),NN(3),NN(4),NN(5),NN(6))
      DO 40 K=1,6
      IF(I-NN(K))40,50,40
   40 CONTINUE
   50 KMIN=KN(K)+1
      KMAX=KX(K)+1
      GO TO(130,52,53,54,55,56),K
   52 J=J1
      J1=J5
      J5=J
      J=J3
      J3=J8
      J8=J
      J=J6
      J6=J7
      J7=J
      GO TO 130
   53 J=J2
      J2=J7
      J7=J
      J=J3
      J3=J4
      J4=J
      J=J5
      J5=J9
      J9=J
      GO TO 130
   54 J=J1
      J1=J2
      J2=J
      J=J4
      J4=J5
      J5=J
      J=J7
      J7=J8
      J8=J
      GO TO 120
   55 J=J1
      J1=J3
      J3=J
      J=J4
      J4=J6
      J6=J
      J=J7
      J7=J9
      J9=J
      GO TO 120
   56 J=J2
      J2=J3
      J3=J
      J=J5
      J5=J6
      J6=J
      J=J8
      J8=J9
      J9=J
  120 KSIGN=(1-MOD(J1+J2+J3+J4+J5+J6+J7+J8+J9,4))
C     SUMMATION OF SERIES OF EQUATION (2)  
  130 SUM=0.0                             
      SIG=(-1)**(KMIN-1)*KSIGN
      FLK=KMIN                           
      DO 200 K=KMIN,KMAX,2              
      TERM=FLK*S6J(J1,J4,J7,J8,J9,K-1)*S6J(J2,J5,J8,J4,K-1,J6)
     1*S6J(J3,J6,J9,K-1,J1,J2)
      FLK=FLK+2.0                    
  200 SUM=SUM+TERM                    
      F9J=SUM*SIG
      RETURN                       
      END                         
      FUNCTION S6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)        
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I  FORTRAN IV
      DIMENSION MA(4),MB(3),MED(12)
      COMMON /FACT/FL(322),NCALL
      DATA NCALL/1/
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     DETERMINE WHETHER TO CALCULATE FL(N) S
      IF(NCALL.EQ.0) GOTO 15
      NCALL=0
C     CALCULATE FL(N) S
      FL(1)=0.0
      FL(2)=0.0
      DO 50 N= 3,322
      FN=N-1
   50 FL(N)=FL(N-1)+LOG(FN)
   15 MED(1)=(-J1+J2+J3)/2
      MED(2)=(+J1-J2+J3)/2
      MED(3)=(+J1+J2-J3)/2
      MED(4)=(-J1+L2+L3)/2
      MED(5)=(+J1-L2+L3)/2
      MED(6)=(+J1+L2-L3)/2
      MED(7)=(-L1+J2+L3)/2
      MED(8)=(+L1-J2+L3)/2
      MED(9)=(+L1+J2-L3)/2
      MED(10)=(-L1+L2+J3)/2
      MED(11)=(+L1-L2+J3)/2
      MED(12)=(+L1+L2-J3)/2
      MA(1)=MED(1)+MED(2)+MED(3)
      MA(2)=MED(4)+MED(5)+MED(6)
      MA(3)=MED(7)+MED(8)+MED(9)
      MA(4)=MED(10)+MED(11)+MED(12)
      MB(1)=MA(1)+MED(12)
      MB(2)=MA(1)+MED(4)
      MB(3)=MA(1)+MED(8)
C     DETERMINE MAXIMUM OF (J1+J2+J3),(J1+L2+L3),(L1+J2+L3),(L1+L2+J3)
      MAX=MA(1)
      DO 30 N=2,4
      IF (MAX-MA(N)) 20,30,30
   20 MAX=MA(N)
   30 CONTINUE
C     DETERMINE MINIMUM OF (J1+J2+L1+L2), (J2+J3+L2+L3),(J3+J1+L3+L1)
      MIN=MB(1)
      DO 51 N=2,3
      IF (MIN-MB(N)) 51,51,40
   40 MIN=MB(N)
   51 CONTINUE
      MINH=MIN
      KMAX=MIN-MAX
      MINP1=MIN+1
      MINI  =MINP1-MA(1)
      MIN2=MINP1-MA(2)
      MIN3=MINP1-MA(3)
      MIN4=MINP1-MA(4)
      MIN5=MINP1+1
      MIN6=MB(1)-MIN
      MIN7=MB(2)-MIN
      MIN8=MB(3)-MIN
      UK=1.E-15
      S=1.0E-15
      IF (KMAX) 65,65,55
   55 DO 60 K=1,KMAX
      UK=-UK*DBLE(MINI-K)*DBLE(MIN2-K)*DBLE(MIN3-K)*DBLE(MIN4-K)/
     1 (DBLE(MIN5-K)*DBLE(MIN6+K)*DBLE(MIN7+K)*DBLE(MIN8+K))
C     CUT OFF SERIES AT 1.0D-25
      IF(ABS(UK)-1.E-25) 65,60,60
   60 S=S+UK
   65 S=S*1.0E+15
C     CALCULATE DELTA FUNCTIONS
      DELOG=0.0
      DO 70 N=1,12
      NUM=MED(N)
   70 DELOG=DELOG+FL(NUM+1)
      NUM1=MA(1)+2
      NUM2=MA(2)+2
      NUM3=MA(3)+2
      NUM4=MA(4)+2
      DELOG=DELOG-FL(NUM1)-FL(NUM2)-FL(NUM3)-FL(NUM4)
      DELOG=0.5*DELOG
      ULOG=FL(MIN5)-FL(MINI)-FL(MIN2)-FL(MIN3)-FL(MIN4)-FL(MIN6+1)-
     1   FL(MIN7+1)-FL(MIN8+1)
      PLOG=DELOG+ULOG
      P=EXP (PLOG)
      S6J=P*S
      IF(MOD(MINH,2).NE.0)  S6J=-S6J
      RETURN
      END      